2017/09/05 13:52:36 [INFO] Terraform version: 0.9.11  
2017/09/05 13:52:36 [INFO] Go runtime version: go1.8.3
2017/09/05 13:52:36 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "apply"}
2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:52:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [INFO] CLI command args: []string{"apply"}
2017/09/05 13:52:36 [DEBUG] command: loading backend config file: /Users/ericyoung/my_github/mtg_price/terraform
2017/09/05 13:52:36 [DEBUG] command: no data state file found for backend config
2017/09/05 13:52:36 [DEBUG] New state was assigned lineage "adf5a3f7-070e-419b-bddb-b7d43f35e9a0"
2017/09/05 13:52:36 [INFO] command: backend initialized: <nil>
2017/09/05 13:52:36 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/09/05 13:52:36 [INFO] backend/local: starting Apply operation
2017/09/05 13:52:36 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:52:36 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:52:36 [INFO] terraform: building graph: GraphTypeInput
2017/09/05 13:52:36 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677ce0), RawConfig:(*config.RawConfig)(0xc4206771a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42067c9c0), RawConfig:(*config.RawConfig)(0xc420677e60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42034a540), RawConfig:(*config.RawConfig)(0xc4201efa40), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc420010de0), (*config.Provisioner)(0xc420010f30), (*config.Provisioner)(0xc420011830), (*config.Provisioner)(0xc42043d200)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676360), RawConfig:(*config.RawConfig)(0xc420475920), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677020), RawConfig:(*config.RawConfig)(0xc4206764e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:52:36 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201ef5c0)}
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.profile var.region]
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] Starting graph walk: walkInput
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:52:36 [TRACE] [walkInput] Entering eval tree: provider.aws
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:52:36 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 13:52:36 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] Terraform version: 0.9.11
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] Go runtime version: go1.8.3
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] CLI command args: []string{"internal-plugin", "provider", "aws"}
2017/09/05 13:52:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:36 [INFO] Starting provider plugin aws
2017/09/05 13:52:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:36 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin893891782
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInputProvider
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [TRACE] [walkInput] Exiting eval tree: provider.aws
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:52:36 [TRACE] [walkInput] Entering eval tree: provider.aws (close)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:52:36 [TRACE] [walkInput] Exiting eval tree: provider.aws (close)
2017/09/05 13:52:36 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:52:36 [TRACE] [walkInput] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:52:36 [TRACE] [walkInput] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:52:36 [TRACE] [walkInput] Entering eval tree: provisioner.file (close)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:52:36 [TRACE] [walkInput] Exiting eval tree: provisioner.file (close)
2017/09/05 13:52:36 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:52:36 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "root"
2017/09/05 13:52:36 [DEBUG] vertex 'root.root': walking
2017/09/05 13:52:36 [INFO] terraform: building graph: GraphTypeValidate
2017/09/05 13:52:36 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676360), RawConfig:(*config.RawConfig)(0xc420475920), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677020), RawConfig:(*config.RawConfig)(0xc4206764e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677ce0), RawConfig:(*config.RawConfig)(0xc4206771a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42067c9c0), RawConfig:(*config.RawConfig)(0xc420677e60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42034a540), RawConfig:(*config.RawConfig)(0xc4201efa40), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc420010de0), (*config.Provisioner)(0xc420010f30), (*config.Provisioner)(0xc420011830), (*config.Provisioner)(0xc42043d200)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:52:36 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201ef5c0)}
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.graphTransformerMulti:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] Starting graph walk: walkValidate
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: provisioner.file
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 13:52:36 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: provider.aws
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:52:36 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] Terraform version: 0.9.11
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] Go runtime version: go1.8.3
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
2017/09/05 13:52:36 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:52:36 [INFO] Starting provisioner plugin file
2017/09/05 13:52:36 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:52:36 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin867228126
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: provisioner.file
2017/09/05 13:52:36 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:52:36 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] Terraform version: 0.9.11
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] Go runtime version: go1.8.3
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:52:36 [DEBUG] plugin: terraform: 2017/09/05 13:52:36 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:52:36 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:52:36 [INFO] Starting provisioner plugin remote-exec
2017/09/05 13:52:36 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:52:36 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin188637402
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:52:36 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:52:36 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: provisioner.file (close)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:52:36 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: provisioner.file (close)
2017/09/05 13:52:36 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "root"
2017/09/05 13:52:36 [DEBUG] vertex 'root.root': walking
2017/09/05 13:52:36 [INFO] backend/local: apply calling Refresh
2017/09/05 13:52:36 [INFO] terraform: building graph: GraphTypeRefresh
2017/09/05 13:52:36 [TRACE] No managed resources in state during refresh, skipping managed resource transformer
2017/09/05 13:52:36 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OutputTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

root - terraform.graphNodeRoot
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] Starting graph walk: walkRefresh
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "root"
2017/09/05 13:52:36 [DEBUG] vertex 'root.root': walking
2017/09/05 13:52:36 [INFO] backend/local: apply calling Plan
2017/09/05 13:52:36 [INFO] terraform: building graph: GraphTypePlan
2017/09/05 13:52:36 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42034a540), RawConfig:(*config.RawConfig)(0xc4201efa40), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc420010de0), (*config.Provisioner)(0xc420010f30), (*config.Provisioner)(0xc420011830), (*config.Provisioner)(0xc42043d200)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676360), RawConfig:(*config.RawConfig)(0xc420475920), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677020), RawConfig:(*config.RawConfig)(0xc4206764e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677ce0), RawConfig:(*config.RawConfig)(0xc4206771a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42067c9c0), RawConfig:(*config.RawConfig)(0xc420677e60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:52:36 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:52:36 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201ef5c0)}
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:52:36 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:36 [DEBUG] Starting graph walk: walkPlan
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:36 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:52:36 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:52:36 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:52:36 [TRACE] [walkPlan] Entering eval tree: provider.aws
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:36 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 13:52:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:36 [INFO] No assume_role block read from configuration
2017/09/05 13:52:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:36 [INFO] Building AWS region structure
2017/09/05 13:52:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:36 [INFO] Building AWS auth structure
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 13:52:37 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:37 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 13:52:37 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=9d4257abfb37236c8df94f2932dd868cb9987f9730e430318035a10033f46d89
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:37 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205237Z
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:37 [DEBUG] plugin: terraform: 
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 13:52:37 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 13:52:37 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:37 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:37 GMT
2017/09/05 13:52:37 [DEBUG] plugin: terraform: X-Amzn-Requestid: 264befb7-927c-11e7-8124-b7b918276b8e
2017/09/05 13:52:37 [DEBUG] plugin: terraform: 
2017/09/05 13:52:37 [DEBUG] plugin: terraform: 
2017/09/05 13:52:37 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 13:52:37 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 13:52:37 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:52:37 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:52:37 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 13:52:37 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 13:52:37 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:52:37 [DEBUG] plugin: terraform:     <RequestId>264befb7-927c-11e7-8124-b7b918276b8e</RequestId>
2017/09/05 13:52:37 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:52:37 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 13:52:37 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:37 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 13:52:37 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:37 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 13:52:37 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=d5244595200eab8b6eea37e58b0983edfe50d6227b347b46e81833789d51bd0c
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:37 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205237Z
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:37 [DEBUG] plugin: terraform: 
2017/09/05 13:52:37 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 13:52:37 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 13:52:38 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:38 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:37 GMT
2017/09/05 13:52:38 [DEBUG] plugin: terraform: X-Amzn-Requestid: 2695f10a-927c-11e7-817b-ddc7b055e934
2017/09/05 13:52:38 [DEBUG] plugin: terraform: 
2017/09/05 13:52:38 [DEBUG] plugin: terraform: 
2017/09/05 13:52:38 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 13:52:38 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:     <User>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:     </User>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:     <RequestId>2695f10a-927c-11e7-817b-ddc7b055e934</RequestId>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:52:38 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 13:52:38 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:38 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:38 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=20c2786c32a41f5d8959f59d82212ef7de34dbfaa2f680a1f309ebda7d618f54
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:38 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205238Z
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:38 [DEBUG] plugin: terraform: 
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 13:52:38 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 13:52:38 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:38 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:38 GMT
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:38 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:38 [DEBUG] plugin: terraform: 
2017/09/05 13:52:38 [DEBUG] plugin: terraform: 
2017/09/05 13:52:38 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:38 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:38 [DEBUG] plugin: terraform:     <requestId>253318ad-f7cf-472d-b52a-4ef89b9dd2c7</requestId>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:38 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 13:52:38 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: provider.aws
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:52:38 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:52:38 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:38 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: provisioner.file (close)
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: provisioner.file (close)
2017/09/05 13:52:38 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: provider.aws (close)
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:52:38 [TRACE] [walkPlan] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:52:38 [TRACE] [walkPlan] Exiting eval tree: provider.aws (close)
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "root"
2017/09/05 13:52:38 [DEBUG] vertex 'root.root': walking
2017/09/05 13:52:38 [INFO] terraform: building graph: GraphTypeApply
2017/09/05 13:52:38 [TRACE] DiffTransformer: starting
2017/09/05 13:52:38 [TRACE] DiffTransformer: Module: CREATE: aws_security_group.internet_access
  description:                           "" => "internet_access tcp port 80" (forces new resource)
  egress.#:                              "" => "1"
  egress.482069346.cidr_blocks.#:        "" => "1"
  egress.482069346.cidr_blocks.0:        "" => "0.0.0.0/0"
  egress.482069346.from_port:            "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:   "" => "0"
  egress.482069346.prefix_list_ids.#:    "" => "0"
  egress.482069346.protocol:             "" => "-1"
  egress.482069346.security_groups.#:    "" => "0"
  egress.482069346.self:                 "" => "false"
  egress.482069346.to_port:              "" => "0"
  ingress.#:                             "" => "1"
  ingress.2214680975.cidr_blocks.#:      "" => "1"
  ingress.2214680975.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.2214680975.from_port:          "" => "80"
  ingress.2214680975.ipv6_cidr_blocks.#: "" => "0"
  ingress.2214680975.protocol:           "" => "tcp"
  ingress.2214680975.security_groups.#:  "" => "0"
  ingress.2214680975.self:               "" => "false"
  ingress.2214680975.to_port:            "" => "80"
  name:                                  "" => "internet_access" (forces new resource)
  owner_id:                              "" => "<computed>"
  tags.%:                                "" => "1"
  tags.Name:                             "" => "internet_access"
  vpc_id:                                "" => "<computed>" (forces new resource)
CREATE: aws_security_group.splunk_access
  description:                          "" => "splunk_access tcp port 8080" (forces new resource)
  egress.#:                             "" => "1"
  egress.482069346.cidr_blocks.#:       "" => "1"
  egress.482069346.cidr_blocks.0:       "" => "0.0.0.0/0"
  egress.482069346.from_port:           "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:  "" => "0"
  egress.482069346.prefix_list_ids.#:   "" => "0"
  egress.482069346.protocol:            "" => "-1"
  egress.482069346.security_groups.#:   "" => "0"
  egress.482069346.self:                "" => "false"
  egress.482069346.to_port:             "" => "0"
  ingress.#:                            "" => "1"
  ingress.516175195.cidr_blocks.#:      "" => "1"
  ingress.516175195.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.516175195.from_port:          "" => "8080"
  ingress.516175195.ipv6_cidr_blocks.#: "" => "0"
  ingress.516175195.protocol:           "" => "tcp"
  ingress.516175195.security_groups.#:  "" => "0"
  ingress.516175195.self:               "" => "false"
  ingress.516175195.to_port:            "" => "8080"
  name:                                 "" => "splunk_access" (forces new resource)
  owner_id:                             "" => "<computed>"
  tags.%:                               "" => "1"
  tags.Name:                            "" => "splunk_access"
  vpc_id:                               "" => "<computed>" (forces new resource)
CREATE: aws_security_group.ssh_access
  description:                           "" => "ssh_access group" (forces new resource)
  egress.#:                              "" => "1"
  egress.482069346.cidr_blocks.#:        "" => "1"
  egress.482069346.cidr_blocks.0:        "" => "0.0.0.0/0"
  egress.482069346.from_port:            "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:   "" => "0"
  egress.482069346.prefix_list_ids.#:    "" => "0"
  egress.482069346.protocol:             "" => "-1"
  egress.482069346.security_groups.#:    "" => "0"
  egress.482069346.self:                 "" => "false"
  egress.482069346.to_port:              "" => "0"
  ingress.#:                             "" => "1"
  ingress.2541437006.cidr_blocks.#:      "" => "1"
  ingress.2541437006.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.2541437006.from_port:          "" => "22"
  ingress.2541437006.ipv6_cidr_blocks.#: "" => "0"
  ingress.2541437006.protocol:           "" => "tcp"
  ingress.2541437006.security_groups.#:  "" => "0"
  ingress.2541437006.self:               "" => "false"
  ingress.2541437006.to_port:            "" => "22"
  name:                                  "" => "ssh_access" (forces new resource)
  owner_id:                              "" => "<computed>"
  vpc_id:                                "" => "<computed>" (forces new resource)
CREATE: aws_security_group.tcp_internal_access
  description:                          "" => "internal_access group" (forces new resource)
  egress.#:                             "" => "1"
  egress.482069346.cidr_blocks.#:       "" => "1"
  egress.482069346.cidr_blocks.0:       "" => "0.0.0.0/0"
  egress.482069346.from_port:           "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:  "" => "0"
  egress.482069346.prefix_list_ids.#:   "" => "0"
  egress.482069346.protocol:            "" => "-1"
  egress.482069346.security_groups.#:   "" => "0"
  egress.482069346.self:                "" => "false"
  egress.482069346.to_port:             "" => "0"
  ingress.#:                            "" => "1"
  ingress.868428910.cidr_blocks.#:      "" => "1"
  ingress.868428910.cidr_blocks.0:      "" => "172.31.0.0/16"
  ingress.868428910.from_port:          "" => "1"
  ingress.868428910.ipv6_cidr_blocks.#: "" => "0"
  ingress.868428910.protocol:           "" => "tcp"
  ingress.868428910.security_groups.#:  "" => "0"
  ingress.868428910.self:               "" => "false"
  ingress.868428910.to_port:            "" => "65535"
  name:                                 "" => "internal_access" (forces new resource)
  owner_id:                             "" => "<computed>"
  tags.%:                               "" => "1"
  tags.Name:                            "" => "tcp_internal_access"
  vpc_id:                               "" => "<computed>" (forces new resource)
CREATE: aws_spot_instance_request.mtg_worker01
  ami:                          "" => "ami-e1679399" (forces new resource)
  associate_public_ip_address:  "" => "true" (forces new resource)
  availability_zone:            "" => "<computed>" (forces new resource)
  ebs_block_device.#:           "" => "<computed>" (forces new resource)
  ephemeral_block_device.#:     "" => "<computed>" (forces new resource)
  instance_state:               "" => "<computed>" (forces new resource)
  instance_type:                "" => "m3.medium" (forces new resource)
  ipv6_address_count:           "" => "<computed>" (forces new resource)
  ipv6_addresses.#:             "" => "<computed>" (forces new resource)
  key_name:                     "" => "<computed>" (forces new resource)
  network_interface.#:          "" => "<computed>" (forces new resource)
  network_interface_id:         "" => "<computed>" (forces new resource)
  placement_group:              "" => "<computed>" (forces new resource)
  primary_network_interface_id: "" => "<computed>" (forces new resource)
  private_dns:                  "" => "<computed>" (forces new resource)
  private_ip:                   "" => "<computed>" (forces new resource)
  public_dns:                   "" => "<computed>" (forces new resource)
  public_ip:                    "" => "<computed>" (forces new resource)
  root_block_device.#:          "" => "<computed>" (forces new resource)
  security_groups.#:            "" => "<computed>" (forces new resource)
  source_dest_check:            "" => "true" (forces new resource)
  spot_bid_status:              "" => "<computed>"
  spot_instance_id:             "" => "<computed>"
  spot_price:                   "" => "0.02" (forces new resource)
  spot_request_state:           "" => "<computed>"
  spot_type:                    "" => "persistent"
  subnet_id:                    "" => "subnet-401d891b" (forces new resource)
  tenancy:                      "" => "<computed>" (forces new resource)
  vpc_security_group_ids.#:     "" => "<computed>" (forces new resource)
  wait_for_fulfillment:         "" => "true"
2017/09/05 13:52:38 [TRACE] DiffTransformer: Resource "aws_security_group.splunk_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.516175195.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access tcp port 8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.to_port":*terraform.ResourceAttrDiff{Old:"", New:"8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "ingress.516175195.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.from_port":*terraform.ResourceAttrDiff{Old:"", New:"8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:52:38 [TRACE] DiffTransformer: Resource "aws_security_group.tcp_internal_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"172.31.0.0/16", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.from_port":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"internal_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"internal_access group", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"tcp_internal_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.to_port":*terraform.ResourceAttrDiff{Old:"", New:"65535", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:52:38 [TRACE] DiffTransformer: Resource "aws_security_group.ssh_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.to_port":*terraform.ResourceAttrDiff{Old:"", New:"22", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"ssh_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.2541437006.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"ssh_access group", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.2541437006.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.from_port":*terraform.ResourceAttrDiff{Old:"", New:"22", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:52:38 [TRACE] DiffTransformer: Resource "aws_spot_instance_request.mtg_worker01": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"vpc_security_group_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "public_dns":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "placement_group":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "instance_type":*terraform.ResourceAttrDiff{Old:"", New:"m3.medium", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "subnet_id":*terraform.ResourceAttrDiff{Old:"", New:"subnet-401d891b", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "availability_zone":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ebs_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "tenancy":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ephemeral_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_type":*terraform.ResourceAttrDiff{Old:"", New:"persistent", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "root_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "wait_for_fulfillment":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "network_interface_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_bid_status":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "spot_instance_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "source_dest_check":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ami":*terraform.ResourceAttrDiff{Old:"", New:"ami-e1679399", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "associate_public_ip_address":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_request_state":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "instance_state":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "network_interface.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "key_name":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ipv6_address_count":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_price":*terraform.ResourceAttrDiff{Old:"", New:"0.02", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ipv6_addresses.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "public_ip":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "private_dns":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "private_ip":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "primary_network_interface_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:52:38 [TRACE] DiffTransformer: Resource "aws_security_group.internet_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"internet_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.2214680975.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.from_port":*terraform.ResourceAttrDiff{Old:"", New:"80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "description":*terraform.ResourceAttrDiff{Old:"", New:"internet_access tcp port 80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"internet_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.to_port":*terraform.ResourceAttrDiff{Old:"", New:"80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.DiffTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:52:38 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:52:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:52:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677ce0), RawConfig:(*config.RawConfig)(0xc4206771a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:52:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420677020), RawConfig:(*config.RawConfig)(0xc4206764e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:52:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676360), RawConfig:(*config.RawConfig)(0xc420475920), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42034a540), RawConfig:(*config.RawConfig)(0xc4201efa40), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc420010de0), (*config.Provisioner)(0xc420010f30), (*config.Provisioner)(0xc420011830), (*config.Provisioner)(0xc42043d200)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:38 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:52:38 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42067c9c0), RawConfig:(*config.RawConfig)(0xc420677e60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:52:38 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:52:38 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:52:38 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201ef5c0)}
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:52:38 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:52:38 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access]
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.profile var.region]
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 13:52:38 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:52:38 [DEBUG] Starting graph walk: walkApply
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:52:38 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:52:38 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:52:38 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:52:38 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:52:38 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:52:38 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:52:38 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 13:52:38 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:52:38 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 13:52:38 [TRACE] [walkApply] Entering eval tree: provisioner.file
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:52:38 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:52:38 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:52:38 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:52:38 [TRACE] [walkApply] Entering eval tree: provider.aws
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:52:38 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec
2017/09/05 13:52:38 [TRACE] [walkApply] Exiting eval tree: provisioner.file
2017/09/05 13:52:38 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:38 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:38 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [INFO] No assume_role block read from configuration
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [INFO] Building AWS region structure
2017/09/05 13:52:38 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:38 [INFO] Building AWS auth structure
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 13:52:39 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:39 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 13:52:39 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=d7a10ab60b03081fb3a980c255350636f7e5b8de6bab4a5fafe9c13153782f47
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:39 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205239Z
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:39 [DEBUG] plugin: terraform: 
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 13:52:39 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 13:52:39 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:39 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:39 [DEBUG] plugin: terraform: X-Amzn-Requestid: 276ca115-927c-11e7-8124-b7b918276b8e
2017/09/05 13:52:39 [DEBUG] plugin: terraform: 
2017/09/05 13:52:39 [DEBUG] plugin: terraform: 
2017/09/05 13:52:39 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 13:52:39 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 13:52:39 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:52:39 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:52:39 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 13:52:39 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 13:52:39 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:52:39 [DEBUG] plugin: terraform:     <RequestId>276ca115-927c-11e7-8124-b7b918276b8e</RequestId>
2017/09/05 13:52:39 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:52:39 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 13:52:39 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:39 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 13:52:39 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:39 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 13:52:39 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=01f6fb20bbf2242c88dd8c78f88f9f6723b18318ce8d79d3274b8c056b756d4e
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:39 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205239Z
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:39 [DEBUG] plugin: terraform: 
2017/09/05 13:52:39 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 13:52:39 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amzn-Requestid: 279c15af-927c-11e7-915e-97bc802f7f46
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <User>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     </User>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <RequestId>279c15af-927c-11e7-915e-97bc802f7f46</RequestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=5b3819ff5db57d94e69ca9bf874fd489d8ebbe981765d509fd605c44668a540b
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:38 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>23a571ec-0747-4028-8f72-abe20be5af7c</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 13:52:40 [TRACE] [walkApply] Exiting eval tree: provider.aws
2017/09/05 13:52:40 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:52:40 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:52:40 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:52:40 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:52:40 [TRACE] [walkApply] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:52:40 [TRACE] [walkApply] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:40 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:52:40 [TRACE] [walkApply] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:52:40 [TRACE] [walkApply] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:52:40 [DEBUG] apply: aws_security_group.ssh_access: executing Apply
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:52:40 [DEBUG] apply: aws_security_group.internet_access: executing Apply
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:52:40 [DEBUG] apply: aws_security_group.tcp_internal_access: executing Apply
2017/09/05 13:52:40 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:52:40 [DEBUG] apply: aws_security_group.splunk_access: executing Apply
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Security Group create configuration: {
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   GroupName: "ssh_access"
2017/09/05 13:52:40 [DEBUG] plugin: terraform: }
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Security Group create configuration: {
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   GroupName: "internet_access"
2017/09/05 13:52:40 [DEBUG] plugin: terraform: }
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Security Group create configuration: {
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   GroupName: "internal_access"
2017/09/05 13:52:40 [DEBUG] plugin: terraform: }
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Security Group create configuration: {
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   GroupName: "splunk_access"
2017/09/05 13:52:40 [DEBUG] plugin: terraform: }
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 100
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=42171e465dd541cb08f7ee4a7835de708a560d9b8e6030e611c325ed8b3cf3a5
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=ssh_access+group&GroupName=ssh_access&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 110
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f5d14aa7dd96e67214a0e1bbee20ea03106ef2689ced9c08683d3075f9a5d377
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=internal_access+group&GroupName=internal_access&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 114
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c3200b0356467d3be6e682cabefaaa76480db72235422da84b55cbd0c3c92de9
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=splunk_access+tcp+port+8080&GroupName=splunk_access&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 116
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=1dc8e1e9f5f6f00101a6954c296646a140c3c682fbb48db26abf5fd989d0eba4
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=internet_access+tcp+port+80&GroupName=internet_access&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>e09508f2-c1f5-4d50-9934-1782e3f30ac6</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <groupId>sg-49beb333</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [INFO] Security Group ID: sg-49beb333
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for Security Group (sg-49beb333) to exist
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0f243fcc2f5d459edd7d05886b6365118a166216a00664f5b48383759f0504b9
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-49beb333&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>abf51ab7-480a-490f-97b6-3e60eefe16b1</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [INFO] Security Group ID: sg-4ebeb334
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for Security Group (sg-4ebeb334) to exist
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=93d660ee8078a406026eaed3e838cef6c376b6842ffa7b097a049c7f749c7901
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-4ebeb334&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>a72f041f-88ac-453d-a8f8-a6b20c61864f</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [INFO] Security Group ID: sg-06b8b57c
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for Security Group (sg-06b8b57c) to exist
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0890d7150041533d224a98b4ee1c4032b0745605a8a620887d9deb29577401a5
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-06b8b57c&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>965e7120-2963-4f52-97a0-d22119115797</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Creating tags: [{
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Value: "splunk_access"
2017/09/05 13:52:40 [DEBUG] plugin: terraform: }] for sg-06b8b57c
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 102
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=96637c5d8902d49613496a071e1d16bbebd4ce51ae6fcb2738c5c1fef4bad725
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-06b8b57c&Tag.1.Key=Name&Tag.1.Value=splunk_access&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>7adfb2f7-b8a9-4ebf-a07f-1da4cb3abe87</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupId>sg-49beb333</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Revoking default egress rule for Security Group for sg-49beb333
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=2639754c9a5589a88e490db98bf58f80f826b44df0fb2d189652793d2fb898c0
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-49beb333&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>a13ebcbf-e786-4f21-92be-35e3e320fde2</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Creating tags: [{
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Value: "tcp_internal_access"
2017/09/05 13:52:40 [DEBUG] plugin: terraform: }] for sg-4ebeb334
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 108
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=37c86f4f06c44dfcc1bfe659cac598ffadede2882b9f88b06bfdd9fbe44eaf82
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-4ebeb334&Tag.1.Key=Name&Tag.1.Value=tcp_internal_access&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>03db9393-6da4-4dc1-aba9-eea834d9b9f3</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [INFO] Security Group ID: sg-e3bbb699
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for Security Group (sg-e3bbb699) to exist
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f7c245dddd86e96ef2b6709f11c5b7c2975a9eabe4e47f2dd2e11233a28c3f8e
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-e3bbb699&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>93508097-e9ac-4f4d-9bd8-8ff40cf850b1</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Revoking default egress rule for Security Group for sg-4ebeb334
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0a7e3366281da62388b153fb2cd98fed429cce1135195ba9d475e8c1c3345205
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-4ebeb334&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>c6520aca-be20-415f-a098-5d7d97d2f026</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Revoking default egress rule for Security Group for sg-06b8b57c
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=9f9d557c6c4948d3cefbcd4ddc9ea99048a0a2dead0e733b72bb3b8ab35dcc69
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-06b8b57c&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>50285747-177d-4c6f-90da-be20e4f0611b</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Creating tags: [{
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 13:52:40 [DEBUG] plugin: terraform:   Value: "internet_access"
2017/09/05 13:52:40 [DEBUG] plugin: terraform: }] for sg-e3bbb699
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 104
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=d86bdedabe4f0abc3d65508c74acd1fc5f9f1a2d284e4d3be90efa628692cb44
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-e3bbb699&Tag.1.Key=Name&Tag.1.Value=internet_access&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <requestId>de4091a1-ad4a-4a70-affb-9d404e0e5fef</requestId>
2017/09/05 13:52:40 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-49beb333
2017/09/05 13:52:40 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:40 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:40 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:40 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:40 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=7942c3e39cb07c62f2d4e61abdbaa350f061434e39efd9efabb94508700d635f
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:40 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205240Z
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:40 [DEBUG] plugin: terraform: 
2017/09/05 13:52:40 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-49beb333&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:40 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>69cd3da8-914b-4308-8e3b-2485fe1f65df</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Revoking default egress rule for Security Group for sg-e3bbb699
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0923b0283eb51c4998a5acb18f2ed441f3769c3527a37ab841777fff84901d30
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-e3bbb699&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>7b442343-55ac-4f03-adc0-96364da6142c</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-4ebeb334
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b4cf7ed4fa97bd461d85161b28c91bd191a9471bc5e780380cde405a59215f9c
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-4ebeb334&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>fe583c4b-74f4-4be2-8dba-278d4bbf0498</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a772073f018ddcebbc4e3a0cfd11b030cb1cdeb5f9a86c82545b7be4910962d7
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-49beb333&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:39 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>035bfc02-baa2-462c-b451-cea4a530bf18</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-06b8b57c
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=17ffc80ae3bda636cdb191ee18e2e16735a579fd7b486a9dbc1ec77edab4aa48
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-06b8b57c&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>c03327ee-a814-4763-9276-1807e984966a</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupId>sg-49beb333</groupId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Authorizing security group {
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupId: "sg-49beb333",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupName: "ssh_access",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:41 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   FromPort: 22,
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   ToPort: 22
2017/09/05 13:52:41 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 206
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=6c694ae83b1915012aeedbb8b3228686c46b2bb98bda657a2968e591c88c0b41
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-49beb333&IpPermissions.1.FromPort=22&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=22&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>1ea02325-a5f5-4cb0-a882-d0200764faff</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-e3bbb699
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=80144faf162e6693986475cb8c3803ba30688ea5ced30e470eec43737419622c
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-e3bbb699&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>e8515a2a-1950-4776-817a-1c774ca15acd</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ce2971184c55810e2f931eae8b516cff6e157236643725e2bfc24be22cfb4ced
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-06b8b57c&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>c93c3806-ffcb-4100-bd75-f93dee8bca94</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=63761c4a7af5cc3332a94aca8d97791960e92615f5369a909ec970d22110bc22
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-4ebeb334&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>c23f2bcb-6ccf-4602-bca1-06e899c4f471</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Authorizing security group {
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupId: "sg-4ebeb334",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupName: "internal_access",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       Value: "tcp_internal_access"
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:41 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   FromPort: 1,
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       CidrIp: "172.31.0.0/16"
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   ToPort: 65535
2017/09/05 13:52:41 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 212
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=6c3d52ab166e8f503a725c97cee9f6f7e9de43febb73e6670998c92ec0e363a4
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-4ebeb334&IpPermissions.1.FromPort=1&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=172.31.0.0%2F16&IpPermissions.1.ToPort=65535&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>3c1a61d3-6afd-4d8b-9a96-4ec7f3fce83f</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Authorizing security group {
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupId: "sg-06b8b57c",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupName: "splunk_access",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       Value: "splunk_access"
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:41 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   FromPort: 8080,
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   ToPort: 8080
2017/09/05 13:52:41 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 210
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f872866d539f8d2bbf68d99d8500d43e765b0fc3c793e9d4d90129f499714103
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-06b8b57c&IpPermissions.1.FromPort=8080&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=8080&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>c69afadb-eb46-4e60-8bd7-4951237696b3</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a3847a17d8ee7b992c837093447848f99078803ebe72e8f6f3cb344a763a72b5
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-e3bbb699&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <requestId>88a7402b-1b28-4279-80e3-758655c9cbde</requestId>
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] Authorizing security group {
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupId: "sg-49beb333",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   GroupName: "ssh_access",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:41 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:41 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:52:41 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:41 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:52:41 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:41 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:41 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:41 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:41 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:41 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=9be5d89f80733703bfe58a719573433f4adc560e1d133e6827ea5d176a04a13b
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:41 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205241Z
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:41 [DEBUG] plugin: terraform: 
2017/09/05 13:52:41 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-49beb333&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:41 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>e7c8db21-a9ef-465b-a4b2-194582594a72</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Authorizing security group {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupId: "sg-e3bbb699",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupName: "internet_access",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Value: "internet_access"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:42 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   FromPort: 80,
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   ToPort: 80
2017/09/05 13:52:42 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 206
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=edabbdbccc5564ccfbe9548b3542b22a7d82c8d4f4135424bf8a459792829828
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-e3bbb699&IpPermissions.1.FromPort=80&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=80&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>28a58c4c-f5a8-4058-9e77-3dd01ece54d2</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>d48c6dbc-ffcc-468e-b0bd-0deedd4045b0</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Authorizing security group {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupId: "sg-06b8b57c",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupName: "splunk_access",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Value: "splunk_access"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:42 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:52:42 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ee336c7de9c897d084cc093b7aab548c153ca4337437c8d096faa250a1e4d488
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-49beb333&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=feafae20c3162bc4f5f1cbeec09996bf05faf6e483932fb59de1a5abf9bb217c
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-06b8b57c&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>08be2f3b-818a-4280-ab19-181c5ee03cd9</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Authorizing security group {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupId: "sg-4ebeb334",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupName: "internal_access",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Value: "tcp_internal_access"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:42 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:52:42 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e789b415a34772158cbf002d9c53a1d5533421487c939fc915b650939e0f9c4c
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-4ebeb334&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>4537a7a3-45fc-46e1-ad1d-5c42c8bb82a1</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupId>sg-49beb333</groupId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <fromPort>22</fromPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <toPort>22</toPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:52:42 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:52:42 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:52:42 [TRACE] [walkApply] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>f39541d8-4ced-4837-9c5c-fe8cc6c8f889</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=36b44d56f4f3ec49d9433af365cf9251f014e2d2991e47f864789f454dc2339e
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-06b8b57c&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>80e58e42-73fe-4bf1-a547-cc7ab3b833b5</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=1f35c14a8c89db720f74b46c6371256ab7d954a8b4ea32d0e6738fa0e9c90c87
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-4ebeb334&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:40 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>ab78d56c-7292-41d0-81f5-20a81fab7e07</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Authorizing security group {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupId: "sg-e3bbb699",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   GroupName: "internet_access",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Value: "internet_access"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:52:42 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     }],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:52:42 [DEBUG] plugin: terraform: }}
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0cdceccd86136a0bf4ca109e509a0bcdbf3fd0f02fc198b5c41e36a568d0cfc1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-e3bbb699&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>b2371731-bceb-420f-b7dd-2ddea25e7315</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <fromPort>1</fromPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <toPort>65535</toPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>172.31.0.0/16</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:52:42 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:52:42 [TRACE] [walkApply] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>22a89c98-60d6-4e8b-861c-b3b34b6cfe90</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <fromPort>8080</fromPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <toPort>8080</toPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:52:42 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:52:42 [TRACE] [walkApply] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:41 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>948dc4b6-e79f-4a14-acba-bc3f65157d6e</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=7734c3957cc859b66251f894537606932858be102a4ca808a75148d0530addf5
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-e3bbb699&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:42 GMT
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <requestId>faa88ff1-7ae8-4f8e-9c62-b7eff56b3952</requestId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <fromPort>80</fromPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <toPort>80</toPort>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Matching ^aws: with Name
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:52:42 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:52:42 [TRACE] [walkApply] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:52:42 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:42 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:52:42 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:52:42 [TRACE] [walkApply] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:42 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:52:42 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:52:42 [DEBUG] apply: aws_spot_instance_request.mtg_worker01: executing Apply
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Requesting spot bid opts: {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   InstanceCount: 1,
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   LaunchSpecification: {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     EbsOptimized: false,
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     IamInstanceProfile: {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Name: ""
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     },
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     ImageId: "ami-e1679399",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     InstanceType: "m3.medium",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     Monitoring: {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       Enabled: false
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     },
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     Placement: {
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       AvailabilityZone: "",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       GroupName: ""
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     },
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     SecurityGroupIds: [
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       "sg-e3bbb699",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       "sg-49beb333",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       "sg-4ebeb334",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:       "sg-06b8b57c"
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     ],
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     SubnetId: "subnet-401d891b",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:     UserData: ""
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   },
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   SpotPrice: "0.02",
2017/09/05 13:52:42 [DEBUG] plugin: terraform:   Type: "persistent"
2017/09/05 13:52:42 [DEBUG] plugin: terraform: }
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:52:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RequestSpotInstances Details:
2017/09/05 13:52:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Length: 670
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f2370107cf48ee9ee402ef1d8056510c998fbd050d25bab5d7e79cfcc2f5275c
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205242Z
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:42 [DEBUG] plugin: terraform: 
2017/09/05 13:52:42 [DEBUG] plugin: terraform: Action=RequestSpotInstances&InstanceCount=1&LaunchSpecification.EbsOptimized=false&LaunchSpecification.IamInstanceProfile.Name=&LaunchSpecification.ImageId=ami-e1679399&LaunchSpecification.InstanceType=m3.medium&LaunchSpecification.Monitoring.Enabled=false&LaunchSpecification.Placement.AvailabilityZone=&LaunchSpecification.Placement.GroupName=&LaunchSpecification.SecurityGroupId.1=sg-e3bbb699&LaunchSpecification.SecurityGroupId.2=sg-49beb333&LaunchSpecification.SecurityGroupId.3=sg-4ebeb334&LaunchSpecification.SecurityGroupId.4=sg-06b8b57c&LaunchSpecification.SubnetId=subnet-401d891b&LaunchSpecification.UserData=&SpotPrice=0.02&Type=persistent&Version=2016-11-15
2017/09/05 13:52:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:43 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RequestSpotInstances Details:
2017/09/05 13:52:43 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:43 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:43 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:43 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:43 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:43 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:42 GMT
2017/09/05 13:52:43 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:43 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:43 [DEBUG] plugin: terraform: 
2017/09/05 13:52:43 [DEBUG] plugin: terraform: 
2017/09/05 13:52:43 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:43 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:43 [DEBUG] plugin: terraform: <RequestSpotInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:43 [DEBUG] plugin: terraform:     <requestId>942594b2-0882-42f4-9b70-dad2fdadd5cd</requestId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <state>open</state>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <status>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <code>pending-evaluation</code>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:52:42.000Z</updateTime>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <message>Your Spot request has been submitted for review, and is pending evaluation.</message>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             </status>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupId>sg-49beb333</groupId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:52:42.000Z</createTime>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:43 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:52:43 [DEBUG] plugin: terraform: </RequestSpotInstancesResponse>
2017/09/05 13:52:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:43 [DEBUG] waiting for spot bid to resolve... this may take several minutes.
2017/09/05 13:52:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:43 [DEBUG] Waiting for state to become: [fulfilled]
2017/09/05 13:52:43 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:43 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:43 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:43 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:43 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:52:48 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:48 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:52:48 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:48 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:48 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:52:53 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:53 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0db89ef5e998525ee420bfd7e5b474bf8bb38924248e5e782636c0257cd7c24f
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:53 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205253Z
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:53 [DEBUG] plugin: terraform: 
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-syhr87pn&Version=2016-11-15
2017/09/05 13:52:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:53 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:53 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:52:53 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:53 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:53 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:52:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:53 GMT
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:53 [DEBUG] plugin: terraform: 
2017/09/05 13:52:53 [DEBUG] plugin: terraform: 
2017/09/05 13:52:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:53 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:53 [DEBUG] plugin: terraform:     <requestId>7da6b64d-32ed-4deb-a5a8-1e0a43ecf1dc</requestId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <status>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:52:50.000Z</updateTime>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             </status>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-49beb333</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:52:42.000Z</createTime>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 13:52:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:52:53 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:53 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0db89ef5e998525ee420bfd7e5b474bf8bb38924248e5e782636c0257cd7c24f
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:53 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205253Z
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:53 [DEBUG] plugin: terraform: 
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-syhr87pn&Version=2016-11-15
2017/09/05 13:52:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:52:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:52 GMT
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:53 [DEBUG] plugin: terraform: 
2017/09/05 13:52:53 [DEBUG] plugin: terraform: 
2017/09/05 13:52:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:53 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:53 [DEBUG] plugin: terraform:     <requestId>b009423c-17b7-4ca5-a482-7dd7cc9340f8</requestId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <status>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:52:50.000Z</updateTime>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             </status>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupId>sg-49beb333</groupId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:52:42.000Z</createTime>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:53 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:52:53 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 13:52:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:52:53 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:53 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:53 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a32d7ac3bbd9a2a289bf15f08a9307bfd867f1c79517f81e0ab50fdcf25a632d
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:53 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205253Z
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:53 [DEBUG] plugin: terraform: 
2017/09/05 13:52:53 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:52:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:54 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:54 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:52:54 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:54 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:53 GMT
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:54 [DEBUG] plugin: terraform: 
2017/09/05 13:52:54 [DEBUG] plugin: terraform: 
2017/09/05 13:52:54 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:54 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:54 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:54 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:54 [DEBUG] plugin: terraform:     <requestId>fbf556f3-6783-4305-bcb4-904a855cbb4b</requestId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <reservationId>r-0be9ec816d1f309ec</reservationId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <code>0</code>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <name>pending</name>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <privateDnsName>ip-172-31-8-157.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <dnsName>ec2-34-213-51-0.us-west-2.compute.amazonaws.com</dnsName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <reason/>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:52:50.000Z</launchTime>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <privateIpAddress>172.31.8.157</privateIpAddress>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <ipAddress>34.213.51.0</ipAddress>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <sourceDestCheck>true</sourceDestCheck>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <groupSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupName>splunk_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupName>internal_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupName>internet_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupId>sg-49beb333</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupName>ssh_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     </groupSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <status>attaching</status>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <clientToken>f6c13c0b-09c8-4329-8ee4-4f811bf12c5c</clientToken>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-c4068cc7</networkInterfaceId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <description/>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <macAddress>0a:63:99:ca:8e:5c</macAddress>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <privateIpAddress>172.31.8.157</privateIpAddress>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <privateDnsName>ip-172-31-8-157.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <sourceDestCheck>true</sourceDestCheck>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <groupSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupId>sg-06b8b57c</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupName>splunk_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupId>sg-4ebeb334</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupName>internal_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupId>sg-e3bbb699</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupName>internet_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupId>sg-49beb333</groupId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <groupName>ssh_access</groupName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             </groupSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-c06ea424</attachmentId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <status>attaching</status>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <association>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <publicIp>34.213.51.0</publicIp>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <publicDnsName>ec2-34-213-51-0.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <ipOwnerId>amazon</ipOwnerId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             </association>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <privateIpAddressesSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <privateIpAddress>172.31.8.157</privateIpAddress>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <privateDnsName>ip-172-31-8-157.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <primary>true</primary>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <association>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <publicIp>34.213.51.0</publicIp>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <publicDnsName>ec2-34-213-51-0.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     <ipOwnerId>amazon</ipOwnerId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                     </association>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             </privateIpAddressesSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                             <ipv6AddressesSet/>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:52:54 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:54 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVolumes Details:
2017/09/05 13:52:54 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:52:54 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:52:54 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Content-Length: 74
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=93939196634642202bae08eb8949a96c39b51e63461f164058bbd06c47cd6d1f
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:52:54 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205254Z
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:52:54 [DEBUG] plugin: terraform: 
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Action=DescribeVolumes&Version=2016-11-15&VolumeId.1=vol-032c6cce753e201d8
2017/09/05 13:52:54 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:54 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:54 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVolumes Details:
2017/09/05 13:52:54 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:52:54 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:52:53 GMT
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:52:54 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:52:54 [DEBUG] plugin: terraform: 
2017/09/05 13:52:54 [DEBUG] plugin: terraform: 
2017/09/05 13:52:54 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:52:54 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:52:54 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:52:54 [DEBUG] plugin: terraform: <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:52:54 [DEBUG] plugin: terraform:     <requestId>4fc657fa-686e-4346-9150-d8ded9f359b3</requestId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:     <volumeSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <size>8</size>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <snapshotId>snap-02b75f85999c3a768</snapshotId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <status>in-use</status>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:52:50.671Z</createTime>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <attachmentSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <device>/dev/xvda</device>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <status>attaching</status>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                     <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             </attachmentSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <volumeType>gp2</volumeType>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <iops>100</iops>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:             <encrypted>false</encrypted>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:52:54 [DEBUG] plugin: terraform:     </volumeSet>
2017/09/05 13:52:54 [DEBUG] plugin: terraform: </DescribeVolumesResponse>
2017/09/05 13:52:54 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:52:54 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:52:54 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:52:54 connecting to TCP connection for SSH
2017/09/05 13:52:58 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:52:58 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:58 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:58 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:52:58 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:03 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:03 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:03 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:03 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:03 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:08 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:08 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:08 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:08 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:08 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:09 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:09 connection error: dial tcp 34.213.51.0:22: i/o timeout
2017/09/05 13:53:09 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:09 Retryable error: dial tcp 34.213.51.0:22: i/o timeout
2017/09/05 13:53:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:12 connecting to TCP connection for SSH
2017/09/05 13:53:13 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:13 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:13 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:13 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:13 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:15 connection error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:15 Retryable error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:18 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:18 connecting to TCP connection for SSH
2017/09/05 13:53:18 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:18 connection error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:18 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:18 Retryable error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:18 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:18 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:18 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:18 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:18 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:21 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:21 connecting to TCP connection for SSH
2017/09/05 13:53:21 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:21 connection error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:21 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:21 Retryable error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:23 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:23 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:23 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:23 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:23 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:24 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:24 connecting to TCP connection for SSH
2017/09/05 13:53:24 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:24 connection error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:24 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:24 Retryable error: dial tcp 34.213.51.0:22: getsockopt: connection refused
2017/09/05 13:53:27 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:27 connecting to TCP connection for SSH
2017/09/05 13:53:27 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:27 handshaking with SSH
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 opening new ssh session
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Starting remote scp process:  scp -vt ~/.ssh
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Started SCP session, beginning transfers...
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Copying input data into temporary file so we can read the length
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Beginning file upload...
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 SCP session complete, closing stdin pipe.
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Waiting for SSH session to complete.
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 scp stderr (length 27): Sink: C0644 1675 my_github
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 connecting to TCP connection for SSH
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 handshaking with SSH
2017/09/05 13:53:28 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:28 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:28 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:28 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:28 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 opening new ssh session
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Starting remote scp process:  scp -vt ~/.ssh
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Started SCP session, beginning transfers...
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Copying input data into temporary file so we can read the length
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Beginning file upload...
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 SCP session complete, closing stdin pipe.
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 Waiting for SSH session to complete.
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 scp stderr (length 22): Sink: C0644 87 config
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 connecting to TCP connection for SSH
2017/09/05 13:53:28 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:28 handshaking with SSH
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 opening new ssh session
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 Starting remote scp process:  scp -vt ~
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 Started SCP session, beginning transfers...
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 Copying input data into temporary file so we can read the length
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 Beginning file upload...
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 SCP session complete, closing stdin pipe.
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 Waiting for SSH session to complete.
2017/09/05 13:53:29 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:53:29 scp stderr (length 34): Sink: C0644 196 clone_mtg_work.sh
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 connecting to TCP connection for SSH
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 handshaking with SSH
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 opening new ssh session
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 Starting remote scp process:  scp -vt /tmp
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 Started SCP session, beginning transfers...
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 Beginning file upload...
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 SCP session complete, closing stdin pipe.
2017/09/05 13:53:29 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:29 Waiting for SSH session to complete.
2017/09/05 13:53:30 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:30 scp stderr (length 40): Sink: C0644 110 terraform_1720807292.sh
2017/09/05 13:53:30 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:30 opening new ssh session
2017/09/05 13:53:30 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:30 starting remote command: chmod 0777 /tmp/terraform_1720807292.sh
2017/09/05 13:53:30 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:30 remote command exited with '0': chmod 0777 /tmp/terraform_1720807292.sh
2017/09/05 13:53:30 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:30 opening new ssh session
2017/09/05 13:53:30 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:53:30 starting remote command: /tmp/terraform_1720807292.sh
2017/09/05 13:53:33 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:33 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:33 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:33 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:33 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:38 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:38 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:38 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:38 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:38 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:43 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:43 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:43 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:43 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:43 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:48 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:48 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:48 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:48 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:48 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:53 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:53 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:53 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:53 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:53 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:58 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:53:58 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:58 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:58 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:53:58 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:03 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:03 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:03 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:03 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:03 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.remote-exec (close)"
2017/09/05 13:54:04 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:04 [DEBUG] plugin: received interrupt signal (count: 1). Ignoring.
2017/09/05 13:54:04 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:54:04 [DEBUG] plugin: received interrupt signal (count: 1). Ignoring.
2017/09/05 13:54:04 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:04 [DEBUG] plugin: received interrupt signal (count: 1). Ignoring.
2017/09/05 13:54:04 [WARN] terraform: Stop called, initiating interrupt sequence
2017/09/05 13:54:04 [WARN] terraform: run context exists, stopping
2017/09/05 13:54:04 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:04 remote command exited with '0': /tmp/terraform_1720807292.sh
2017/09/05 13:54:04 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:04 opening new ssh session
2017/09/05 13:54:04 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:04 ssh session open error: 'read tcp 172.25.98.16:64670->34.213.51.0:22: use of closed network connection', attempting reconnect
2017/09/05 13:54:04 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:04 connecting to TCP connection for SSH
2017/09/05 13:54:04 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:04 handshaking with SSH
2017/09/05 13:54:05 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:54:05 [DEBUG] plugin: received interrupt signal (count: 2). Ignoring.
2017/09/05 13:54:05 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:05 [DEBUG] plugin: received interrupt signal (count: 2). Ignoring.
2017/09/05 13:54:05 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:05 [DEBUG] plugin: received interrupt signal (count: 2). Ignoring.
2017/09/05 13:54:05 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:54:05 [WARN] Early exit triggered by hook: *terraform.stopHook
2017/09/05 13:54:05 [WARN] Early exit triggered by hook: *terraform.stopHook
2017/09/05 13:54:05 [DEBUG] root: eval: *terraform.EvalApplyProvisioners, err: early exit
2017/09/05 13:54:05 [DEBUG] root: eval: *terraform.EvalSequence, err: early exit
2017/09/05 13:54:05 [TRACE] [walkApply] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:05 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:05 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:54:05 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:54:05 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:54:05 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:54:05 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:54:05 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:54:05 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:54:05 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:54:05 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:54:05 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:54:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_spot_instance_request.mtg_worker01.0", replace "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.ssh_access.0", replace "aws_security_group.ssh_access"
2017/09/05 13:54:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.tcp_internal_access.0", replace "aws_security_group.tcp_internal_access"
2017/09/05 13:54:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.splunk_access.0", replace "aws_security_group.splunk_access"
2017/09/05 13:54:05 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:05 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:54:05 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.internet_access.0", replace "aws_security_group.internet_access"
2017/09/05 13:54:05 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:54:05 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:54:05 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:54:05 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:54:05 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:05 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:54:05 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:54:05 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:54:05 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:54:05 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:54:05 [TRACE] [walkApply] Entering eval tree: provider.aws (close)
2017/09/05 13:54:05 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:54:05 [TRACE] [walkApply] Exiting eval tree: provider.aws (close)
2017/09/05 13:54:05 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:54:05 [TRACE] [walkApply] Entering eval tree: provisioner.file (close)
2017/09/05 13:54:05 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:54:05 [TRACE] [walkApply] Exiting eval tree: provisioner.file (close)
2017/09/05 13:54:05 [DEBUG] dag/walk: walking "root"
2017/09/05 13:54:05 [DEBUG] vertex 'root.root': walking
2017/09/05 13:54:05 [WARN] terraform: stop complete
2017/09/05 13:54:05 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:54:05 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:54:05 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:54:05 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:54:08 [INFO] Terraform version: 0.9.11  
2017/09/05 13:54:08 [INFO] Go runtime version: go1.8.3
2017/09/05 13:54:08 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "destory"}
2017/09/05 13:54:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:08 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:54:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:54:08 [INFO] CLI command args: []string{"destory"}
2017/09/05 13:54:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:08 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:54:10 [INFO] Terraform version: 0.9.11  
2017/09/05 13:54:10 [INFO] Go runtime version: go1.8.3
2017/09/05 13:54:10 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "destroy"}
2017/09/05 13:54:10 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:10 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:10 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:54:10 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:54:11 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:11 [INFO] CLI command args: []string{"destroy"}
2017/09/05 13:54:11 [DEBUG] command: loading backend config file: /Users/ericyoung/my_github/mtg_price/terraform
2017/09/05 13:54:11 [DEBUG] command: no data state file found for backend config
2017/09/05 13:54:11 [DEBUG] New state was assigned lineage "db31dadd-880e-40df-97f2-526f73187177"
2017/09/05 13:54:11 [INFO] command: backend initialized: <nil>
2017/09/05 13:54:11 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/09/05 13:54:11 [DEBUG] command: asking for input: "Do you really want to destroy?"
2017/09/05 13:54:47 [INFO] backend/local: starting Apply operation
2017/09/05 13:54:47 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:54:47 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:54:47 [INFO] terraform: building graph: GraphTypeInput
2017/09/05 13:54:47 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796370), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420796460), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207963c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:54:47 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4202aa540)}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [DEBUG] Starting graph walk: walkInput
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:54:47 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:54:47 [TRACE] [walkInput] Entering eval tree: provider.aws
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:54:47 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 13:54:47 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] Terraform version: 0.9.11
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] Go runtime version: go1.8.3
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] CLI command args: []string{"internal-plugin", "provider", "aws"}
2017/09/05 13:54:47 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:47 [INFO] Starting provider plugin aws
2017/09/05 13:54:47 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:47 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin485165045
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInputProvider
2017/09/05 13:54:47 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:47 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:47 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:47 [TRACE] [walkInput] Exiting eval tree: provider.aws
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:47 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:54:47 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:54:47 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:54:47 [TRACE] [walkInput] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:54:47 [TRACE] [walkInput] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:54:47 [TRACE] [walkInput] Entering eval tree: provider.aws (close)
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:54:47 [TRACE] [walkInput] Entering eval tree: provisioner.file (close)
2017/09/05 13:54:47 [TRACE] [walkInput] Exiting eval tree: provider.aws (close)
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:54:47 [TRACE] [walkInput] Exiting eval tree: provisioner.file (close)
2017/09/05 13:54:47 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:54:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_spot_instance_request.mtg_worker01.0", replace "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.internet_access.0", replace "aws_security_group.internet_access"
2017/09/05 13:54:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.splunk_access.0", replace "aws_security_group.splunk_access"
2017/09/05 13:54:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.ssh_access.0", replace "aws_security_group.ssh_access"
2017/09/05 13:54:47 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.tcp_internal_access.0", replace "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "root"
2017/09/05 13:54:47 [DEBUG] vertex 'root.root': walking
2017/09/05 13:54:47 [INFO] terraform: building graph: GraphTypeValidate
2017/09/05 13:54:47 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:47 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796370), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420796460), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207963c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:54:47 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4202aa540)}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.graphTransformerMulti:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:47 [DEBUG] Starting graph walk: walkValidate
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:47 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: provisioner.file
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:54:47 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:54:47 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: provider.aws
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:54:47 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:54:47 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:54:47 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateProvider
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:54:47 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:47 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207963c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796370), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796280), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420796410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:47 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:54:47 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:54:47 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:54:47 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:54:47 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] Terraform version: 0.9.11
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] Go runtime version: go1.8.3
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:47 [DEBUG] plugin: terraform: 2017/09/05 13:54:47 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
2017/09/05 13:54:47 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:54:47 [INFO] Starting provisioner plugin file
2017/09/05 13:54:47 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:54:47 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin023814466
2017/09/05 13:54:47 [TRACE] [walkValidate] Exiting eval tree: provisioner.file
2017/09/05 13:54:47 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:54:47 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [INFO] Terraform version: 0.9.11
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [INFO] Go runtime version: go1.8.3
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 2017/09/05 13:54:48 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:54:48 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:48 [INFO] Starting provisioner plugin remote-exec
2017/09/05 13:54:48 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:54:48 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin091964141
2017/09/05 13:54:48 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:48 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:54:48 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:54:48 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:48 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:48 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:48 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420796460), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:48 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:54:48 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:54:48 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:54:48 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:54:48 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:54:48 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:54:48 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:48 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:54:48 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:54:48 [TRACE] [walkValidate] Entering eval tree: provisioner.file (close)
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:54:48 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:54:48 [TRACE] [walkValidate] Exiting eval tree: provisioner.file (close)
2017/09/05 13:54:48 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:54:48 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:54:48 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:54:48 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2017/09/05 13:54:48 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:54:48 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:54:48 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:54:48 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_spot_instance_request.mtg_worker01.0", replace "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:48 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.internet_access.0", replace "aws_security_group.internet_access"
2017/09/05 13:54:48 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.splunk_access.0", replace "aws_security_group.splunk_access"
2017/09/05 13:54:48 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.ssh_access.0", replace "aws_security_group.ssh_access"
2017/09/05 13:54:48 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.tcp_internal_access.0", replace "aws_security_group.tcp_internal_access"
2017/09/05 13:54:48 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "root"
2017/09/05 13:54:48 [DEBUG] vertex 'root.root': walking
2017/09/05 13:54:48 [INFO] backend/local: apply calling Refresh
2017/09/05 13:54:48 [INFO] terraform: building graph: GraphTypeRefresh
2017/09/05 13:54:48 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 13:54:48 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 13:54:48 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420447270), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:48 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4204472c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:48 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420447220), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:48 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4204471d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:48 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420447310), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 13:54:48 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:54:48 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:48 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:48 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:48 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:48 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:48 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:48 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:48 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:48 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:48 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:54:48 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4202aa540)}
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:54:48 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  provider.aws (close) - *terraform.graphNodeCloseProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
root - terraform.graphNodeRoot
  provider.aws (close) - *terraform.graphNodeCloseProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:48 [DEBUG] Starting graph walk: walkRefresh
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:54:48 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "root" waiting on "var.domain-name"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "root" waiting on "var.env"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "root" waiting on "var.stack"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:54:48 [DEBUG] dag/walk: added edge: "root" waiting on "var.region-az"
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:54:48 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:54:48 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:54:48 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:54:48 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:54:48 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:54:48 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:54:48 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:54:48 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:54:48 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:54:48 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:54:48 [TRACE] [walkRefresh] Entering eval tree: provider.aws
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:54:48 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:48 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:48 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [INFO] No assume_role block read from configuration
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [INFO] Building AWS region structure
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [INFO] Building AWS auth structure
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 13:54:48 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:48 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 13:54:48 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:48 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:48 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 13:54:48 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:48 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 13:54:48 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=2f4d04639037851651298ecc6910418fd7b5e223d142c473afa2ea35302f4913
2017/09/05 13:54:48 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:48 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205448Z
2017/09/05 13:54:48 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:48 [DEBUG] plugin: terraform: 
2017/09/05 13:54:48 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 13:54:48 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:48 GMT
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amzn-Requestid: 74b1d1ee-927c-11e7-b756-c94abc7f5633
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <RequestId>74b1d1ee-927c-11e7-b756-c94abc7f5633</RequestId>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:54:50 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 13:54:50 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f604739b6a6d8431cb1dc23e80e460e0db49968a929dac0147b764d35497386e
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205450Z
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:49 GMT
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amzn-Requestid: 7566f094-927c-11e7-a471-dd3ed5a722e0
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <User>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     </User>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <RequestId>7566f094-927c-11e7-a471-dd3ed5a722e0</RequestId>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:54:50 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:50 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=15afbd23157e68913fb74bf13521c5902181a49bea4796d6d2b2416a6c7994b5
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205450Z
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:50 GMT
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:50 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <requestId>a8eb335a-89b5-49ba-98f3-92d84b1322b3</requestId>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:50 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 13:54:50 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 13:54:50 [TRACE] [walkRefresh] Exiting eval tree: provider.aws
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:50 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:50 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Checking: aws_security_group.ssh_access
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Checking: aws_security_group.internet_access
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420447270), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:50 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4204471d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:54:50 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:54:50 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 13:54:50 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Checking: aws_security_group.tcp_internal_access
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:54:50 [TRACE] OrphanResourceCount: Checking: aws_security_group.splunk_access
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420447220), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:50 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4204472c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:54:50 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:50 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:54:50 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:54:50 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:54:50 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 13:54:50 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:50 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:50 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=5754d432dd4cc399860655b07a533790dd90e369c443d5e32971e2148aebccfa
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205450Z
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-e3bbb699&Version=2016-11-15
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:50 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e7f952cbfe08bab8d1b3386c99c1a93a29a16ae40da9c967796445a803e8b58f
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205450Z
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-49beb333&Version=2016-11-15
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:50 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=617e045d477c742c56ce76a3c02ed98c9f359c45af3e0b660400ea7f0d14a8d8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205450Z
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-06b8b57c&Version=2016-11-15
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:50 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:50 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:50 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:50 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=37974585a1dc4a22aca73fcd09d7c35702b1c18f594738cee060f6bf17c478ae
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:50 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205450Z
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:50 [DEBUG] plugin: terraform: 
2017/09/05 13:54:50 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-4ebeb334&Version=2016-11-15
2017/09/05 13:54:50 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:50 GMT
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <requestId>f091d125-7fc4-43df-87e8-1ea9b6d10fc4</requestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupId>sg-4ebeb334</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <fromPort>1</fromPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <toPort>65535</toPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>172.31.0.0/16</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] Matching ^aws: with Name
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:54:51 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:50 GMT
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <requestId>12d30f53-b80e-4ea0-862a-9cb5eb591516</requestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupId>sg-49beb333</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <fromPort>22</fromPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <toPort>22</toPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:54:51 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:50 GMT
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <requestId>898e38c9-3590-4af4-ba27-0d10e5d5d073</requestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupId>sg-e3bbb699</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <fromPort>80</fromPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <toPort>80</toPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] Matching ^aws: with Name
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:54:51 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:50 GMT
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <requestId>89cd75c2-eece-4aa4-b1e7-840c04d0e8d5</requestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupId>sg-06b8b57c</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <fromPort>8080</fromPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <toPort>8080</toPort>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] Matching ^aws: with Name
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:54:51 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:54:51 [TRACE] [walkRefresh] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:54:51 [TRACE] [walkRefresh] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:51 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:54:51 [TRACE] OrphanResourceCount: Checking: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420447310), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:54:51 [TRACE] [walkRefresh] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:51 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=6a911a42efd05797fe38c5f006b68e0eb2a2987cbaabc5055c5b51f5738d3778
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205451Z
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-syhr87pn&Version=2016-11-15
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:50 GMT
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <requestId>54b7fb42-1f51-4723-9fe2-f60458602603</requestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <status>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:52:50.000Z</updateTime>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </status>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupId>sg-06b8b57c</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupId>sg-4ebeb334</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupId>sg-e3bbb699</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupId>sg-49beb333</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:52:42.000Z</createTime>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:51 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=3ab4c17b98e3b7f9a2949da135980e280a93b520b53d0fdcab0ea6acb66af251
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205451Z
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:50 GMT
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <requestId>a2938c28-9f1c-450a-9c23-6ad97c3debf7</requestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <reservationId>r-0be9ec816d1f309ec</reservationId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <code>16</code>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <name>running</name>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <privateDnsName>ip-172-31-8-157.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <dnsName>ec2-34-213-51-0.us-west-2.compute.amazonaws.com</dnsName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <reason/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:52:50.000Z</launchTime>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <privateIpAddress>172.31.8.157</privateIpAddress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ipAddress>34.213.51.0</ipAddress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <sourceDestCheck>true</sourceDestCheck>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <groupSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupId>sg-06b8b57c</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupName>splunk_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupId>sg-4ebeb334</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupName>internal_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupId>sg-e3bbb699</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupName>internet_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupId>sg-49beb333</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupName>ssh_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </groupSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <clientToken>f6c13c0b-09c8-4329-8ee4-4f811bf12c5c</clientToken>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-c4068cc7</networkInterfaceId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <description/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <macAddress>0a:63:99:ca:8e:5c</macAddress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <privateIpAddress>172.31.8.157</privateIpAddress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <privateDnsName>ip-172-31-8-157.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <sourceDestCheck>true</sourceDestCheck>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <groupSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupId>sg-06b8b57c</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupName>splunk_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupId>sg-4ebeb334</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupName>internal_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupId>sg-e3bbb699</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupName>internet_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupId>sg-49beb333</groupId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <groupName>ssh_access</groupName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             </groupSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-c06ea424</attachmentId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <association>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <publicIp>34.213.51.0</publicIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <publicDnsName>ec2-34-213-51-0.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <ipOwnerId>amazon</ipOwnerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             </association>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <privateIpAddressesSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <privateIpAddress>172.31.8.157</privateIpAddress>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <privateDnsName>ip-172-31-8-157.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <primary>true</primary>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <association>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <publicIp>34.213.51.0</publicIp>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <publicDnsName>ec2-34-213-51-0.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     <ipOwnerId>amazon</ipOwnerId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                     </association>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             </privateIpAddressesSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                             <ipv6AddressesSet/>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVolumes Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:51 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Length: 74
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c7d193671b0475f0390dbc5305969326d25c2cab3db23140bcf4d883f7b3c74e
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205451Z
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Action=DescribeVolumes&Version=2016-11-15&VolumeId.1=vol-032c6cce753e201d8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVolumes Details:
2017/09/05 13:54:51 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:51 GMT
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:51 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: 
2017/09/05 13:54:51 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <requestId>3c256f92-168c-491d-97a0-aba9b3310064</requestId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     <volumeSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <size>8</size>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <snapshotId>snap-02b75f85999c3a768</snapshotId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <status>in-use</status>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:52:50.671Z</createTime>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <attachmentSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <device>/dev/xvda</device>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <status>attached</status>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                     <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             </attachmentSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <volumeType>gp2</volumeType>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <iops>100</iops>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:             <encrypted>false</encrypted>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:51 [DEBUG] plugin: terraform:     </volumeSet>
2017/09/05 13:54:51 [DEBUG] plugin: terraform: </DescribeVolumesResponse>
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:54:51 [TRACE] [walkRefresh] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:54:51 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:54:51 [TRACE] [walkRefresh] Entering eval tree: provider.aws (close)
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:54:51 [TRACE] [walkRefresh] Exiting eval tree: provider.aws (close)
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "root"
2017/09/05 13:54:51 [DEBUG] vertex 'root.root': walking
2017/09/05 13:54:51 [INFO] backend/local: apply calling Plan
2017/09/05 13:54:51 [INFO] terraform: building graph: GraphTypePlanDestroy
2017/09/05 13:54:51 [TRACE] StateTransformer: starting
2017/09/05 13:54:51 [TRACE] StateTransformer: Module: [root]
2017/09/05 13:54:51 [TRACE] StateTransformer: Resource "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420797d10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] StateTransformer: Resource "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207973b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] StateTransformer: Resource "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f1cc0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] StateTransformer: Resource "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f16d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] StateTransformer: Resource "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f1220), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.StateTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.internet_access destroying "aws_security_group.internet_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.splunk_access destroying "aws_security_group.splunk_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.ssh_access destroying "aws_security_group.ssh_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.tcp_internal_access destroying "aws_security_group.tcp_internal_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_spot_instance_request.mtg_worker01 destroying "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.internet_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207973b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f1cc0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.splunk_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f1cc0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f1220), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01 (destroy)": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420797d10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f1220), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420797d10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207973b0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f16d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.ssh_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4206f16d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:54:51 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4202aa540)}
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01 (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: reference graph: aws_security_group.internet_access
  provider.aws
aws_security_group.internet_access (destroy)
  provider.aws
aws_security_group.splunk_access
  provider.aws
aws_security_group.splunk_access (destroy)
  provider.aws
aws_security_group.ssh_access
  provider.aws
aws_security_group.ssh_access (destroy)
  provider.aws
aws_security_group.tcp_internal_access
  provider.aws
aws_security_group.tcp_internal_access (destroy)
  provider.aws
aws_spot_instance_request.mtg_worker01
  aws_security_group.internet_access
  aws_security_group.splunk_access
  aws_security_group.ssh_access
  aws_security_group.tcp_internal_access
  provider.aws
  var.private_key_path
aws_spot_instance_request.mtg_worker01 (destroy)
  provider.aws
provider.aws
  var.profile
  var.region
var.domain-name
var.env
var.private_key_path
var.profile
var.region
var.region-az
var.stack
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01" references [aws_security_group.internet_access var.private_key_path aws_security_group.tcp_internal_access provider.aws var.region var.profile aws_security_group.ssh_access aws_security_group.splunk_access]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.internet_access" depends on aws_security_group.internet_access
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.tcp_internal_access" depends on aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.ssh_access" depends on aws_security_group.ssh_access
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.splunk_access" depends on aws_security_group.splunk_access
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01 (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access (destroy)" references [var.profile provider.aws var.region]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access" references [var.profile provider.aws var.region]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
root - terraform.graphNodeRoot
  aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
2017/09/05 13:54:51 [DEBUG] Starting graph walk: walkPlanDestroy
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.internet_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.splunk_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.ssh_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:54:51 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:54:51 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "root"
2017/09/05 13:54:51 [DEBUG] vertex 'root.root': walking
2017/09/05 13:54:51 [INFO] terraform: building graph: GraphTypeApply
2017/09/05 13:54:51 [TRACE] DiffTransformer: starting
2017/09/05 13:54:51 [TRACE] DiffTransformer: Module: DESTROY: aws_security_group.internet_access
DESTROY: aws_security_group.splunk_access
DESTROY: aws_security_group.ssh_access
DESTROY: aws_security_group.tcp_internal_access
DESTROY: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] DiffTransformer: Resource "aws_security_group.tcp_internal_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:54:51 [TRACE] DiffTransformer: Resource "aws_security_group.ssh_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:54:51 [TRACE] DiffTransformer: Resource "aws_security_group.splunk_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:54:51 [TRACE] DiffTransformer: Resource "aws_spot_instance_request.mtg_worker01": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:54:51 [TRACE] DiffTransformer: Resource "aws_security_group.internet_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.DiffTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.splunk_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017540), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01 (destroy)": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420017680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.internet_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017400), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017630), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.ssh_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017590), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:54:51 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:54:51 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4202aa540)}
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.internet_access (destroy) destroying "aws_security_group.internet_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.tcp_internal_access (destroy) destroying "aws_security_group.tcp_internal_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.ssh_access (destroy) destroying "aws_security_group.ssh_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_security_group.splunk_access (destroy) destroying "aws_security_group.splunk_access"
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: aws_spot_instance_request.mtg_worker01 (destroy) destroying "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4202ab5c0), RawConfig:(*config.RawConfig)(0xc4202aaba0), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42021c300), (*config.Provisioner)(0xc42021c660), (*config.Provisioner)(0xc4202801b0), (*config.Provisioner)(0xc4202a4480)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420636300), RawConfig:(*config.RawConfig)(0xc4201857a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420184960), RawConfig:(*config.RawConfig)(0xc4205c5b60), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c59e0), RawConfig:(*config.RawConfig)(0xc4205c4840), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:54:51 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420185620), RawConfig:(*config.RawConfig)(0xc420184ae0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.ssh_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017590), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017540), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.splunk_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017540), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420017680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017400), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.internet_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017400), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017630), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017590), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01 (destroy)": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420017680), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017630), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 13:54:51 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:54:51 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4202aa540)}
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01 (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: reference graph: aws_security_group.internet_access
  provider.aws
aws_security_group.internet_access (destroy)
  provider.aws
aws_security_group.splunk_access
  provider.aws
aws_security_group.splunk_access (destroy)
  provider.aws
aws_security_group.ssh_access
  provider.aws
aws_security_group.ssh_access (destroy)
  provider.aws
aws_security_group.tcp_internal_access
  provider.aws
aws_security_group.tcp_internal_access (destroy)
  provider.aws
aws_spot_instance_request.mtg_worker01
  aws_security_group.internet_access
  aws_security_group.splunk_access
  aws_security_group.ssh_access
  aws_security_group.tcp_internal_access
  provider.aws
  var.private_key_path
aws_spot_instance_request.mtg_worker01 (destroy)
  provider.aws
provider.aws
  var.profile
  var.region
var.domain-name
var.env
var.private_key_path
var.profile
var.region
var.region-az
var.stack
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access" references [var.region var.profile provider.aws]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access" references [var.region var.profile provider.aws]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access (destroy)" references [var.region var.profile provider.aws]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01" references [aws_security_group.ssh_access aws_security_group.splunk_access aws_security_group.internet_access provider.aws var.region var.profile var.private_key_path aws_security_group.tcp_internal_access]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.ssh_access" depends on aws_security_group.ssh_access (destroy)
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.splunk_access" depends on aws_security_group.splunk_access (destroy)
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.internet_access" depends on aws_security_group.internet_access (destroy)
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.tcp_internal_access" depends on aws_security_group.tcp_internal_access (destroy)
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01 (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access (destroy)" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:54:51 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01 (destroy)" references: []
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:54:51 [DEBUG] Starting graph walk: walkDestroy
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.splunk_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.internet_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01 (destroy)" waiting on "provisioner.file"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01 (destroy)" waiting on "provisioner.remote-exec"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.ssh_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.ssh_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.internet_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.splunk_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01 (destroy)" waiting on "provider.aws"
2017/09/05 13:54:51 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.private_key_path"
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01 (destroy)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access (destroy)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access (destroy)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access (destroy)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access (destroy)", sending new deps
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:54:51 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:54:51 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 13:54:51 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:54:51 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 13:54:51 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 13:54:51 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:54:51 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:54:51 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 13:54:51 [TRACE] [walkDestroy] Entering eval tree: provisioner.remote-exec
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:54:51 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:54:51 [TRACE] [walkDestroy] Entering eval tree: provisioner.file
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:54:51 [TRACE] [walkDestroy] Entering eval tree: provider.aws
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:54:51 [TRACE] [walkDestroy] Exiting eval tree: provisioner.remote-exec
2017/09/05 13:54:51 [TRACE] [walkDestroy] Exiting eval tree: provisioner.file
2017/09/05 13:54:51 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:51 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:51 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [INFO] No assume_role block read from configuration
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [INFO] Building AWS region structure
2017/09/05 13:54:51 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:51 [INFO] Building AWS auth structure
2017/09/05 13:54:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:52 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 13:54:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:52 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 13:54:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:52 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 13:54:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:52 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 13:54:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:52 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 13:54:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:52 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 13:54:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:52 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 13:54:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=d248f02b85fe7dc81dc11f6e044350876dd0610e83fd3bcbc97b8622f4956377
2017/09/05 13:54:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205452Z
2017/09/05 13:54:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:52 [DEBUG] plugin: terraform: 
2017/09/05 13:54:52 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 13:54:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:52 GMT
2017/09/05 13:54:53 [DEBUG] plugin: terraform: X-Amzn-Requestid: 76e071c6-927c-11e7-9122-853a7ef9e89c
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <RequestId>76e071c6-927c-11e7-9122-853a7ef9e89c</RequestId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 13:54:53 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=fa96da044def937b277ed17e31117387e7c63e09c856620ff613484481eee1b5
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:53 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205453Z
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:52 GMT
2017/09/05 13:54:53 [DEBUG] plugin: terraform: X-Amzn-Requestid: 770f4975-927c-11e7-85b8-ddfdbd7cd416
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <User>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     </User>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <RequestId>770f4975-927c-11e7-85b8-ddfdbd7cd416</RequestId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:53 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=2274a88f37954c1e1805d90e1020fe40dd0f80532decd07b6aa05266208fbe40
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:53 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205453Z
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:52 GMT
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <requestId>e7355aad-672b-43a1-8cb0-7b463c410b4a</requestId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 13:54:53 [TRACE] [walkDestroy] Exiting eval tree: provider.aws
2017/09/05 13:54:53 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:53 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01 (destroy)': walking
2017/09/05 13:54:53 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01 (destroy)': evaluating
2017/09/05 13:54:53 [TRACE] [walkDestroy] Entering eval tree: aws_spot_instance_request.mtg_worker01 (destroy)
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:53 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:54:53 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:54:53 [DEBUG] apply: aws_spot_instance_request.mtg_worker01: executing Apply
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [INFO] Cancelling spot request: sir-syhr87pn
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CancelSpotInstanceRequests Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:53 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Length: 89
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=99678b75376bc2d71d4f07fcae4abeb7994a5ed8faaf494a083b886a2e665a35
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:53 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205453Z
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Action=CancelSpotInstanceRequests&SpotInstanceRequestId.1=sir-syhr87pn&Version=2016-11-15
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CancelSpotInstanceRequests Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:52 GMT
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: <CancelSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <requestId>a50dc9d1-9cfe-4529-83f5-858b154d4be5</requestId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             <state>cancelled</state>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: </CancelSpotInstanceRequestsResponse>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [INFO] Terminating instance: i-0aa07c6504836c9f0
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [INFO] Terminating instance: i-0aa07c6504836c9f0
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/TerminateInstances Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:54:53 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Length: 77
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=82107b8b0edcad35804c48d974d7071d8bd0b97db2ae0edf68d13b45ebaece0e
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:54:53 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205453Z
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Action=TerminateInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/TerminateInstances Details:
2017/09/05 13:54:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:54:53 GMT
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:54:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: 
2017/09/05 13:54:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: <TerminateInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <requestId>1ebb3d6f-be12-4363-aef0-882f3882e372</requestId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     <instancesSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             <currentState>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:                 <code>32</code>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:                 <name>shutting-down</name>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             </currentState>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             <previousState>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:                 <code>16</code>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:                 <name>running</name>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:             </previousState>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:54:53 [DEBUG] plugin: terraform:     </instancesSet>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: </TerminateInstancesResponse>
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] Waiting for instance (i-0aa07c6504836c9f0) to become terminated
2017/09/05 13:54:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:54:53 [DEBUG] Waiting for state to become: [terminated]
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:54:56 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:01 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:03 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:03 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:55:03 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:03 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:03 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:03 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:03 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:55:03 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ea589633cf7c2d02a45abaa2e72d8de1a9ec475d8f9a99e84d09a77b6347035c
2017/09/05 13:55:03 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:03 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205503Z
2017/09/05 13:55:03 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:03 [DEBUG] plugin: terraform: 
2017/09/05 13:55:03 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:55:03 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:04 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:04 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:55:04 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:04 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:04 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:04 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:04 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:04 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:03 GMT
2017/09/05 13:55:04 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:04 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:04 [DEBUG] plugin: terraform: 
2017/09/05 13:55:04 [DEBUG] plugin: terraform: 
2017/09/05 13:55:04 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:04 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:04 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:04 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:04 [DEBUG] plugin: terraform:     <requestId>ed21c671-cb08-4ef1-88d4-d226c9581cfa</requestId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:             <reservationId>r-0be9ec816d1f309ec</reservationId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <code>32</code>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <name>shutting-down</name>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 20:54:53 GMT)</reason>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:52:50.000Z</launchTime>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <clientToken>f6c13c0b-09c8-4329-8ee4-4f811bf12c5c</clientToken>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-c4068cc7</networkInterfaceId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-c06ea424</attachmentId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:55:04 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:55:04 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:55:04 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:04 [TRACE] Waiting 3s before next try
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:06 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:07 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:07 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:55:07 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:07 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:07 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=8e8e029f0d74a7771eb44b17db8a0328946c25ad0131caa83484a4b33750687f
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:07 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205507Z
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:07 [DEBUG] plugin: terraform: 
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:55:07 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:07 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:07 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:55:07 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:07 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:06 GMT
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:07 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:07 [DEBUG] plugin: terraform: 
2017/09/05 13:55:07 [DEBUG] plugin: terraform: 
2017/09/05 13:55:07 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:07 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:07 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:07 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:07 [DEBUG] plugin: terraform:     <requestId>d461b9af-c6ba-4d9a-a9b2-d894a77a1a84</requestId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:             <reservationId>r-0be9ec816d1f309ec</reservationId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <code>32</code>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <name>shutting-down</name>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 20:54:53 GMT)</reason>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:52:50.000Z</launchTime>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <clientToken>f6c13c0b-09c8-4329-8ee4-4f811bf12c5c</clientToken>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-c4068cc7</networkInterfaceId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-c06ea424</attachmentId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:55:07 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:55:07 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:55:07 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:07 [TRACE] Waiting 6s before next try
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:11 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:55:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:55:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b73d2c4ac4133397e682b1ad641e337d404fe7b43a12a30549c0b07a69669e3f
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205513Z
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:13 [DEBUG] plugin: terraform: 
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:55:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:55:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:12 GMT
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:13 [DEBUG] plugin: terraform: 
2017/09/05 13:55:13 [DEBUG] plugin: terraform: 
2017/09/05 13:55:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:13 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:13 [DEBUG] plugin: terraform:     <requestId>e9f17fd4-a48f-41eb-9887-fbe56014f6e2</requestId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:             <reservationId>r-0be9ec816d1f309ec</reservationId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <code>32</code>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <name>shutting-down</name>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 20:54:53 GMT)</reason>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:52:50.000Z</launchTime>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <volumeId>vol-032c6cce753e201d8</volumeId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <clientToken>f6c13c0b-09c8-4329-8ee4-4f811bf12c5c</clientToken>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-c4068cc7</networkInterfaceId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-c06ea424</attachmentId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:52:50.000Z</attachTime>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:55:13 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:55:13 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:55:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:13 [TRACE] Waiting 10s before next try
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:16 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:21 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:23 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:55:23 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:23 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:23 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=4d21fd75a03dcf58dd69cabf698671a2111701d3a34c652a3a3009e2c328ebf8
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:23 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205523Z
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:23 [DEBUG] plugin: terraform: 
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:55:23 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:23 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:55:23 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:23 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:23 GMT
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:23 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:23 [DEBUG] plugin: terraform: 
2017/09/05 13:55:23 [DEBUG] plugin: terraform: 
2017/09/05 13:55:23 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:23 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:23 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:23 [DEBUG] plugin: terraform:     <requestId>0ffcdfa5-bcec-49e9-980c-5354028c0c2a</requestId>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:             <reservationId>r-0be9ec816d1f309ec</reservationId>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <code>32</code>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <name>shutting-down</name>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 20:54:53 GMT)</reason>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:52:50.000Z</launchTime>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <blockDeviceMapping/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <clientToken>f6c13c0b-09c8-4329-8ee4-4f811bf12c5c</clientToken>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <networkInterfaceSet/>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:55:23 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:55:23 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:55:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:23 [TRACE] Waiting 10s before next try
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:26 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "root", waiting for: "provisioner.file (close)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:31 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:55:33 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:33 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=7e9e3bee53eaeb02947a25edb08117494b6baa35e833207444caeb0be570c40d
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:33 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205533Z
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:33 [DEBUG] plugin: terraform: 
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-0aa07c6504836c9f0&Version=2016-11-15
2017/09/05 13:55:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:55:33 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:33 GMT
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:33 [DEBUG] plugin: terraform: 
2017/09/05 13:55:33 [DEBUG] plugin: terraform: 
2017/09/05 13:55:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:33 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:33 [DEBUG] plugin: terraform:     <requestId>1dbefd3c-0c9c-40ec-bb5f-2d8ae94d1597</requestId>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:             <reservationId>r-0be9ec816d1f309ec</reservationId>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <instanceId>i-0aa07c6504836c9f0</instanceId>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <code>48</code>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <name>terminated</name>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 20:54:53 GMT)</reason>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:52:50.000Z</launchTime>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <blockDeviceMapping/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-syhr87pn</spotInstanceRequestId>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <clientToken>f6c13c0b-09c8-4329-8ee4-4f811bf12c5c</clientToken>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <networkInterfaceSet/>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:55:33 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:55:33 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:55:33 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:55:33 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:55:33 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:55:33 [TRACE] [walkDestroy] Exiting eval tree: aws_spot_instance_request.mtg_worker01 (destroy)
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01 (destroy)': expanding/walking dynamic subgraph
2017/09/05 13:55:33 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 13:55:33 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 13:55:33 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 13:55:33 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:55:33 [DEBUG] dag/walk: walking "root"
2017/09/05 13:55:33 [DEBUG] vertex 'root.root': walking
2017/09/05 13:55:33 [DEBUG] dag/walk: walking "aws_security_group.ssh_access (destroy)"
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.ssh_access (destroy)': walking
2017/09/05 13:55:33 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:55:33 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:55:33 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:55:33 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:55:33 [DEBUG] dag/walk: walking "aws_security_group.internet_access (destroy)"
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.internet_access (destroy)': walking
2017/09/05 13:55:33 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 13:55:33 [DEBUG] dag/walk: walking "aws_security_group.splunk_access (destroy)"
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.splunk_access (destroy)': walking
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.ssh_access (destroy)': evaluating
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access (destroy)': walking
2017/09/05 13:55:33 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.ssh_access (destroy)
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:55:33 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.internet_access (destroy)': evaluating
2017/09/05 13:55:33 [TRACE] [walkDestroy] Entering eval tree: provisioner.file (close)
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.splunk_access (destroy)': evaluating
2017/09/05 13:55:33 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:55:33 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.splunk_access (destroy)
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:55:33 [TRACE] [walkDestroy] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:55:33 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.internet_access (destroy)
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:55:33 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access (destroy)': evaluating
2017/09/05 13:55:33 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.tcp_internal_access (destroy)
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:55:33 [TRACE] [walkDestroy] Exiting eval tree: provisioner.file (close)
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:55:33 [DEBUG] apply: aws_security_group.splunk_access: executing Apply
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:55:33 [DEBUG] apply: aws_security_group.ssh_access: executing Apply
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:55:33 [DEBUG] apply: aws_security_group.internet_access: executing Apply
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:55:33 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:55:33 [DEBUG] apply: aws_security_group.tcp_internal_access: executing Apply
2017/09/05 13:55:33 [TRACE] [walkDestroy] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] Security Group destroy: sg-06b8b57c
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] Security Group destroy: sg-49beb333
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] Security Group destroy: sg-e3bbb699
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] Security Group destroy: sg-4ebeb334
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:33 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:33 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c601e805887efec3cedf40cb58d8298418a6931aee572138bec869dc077ced48
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:33 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205533Z
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:33 [DEBUG] plugin: terraform: 
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-4ebeb334&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 13:55:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:33 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:33 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=10083d7b2ab44e6d0cf6058527276590929293ab6231997718164f4c34495392
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:33 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205533Z
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:33 [DEBUG] plugin: terraform: 
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-49beb333&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 13:55:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:33 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:33 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=1e82e3d3bd531fe6b3b62267fd5922119d101367c781bed632e28043fd8b0830
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:33 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205533Z
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:33 [DEBUG] plugin: terraform: 
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-06b8b57c&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 13:55:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:33 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:33 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:33 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:33 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=fd825efc072bbe3f3eda2a61e952527f45dfaff6d38980d15e3a0091d81644fd
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:33 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205533Z
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:33 [DEBUG] plugin: terraform: 
2017/09/05 13:55:33 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-e3bbb699&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 13:55:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:32 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>ab1f8b75-f0e6-4811-9f71-e8ebfe5982d5</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:34 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b4c802cc3deaffb1a04093a34c35609edb5ba2f88212ed3594b82c973fc5e079
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205534Z
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-06b8b57c&Version=2016-11-15
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:32 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>0eb8655f-09c0-498f-aa44-2719c7902b72</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:34 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=5370234f435b8cd0860cdd9964751a35f5ce2b9c824e2afb3cf9af15a7f3b32f
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205534Z
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-e3bbb699&Version=2016-11-15
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:32 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>2c637a20-464a-4b44-b046-66eaece8a98f</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:34 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=da702a1d7e48dd880fbc26f41591457891eab249ed3c8c3dad9df1ef2c10db54
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205534Z
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-4ebeb334&Version=2016-11-15
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:33 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>7c2fb65b-b540-469c-afa6-9f825311a9d0</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:55:34 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=cf2d0b84f3b810f403b153adab49cd2b54a50dd45f4aa50ee11c84db86d06e89
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205534Z
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-49beb333&Version=2016-11-15
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:33 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>a2d06c6e-9506-4e16-a0f5-b4b72aa155b0</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:55:34 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:55:34 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.splunk_access (destroy)
2017/09/05 13:55:34 [DEBUG] vertex 'root.aws_security_group.splunk_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 13:55:34 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 13:55:34 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:55:34 [DEBUG] dag/walk: walking "root"
2017/09/05 13:55:34 [DEBUG] vertex 'root.root': walking
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:33 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>9d2a91e0-7fba-4264-a5da-05762a62c6ed</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:55:34 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:55:34 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.ssh_access (destroy)
2017/09/05 13:55:34 [DEBUG] vertex 'root.aws_security_group.ssh_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 13:55:34 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 13:55:34 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:55:34 [DEBUG] dag/walk: walking "root"
2017/09/05 13:55:34 [DEBUG] vertex 'root.root': walking
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:33 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>a8b0f565-b623-4b86-a617-c2fe373a5fce</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:55:34 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:55:34 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.internet_access (destroy)
2017/09/05 13:55:34 [DEBUG] vertex 'root.aws_security_group.internet_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 13:55:34 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 13:55:34 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:55:34 [DEBUG] dag/walk: walking "root"
2017/09/05 13:55:34 [DEBUG] vertex 'root.root': walking
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 13:55:34 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:55:33 GMT
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:55:34 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: 
2017/09/05 13:55:34 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <requestId>f5d622cc-26b0-4413-8ebd-840bd5ce384f</requestId>
2017/09/05 13:55:34 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:55:34 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:55:34 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:55:34 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.tcp_internal_access (destroy)
2017/09/05 13:55:34 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 13:55:34 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 13:55:34 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 13:55:34 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:55:34 [DEBUG] dag/walk: walking "root"
2017/09/05 13:55:34 [DEBUG] vertex 'root.root': walking
2017/09/05 13:55:34 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:55:34 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:55:34 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:55:34 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:55:34 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:55:34 [TRACE] [walkDestroy] Entering eval tree: provider.aws (close)
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:55:34 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:55:34 [TRACE] [walkDestroy] Exiting eval tree: provider.aws (close)
2017/09/05 13:55:34 [TRACE] [walkDestroy] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:55:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:55:34 [TRACE] [walkDestroy] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:55:34 [DEBUG] dag/walk: walking "root"
2017/09/05 13:55:34 [DEBUG] vertex 'root.root': walking
2017/09/05 13:55:34 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:55:34 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:55:34 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:55:34 [ERR] plugin: stream copy 'stderr' error: stream closed
2017/09/05 13:55:34 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:55:34 [ERR] plugin: stream copy 'stderr' error: stream closed
2017/09/05 13:55:34 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:55:34 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:55:34 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:55:34 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:55:34 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:55:34 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:55:34 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:55:34 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:55:34 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:56:26 [INFO] Terraform version: 0.9.11  
2017/09/05 13:56:26 [INFO] Go runtime version: go1.8.3
2017/09/05 13:56:26 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "apply"}
2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:56:26 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [INFO] CLI command args: []string{"apply"}
2017/09/05 13:56:26 [DEBUG] command: loading backend config file: /Users/ericyoung/my_github/mtg_price/terraform
2017/09/05 13:56:26 [DEBUG] command: no data state file found for backend config
2017/09/05 13:56:26 [DEBUG] New state was assigned lineage "24cd0aa3-3b88-40c6-bb7a-4f43d5b83751"
2017/09/05 13:56:26 [INFO] command: backend initialized: <nil>
2017/09/05 13:56:26 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/09/05 13:56:26 [INFO] backend/local: starting Apply operation
2017/09/05 13:56:26 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:56:26 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:56:26 [INFO] terraform: building graph: GraphTypeInput
2017/09/05 13:56:26 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42036f200), RawConfig:(*config.RawConfig)(0xc42036e960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42057cfc0), (*config.Provisioner)(0xc42057d110), (*config.Provisioner)(0xc420527890), (*config.Provisioner)(0xc420527a10)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755080), RawConfig:(*config.RawConfig)(0xc420754660), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755d40), RawConfig:(*config.RawConfig)(0xc420755200), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420758a20), RawConfig:(*config.RawConfig)(0xc420755ec0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4207596e0), RawConfig:(*config.RawConfig)(0xc420758ba0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:56:26 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc42036e540)}
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.profile var.region]
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] Starting graph walk: walkInput
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:56:26 [TRACE] [walkInput] Entering eval tree: provider.aws
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:56:26 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 13:56:26 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] Terraform version: 0.9.11
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] Go runtime version: go1.8.3
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] CLI command args: []string{"internal-plugin", "provider", "aws"}
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:26 [INFO] Starting provider plugin aws
2017/09/05 13:56:26 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:26 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin783794016
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInputProvider
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [TRACE] [walkInput] Exiting eval tree: provider.aws
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:56:26 [TRACE] [walkInput] Entering eval tree: provider.aws (close)
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:56:26 [TRACE] [walkInput] Exiting eval tree: provider.aws (close)
2017/09/05 13:56:26 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:56:26 [TRACE] [walkInput] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:56:26 [TRACE] [walkInput] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:56:26 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:56:26 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:56:26 [TRACE] [walkInput] Entering eval tree: provisioner.file (close)
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:56:26 [TRACE] [walkInput] Exiting eval tree: provisioner.file (close)
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "root"
2017/09/05 13:56:26 [DEBUG] vertex 'root.root': walking
2017/09/05 13:56:26 [INFO] terraform: building graph: GraphTypeValidate
2017/09/05 13:56:26 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755d40), RawConfig:(*config.RawConfig)(0xc420755200), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420758a20), RawConfig:(*config.RawConfig)(0xc420755ec0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4207596e0), RawConfig:(*config.RawConfig)(0xc420758ba0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42036f200), RawConfig:(*config.RawConfig)(0xc42036e960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42057cfc0), (*config.Provisioner)(0xc42057d110), (*config.Provisioner)(0xc420527890), (*config.Provisioner)(0xc420527a10)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755080), RawConfig:(*config.RawConfig)(0xc420754660), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:56:26 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc42036e540)}
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.graphTransformerMulti:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] Starting graph walk: walkValidate
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:56:26 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: provisioner.file
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: provider.aws
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:56:26 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] Terraform version: 0.9.11
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] Go runtime version: go1.8.3
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
2017/09/05 13:56:26 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:56:26 [INFO] Starting provisioner plugin remote-exec
2017/09/05 13:56:26 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:56:26 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin709604406
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec
2017/09/05 13:56:26 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 13:56:26 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] Terraform version: 0.9.11
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] Go runtime version: go1.8.3
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 13:56:26 [DEBUG] plugin: terraform: 2017/09/05 13:56:26 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
2017/09/05 13:56:26 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:56:26 [INFO] Starting provisioner plugin file
2017/09/05 13:56:26 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:56:26 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin573053057
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: provisioner.file
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:56:26 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:56:26 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:56:26 [TRACE] [walkValidate] Entering eval tree: provisioner.file (close)
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:56:26 [TRACE] [walkValidate] Exiting eval tree: provisioner.file (close)
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "root"
2017/09/05 13:56:26 [DEBUG] vertex 'root.root': walking
2017/09/05 13:56:26 [INFO] backend/local: apply calling Refresh
2017/09/05 13:56:26 [INFO] terraform: building graph: GraphTypeRefresh
2017/09/05 13:56:26 [TRACE] No managed resources in state during refresh, skipping managed resource transformer
2017/09/05 13:56:26 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.MissingProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.DisableProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ParentProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OutputTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CloseProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

root - terraform.graphNodeRoot
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] Starting graph walk: walkRefresh
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "root"
2017/09/05 13:56:26 [DEBUG] vertex 'root.root': walking
2017/09/05 13:56:26 [INFO] backend/local: apply calling Plan
2017/09/05 13:56:26 [INFO] terraform: building graph: GraphTypePlan
2017/09/05 13:56:26 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755d40), RawConfig:(*config.RawConfig)(0xc420755200), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420758a20), RawConfig:(*config.RawConfig)(0xc420755ec0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4207596e0), RawConfig:(*config.RawConfig)(0xc420758ba0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42036f200), RawConfig:(*config.RawConfig)(0xc42036e960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42057cfc0), (*config.Provisioner)(0xc42057d110), (*config.Provisioner)(0xc420527890), (*config.Provisioner)(0xc420527a10)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:56:26 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755080), RawConfig:(*config.RawConfig)(0xc420754660), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:26 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:56:26 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc42036e540)}
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:56:26 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:26 [DEBUG] Starting graph walk: walkPlan
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:56:26 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:56:26 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:56:26 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:56:26 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:56:26 [TRACE] [walkPlan] Entering eval tree: provider.aws
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:26 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 13:56:26 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:26 [INFO] No assume_role block read from configuration
2017/09/05 13:56:26 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:26 [INFO] Building AWS region structure
2017/09/05 13:56:26 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:26 [INFO] Building AWS auth structure
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 13:56:27 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:27 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 13:56:27 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=7ba015cee604e32b5cc9ae800d05cd9ea43894a7e53dede43cea0f572809a3d7
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:27 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205627Z
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:27 [DEBUG] plugin: terraform: 
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 13:56:27 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 13:56:27 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:27 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:26 GMT
2017/09/05 13:56:27 [DEBUG] plugin: terraform: X-Amzn-Requestid: af5c48ae-927c-11e7-aad9-b515222d9d8b
2017/09/05 13:56:27 [DEBUG] plugin: terraform: 
2017/09/05 13:56:27 [DEBUG] plugin: terraform: 
2017/09/05 13:56:27 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 13:56:27 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 13:56:27 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:56:27 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:56:27 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 13:56:27 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 13:56:27 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:56:27 [DEBUG] plugin: terraform:     <RequestId>af5c48ae-927c-11e7-aad9-b515222d9d8b</RequestId>
2017/09/05 13:56:27 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:56:27 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 13:56:27 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:27 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 13:56:27 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:27 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 13:56:27 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=416e7e865fa259ad218f57dc513701ceb829bb4d3dbc474a283a23e0c14d41f3
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:27 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205627Z
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:27 [DEBUG] plugin: terraform: 
2017/09/05 13:56:27 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 13:56:27 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 13:56:28 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:28 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:27 GMT
2017/09/05 13:56:28 [DEBUG] plugin: terraform: X-Amzn-Requestid: afa4e9e8-927c-11e7-bb99-bb5a1944023d
2017/09/05 13:56:28 [DEBUG] plugin: terraform: 
2017/09/05 13:56:28 [DEBUG] plugin: terraform: 
2017/09/05 13:56:28 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 13:56:28 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:     <User>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:     </User>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:     <RequestId>afa4e9e8-927c-11e7-bb99-bb5a1944023d</RequestId>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:56:28 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 13:56:28 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:28 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:28 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=205f5f7c32679709258db43e0b431ede5c051e5a67527680b2fb4c8e0c9a5e5f
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:28 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205628Z
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:28 [DEBUG] plugin: terraform: 
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 13:56:28 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 13:56:28 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:28 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:27 GMT
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:28 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:28 [DEBUG] plugin: terraform: 
2017/09/05 13:56:28 [DEBUG] plugin: terraform: 
2017/09/05 13:56:28 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:28 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:28 [DEBUG] plugin: terraform:     <requestId>282c8c21-5d8a-4de8-b164-67604e24167b</requestId>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:28 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 13:56:28 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: provider.aws
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 13:56:28 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:56:28 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] OrphanResourceCount: Starting...
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:56:28 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:28 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: provider.aws (close)
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: provider.aws (close)
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:56:28 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:56:28 [TRACE] [walkPlan] Entering eval tree: provisioner.file (close)
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:56:28 [TRACE] [walkPlan] Exiting eval tree: provisioner.file (close)
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "root"
2017/09/05 13:56:28 [DEBUG] vertex 'root.root': walking
2017/09/05 13:56:28 [INFO] terraform: building graph: GraphTypeApply
2017/09/05 13:56:28 [TRACE] DiffTransformer: starting
2017/09/05 13:56:28 [TRACE] DiffTransformer: Module: CREATE: aws_security_group.internet_access
  description:                           "" => "internet_access tcp port 80" (forces new resource)
  egress.#:                              "" => "1"
  egress.482069346.cidr_blocks.#:        "" => "1"
  egress.482069346.cidr_blocks.0:        "" => "0.0.0.0/0"
  egress.482069346.from_port:            "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:   "" => "0"
  egress.482069346.prefix_list_ids.#:    "" => "0"
  egress.482069346.protocol:             "" => "-1"
  egress.482069346.security_groups.#:    "" => "0"
  egress.482069346.self:                 "" => "false"
  egress.482069346.to_port:              "" => "0"
  ingress.#:                             "" => "1"
  ingress.2214680975.cidr_blocks.#:      "" => "1"
  ingress.2214680975.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.2214680975.from_port:          "" => "80"
  ingress.2214680975.ipv6_cidr_blocks.#: "" => "0"
  ingress.2214680975.protocol:           "" => "tcp"
  ingress.2214680975.security_groups.#:  "" => "0"
  ingress.2214680975.self:               "" => "false"
  ingress.2214680975.to_port:            "" => "80"
  name:                                  "" => "internet_access" (forces new resource)
  owner_id:                              "" => "<computed>"
  tags.%:                                "" => "1"
  tags.Name:                             "" => "internet_access"
  vpc_id:                                "" => "<computed>" (forces new resource)
CREATE: aws_security_group.splunk_access
  description:                          "" => "splunk_access tcp port 8080" (forces new resource)
  egress.#:                             "" => "1"
  egress.482069346.cidr_blocks.#:       "" => "1"
  egress.482069346.cidr_blocks.0:       "" => "0.0.0.0/0"
  egress.482069346.from_port:           "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:  "" => "0"
  egress.482069346.prefix_list_ids.#:   "" => "0"
  egress.482069346.protocol:            "" => "-1"
  egress.482069346.security_groups.#:   "" => "0"
  egress.482069346.self:                "" => "false"
  egress.482069346.to_port:             "" => "0"
  ingress.#:                            "" => "1"
  ingress.516175195.cidr_blocks.#:      "" => "1"
  ingress.516175195.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.516175195.from_port:          "" => "8080"
  ingress.516175195.ipv6_cidr_blocks.#: "" => "0"
  ingress.516175195.protocol:           "" => "tcp"
  ingress.516175195.security_groups.#:  "" => "0"
  ingress.516175195.self:               "" => "false"
  ingress.516175195.to_port:            "" => "8080"
  name:                                 "" => "splunk_access" (forces new resource)
  owner_id:                             "" => "<computed>"
  tags.%:                               "" => "1"
  tags.Name:                            "" => "splunk_access"
  vpc_id:                               "" => "<computed>" (forces new resource)
CREATE: aws_security_group.ssh_access
  description:                           "" => "ssh_access group" (forces new resource)
  egress.#:                              "" => "1"
  egress.482069346.cidr_blocks.#:        "" => "1"
  egress.482069346.cidr_blocks.0:        "" => "0.0.0.0/0"
  egress.482069346.from_port:            "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:   "" => "0"
  egress.482069346.prefix_list_ids.#:    "" => "0"
  egress.482069346.protocol:             "" => "-1"
  egress.482069346.security_groups.#:    "" => "0"
  egress.482069346.self:                 "" => "false"
  egress.482069346.to_port:              "" => "0"
  ingress.#:                             "" => "1"
  ingress.2541437006.cidr_blocks.#:      "" => "1"
  ingress.2541437006.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.2541437006.from_port:          "" => "22"
  ingress.2541437006.ipv6_cidr_blocks.#: "" => "0"
  ingress.2541437006.protocol:           "" => "tcp"
  ingress.2541437006.security_groups.#:  "" => "0"
  ingress.2541437006.self:               "" => "false"
  ingress.2541437006.to_port:            "" => "22"
  name:                                  "" => "ssh_access" (forces new resource)
  owner_id:                              "" => "<computed>"
  vpc_id:                                "" => "<computed>" (forces new resource)
CREATE: aws_security_group.tcp_internal_access
  description:                          "" => "internal_access group" (forces new resource)
  egress.#:                             "" => "1"
  egress.482069346.cidr_blocks.#:       "" => "1"
  egress.482069346.cidr_blocks.0:       "" => "0.0.0.0/0"
  egress.482069346.from_port:           "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:  "" => "0"
  egress.482069346.prefix_list_ids.#:   "" => "0"
  egress.482069346.protocol:            "" => "-1"
  egress.482069346.security_groups.#:   "" => "0"
  egress.482069346.self:                "" => "false"
  egress.482069346.to_port:             "" => "0"
  ingress.#:                            "" => "1"
  ingress.868428910.cidr_blocks.#:      "" => "1"
  ingress.868428910.cidr_blocks.0:      "" => "172.31.0.0/16"
  ingress.868428910.from_port:          "" => "1"
  ingress.868428910.ipv6_cidr_blocks.#: "" => "0"
  ingress.868428910.protocol:           "" => "tcp"
  ingress.868428910.security_groups.#:  "" => "0"
  ingress.868428910.self:               "" => "false"
  ingress.868428910.to_port:            "" => "65535"
  name:                                 "" => "internal_access" (forces new resource)
  owner_id:                             "" => "<computed>"
  tags.%:                               "" => "1"
  tags.Name:                            "" => "tcp_internal_access"
  vpc_id:                               "" => "<computed>" (forces new resource)
CREATE: aws_spot_instance_request.mtg_worker01
  ami:                          "" => "ami-e1679399" (forces new resource)
  associate_public_ip_address:  "" => "true" (forces new resource)
  availability_zone:            "" => "<computed>" (forces new resource)
  ebs_block_device.#:           "" => "<computed>" (forces new resource)
  ephemeral_block_device.#:     "" => "<computed>" (forces new resource)
  instance_state:               "" => "<computed>" (forces new resource)
  instance_type:                "" => "m3.medium" (forces new resource)
  ipv6_address_count:           "" => "<computed>" (forces new resource)
  ipv6_addresses.#:             "" => "<computed>" (forces new resource)
  key_name:                     "" => "<computed>" (forces new resource)
  network_interface.#:          "" => "<computed>" (forces new resource)
  network_interface_id:         "" => "<computed>" (forces new resource)
  placement_group:              "" => "<computed>" (forces new resource)
  primary_network_interface_id: "" => "<computed>" (forces new resource)
  private_dns:                  "" => "<computed>" (forces new resource)
  private_ip:                   "" => "<computed>" (forces new resource)
  public_dns:                   "" => "<computed>" (forces new resource)
  public_ip:                    "" => "<computed>" (forces new resource)
  root_block_device.#:          "" => "<computed>" (forces new resource)
  security_groups.#:            "" => "<computed>" (forces new resource)
  source_dest_check:            "" => "true" (forces new resource)
  spot_bid_status:              "" => "<computed>"
  spot_instance_id:             "" => "<computed>"
  spot_price:                   "" => "0.02" (forces new resource)
  spot_request_state:           "" => "<computed>"
  spot_type:                    "" => "persistent"
  subnet_id:                    "" => "subnet-401d891b" (forces new resource)
  tenancy:                      "" => "<computed>" (forces new resource)
  vpc_security_group_ids.#:     "" => "<computed>" (forces new resource)
  wait_for_fulfillment:         "" => "true"
2017/09/05 13:56:28 [TRACE] DiffTransformer: Resource "aws_security_group.tcp_internal_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"172.31.0.0/16", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"tcp_internal_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "description":*terraform.ResourceAttrDiff{Old:"", New:"internal_access group", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.from_port":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.to_port":*terraform.ResourceAttrDiff{Old:"", New:"65535", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"internal_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.868428910.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:56:28 [TRACE] DiffTransformer: Resource "aws_security_group.splunk_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access tcp port 8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.516175195.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.to_port":*terraform.ResourceAttrDiff{Old:"", New:"8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.from_port":*terraform.ResourceAttrDiff{Old:"", New:"8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:56:28 [TRACE] DiffTransformer: Resource "aws_spot_instance_request.mtg_worker01": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"source_dest_check":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ipv6_address_count":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "root_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ephemeral_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ami":*terraform.ResourceAttrDiff{Old:"", New:"ami-e1679399", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_bid_status":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "associate_public_ip_address":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "instance_type":*terraform.ResourceAttrDiff{Old:"", New:"m3.medium", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "key_name":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "primary_network_interface_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "wait_for_fulfillment":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "public_ip":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_instance_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "private_ip":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "network_interface.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_type":*terraform.ResourceAttrDiff{Old:"", New:"persistent", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_security_group_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_request_state":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ipv6_addresses.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "tenancy":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ebs_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "network_interface_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "availability_zone":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "placement_group":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_price":*terraform.ResourceAttrDiff{Old:"", New:"0.02", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "public_dns":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "private_dns":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "instance_state":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "subnet_id":*terraform.ResourceAttrDiff{Old:"", New:"subnet-401d891b", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:56:28 [TRACE] DiffTransformer: Resource "aws_security_group.internet_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.from_port":*terraform.ResourceAttrDiff{Old:"", New:"80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "ingress.2214680975.to_port":*terraform.ResourceAttrDiff{Old:"", New:"80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"internet_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"internet_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"internet_access tcp port 80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.2214680975.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:56:28 [TRACE] DiffTransformer: Resource "aws_security_group.ssh_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"ssh_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.2541437006.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.from_port":*terraform.ResourceAttrDiff{Old:"", New:"22", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.to_port":*terraform.ResourceAttrDiff{Old:"", New:"22", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "ingress.2541437006.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"ssh_access group", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.DiffTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:56:28 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 13:56:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 13:56:28 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755d40), RawConfig:(*config.RawConfig)(0xc420755200), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 13:56:28 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420758a20), RawConfig:(*config.RawConfig)(0xc420755ec0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:28 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc42036f200), RawConfig:(*config.RawConfig)(0xc42036e960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc42057cfc0), (*config.Provisioner)(0xc42057d110), (*config.Provisioner)(0xc420527890), (*config.Provisioner)(0xc420527a10)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 13:56:28 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4207596e0), RawConfig:(*config.RawConfig)(0xc420758ba0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:28 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 13:56:28 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420755080), RawConfig:(*config.RawConfig)(0xc420754660), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 13:56:28 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:56:28 [TRACE] Attach provider request: []string{} aws
2017/09/05 13:56:28 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc42036e540)}
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:56:28 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:56:28 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access]
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.profile var.region]
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 13:56:28 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 13:56:28 [DEBUG] Starting graph walk: walkApply
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 13:56:28 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 13:56:28 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 13:56:28 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "var.env"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "var.region"
2017/09/05 13:56:28 [DEBUG] vertex 'root.var.region': walking
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 13:56:28 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.var.env': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 13:56:28 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 13:56:28 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 13:56:28 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 13:56:28 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 13:56:28 [TRACE] [walkApply] Entering eval tree: provisioner.file
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:56:28 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 13:56:28 [TRACE] [walkApply] Entering eval tree: provider.aws
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 13:56:28 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 13:56:28 [TRACE] [walkApply] Exiting eval tree: provisioner.file
2017/09/05 13:56:28 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec
2017/09/05 13:56:28 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:28 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:28 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [INFO] No assume_role block read from configuration
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [INFO] Building AWS region structure
2017/09/05 13:56:28 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:28 [INFO] Building AWS auth structure
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 13:56:29 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:29 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 13:56:29 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=1b28d04878e889575f0ac1d1cbcff15e2f759a74cc583393f56c2b3fd89f2f65
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:29 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205629Z
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:29 [DEBUG] plugin: terraform: 
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 13:56:29 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 13:56:29 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:29 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:28 GMT
2017/09/05 13:56:29 [DEBUG] plugin: terraform: X-Amzn-Requestid: b099f880-927c-11e7-aeca-c57ccb18351d
2017/09/05 13:56:29 [DEBUG] plugin: terraform: 
2017/09/05 13:56:29 [DEBUG] plugin: terraform: 
2017/09/05 13:56:29 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 13:56:29 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 13:56:29 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:56:29 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:56:29 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 13:56:29 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 13:56:29 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:56:29 [DEBUG] plugin: terraform:     <RequestId>b099f880-927c-11e7-aeca-c57ccb18351d</RequestId>
2017/09/05 13:56:29 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:56:29 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 13:56:29 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:29 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 13:56:29 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:29 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 13:56:29 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=fa28302362599436aa31c42c230e1733438b079c0393f38a0174e15bc6003820
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:29 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205629Z
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:29 [DEBUG] plugin: terraform: 
2017/09/05 13:56:29 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 13:56:29 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amzn-Requestid: b0c8348a-927c-11e7-bb99-bb5a1944023d
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <User>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     </User>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <RequestId>b0c8348a-927c-11e7-bb99-bb5a1944023d</RequestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=eddf0cb890fc1e49e21b1e820cdaa0daf18e0cab4dfe7c5ce66e6c6b4c7bac18
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>aa3bf55b-eff4-4655-9db6-71e35507b7c9</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 13:56:30 [TRACE] [walkApply] Exiting eval tree: provider.aws
2017/09/05 13:56:30 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 13:56:30 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 13:56:30 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 13:56:30 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 13:56:30 [TRACE] [walkApply] Entering eval tree: aws_security_group.splunk_access
2017/09/05 13:56:30 [TRACE] [walkApply] Entering eval tree: aws_security_group.ssh_access
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [TRACE] [walkApply] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:30 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 13:56:30 [TRACE] [walkApply] Entering eval tree: aws_security_group.internet_access
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:30 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:56:30 [DEBUG] apply: aws_security_group.ssh_access: executing Apply
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:56:30 [DEBUG] apply: aws_security_group.splunk_access: executing Apply
2017/09/05 13:56:30 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:56:30 [DEBUG] apply: aws_security_group.internet_access: executing Apply
2017/09/05 13:56:30 [DEBUG] apply: aws_security_group.tcp_internal_access: executing Apply
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Security Group create configuration: {
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   GroupName: "splunk_access"
2017/09/05 13:56:30 [DEBUG] plugin: terraform: }
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Security Group create configuration: {
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   GroupName: "internet_access"
2017/09/05 13:56:30 [DEBUG] plugin: terraform: }
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Security Group create configuration: {
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   GroupName: "ssh_access"
2017/09/05 13:56:30 [DEBUG] plugin: terraform: }
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Security Group create configuration: {
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   GroupName: "internal_access"
2017/09/05 13:56:30 [DEBUG] plugin: terraform: }
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 114
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b767254e674d5de70a52beb11c4718a2d4625c0669fbf725829dca1dfef89295
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=splunk_access+tcp+port+8080&GroupName=splunk_access&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 110
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=4b5e6171cfaa38aa85d813c766d6ff2467706c95e328b580a705eb457397c114
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=internal_access+group&GroupName=internal_access&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 100
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=493e65c5d36b6a4826397d8d75e93510fd983ddc6d071e6015e45e355b65aba9
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=ssh_access+group&GroupName=ssh_access&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 116
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=2f247a7a2ed9cc93da06500a74c4cf3ac42bb135d64dcc74bcacfa6ead94db55
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=internet_access+tcp+port+80&GroupName=internet_access&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>75ed3304-e781-4653-a2a1-fef52cc83d76</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [INFO] Security Group ID: sg-56bab72c
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for Security Group (sg-56bab72c) to exist
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=d518e6ea8b3ddb9a1d5e3e90d3f5b8fbf02fa39e71faba0528895b1d9a05350b
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-56bab72c&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>583f5064-f9b3-4118-b098-408df01938ba</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [INFO] Security Group ID: sg-8abab7f0
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for Security Group (sg-8abab7f0) to exist
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0ebb4a7b98a92b2ed3c61124434d991ac9af95bb2e552337b3e9149a14f0fd41
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-8abab7f0&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>64c7bcbc-98d3-4fd0-b585-0d9e51537216</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [INFO] Security Group ID: sg-59b9b423
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for Security Group (sg-59b9b423) to exist
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f1e1d15d8fb2a62c909325e60f07411dd50f5ca9d270f97013ad27aa09675900
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-59b9b423&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>30f5dcd6-2789-419e-8d21-86eeb8565536</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [INFO] Security Group ID: sg-5eb9b424
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for Security Group (sg-5eb9b424) to exist
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for state to become: [exists]
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=00fa219bf49ece62697de62faeb634bb441563fb729ce529cf09b2aaf884ab58
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-5eb9b424&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>8fca5ffc-5dab-4ecd-8564-155ee73f7fff</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Creating tags: [{
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Value: "tcp_internal_access"
2017/09/05 13:56:30 [DEBUG] plugin: terraform: }] for sg-8abab7f0
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 108
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=9df726e5c5c2e5480452c1b288d9812b912bc9b0727a70baa20e6ba5462cbd12
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-8abab7f0&Tag.1.Key=Name&Tag.1.Value=tcp_internal_access&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>84de674a-1e23-4d74-83ee-da92c997d214</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Revoking default egress rule for Security Group for sg-5eb9b424
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=5d1c2b13205c6498614cc275f1fb0866fc019298a55f2adb77ea4546d0e82325
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-5eb9b424&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>8329bf99-b8d5-4052-ae38-bad7ce84f816</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Creating tags: [{
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Value: "internet_access"
2017/09/05 13:56:30 [DEBUG] plugin: terraform: }] for sg-56bab72c
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 104
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ca4e1c92aad353859ecec64eef8521aed9d2530a16723d68e5f0b3b0e1534cbf
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-56bab72c&Tag.1.Key=Name&Tag.1.Value=internet_access&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <requestId>c538f38e-6727-429f-9596-a70de0b4c95f</requestId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:30 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] Creating tags: [{
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 13:56:30 [DEBUG] plugin: terraform:   Value: "splunk_access"
2017/09/05 13:56:30 [DEBUG] plugin: terraform: }] for sg-59b9b423
2017/09/05 13:56:30 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:30 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 13:56:30 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:30 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:30 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Length: 102
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=1164fe73d03be91c6630fe8aff01497511cbc0c2b0864dbc607cd857165cce33
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:30 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205630Z
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:30 [DEBUG] plugin: terraform: 
2017/09/05 13:56:30 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-59b9b423&Tag.1.Key=Name&Tag.1.Value=splunk_access&Version=2016-11-15
2017/09/05 13:56:30 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>be8663b1-9917-46b4-9c8a-a1b91ad534fa</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Revoking default egress rule for Security Group for sg-8abab7f0
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=112319337f5f3db39ae291b78dbe94e3986b59496b6a4955c114e46a5707cbfc
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-8abab7f0&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>81a7ba65-2932-41d1-984a-fde94d3d1bdc</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-5eb9b424
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=bb9a0370d057815287d76bec8b5f01052bf0f7eac5da1dd5fe54cea8e4e7e2a8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-5eb9b424&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>4e3b4a3b-8c19-4585-bb98-ad79958f131c</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Revoking default egress rule for Security Group for sg-56bab72c
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=813ea5cba1ff6bd986178a16bdac5bf01532b941e7961f3cb54689a36461d6f0
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-56bab72c&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:29 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>aa283f20-0569-4701-a132-7acee9a3f93c</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Revoking default egress rule for Security Group for sg-59b9b423
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ceff4bb5ee875fbd9c483f645c296dbdccd76a644f9fab4fff7797d173bd8611
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-59b9b423&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>72154654-89b5-4c17-a095-5fdf7cc323a9</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-8abab7f0
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=708e537e6b7a690d5b6be2b69ed81b4acf58b7c3bb5474d4263dc3f3c749852e
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-8abab7f0&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>74f235b2-17a0-4d7b-816a-005e59298af1</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b5115e3515f4ac778b5ae706bb4be9d9d4299ca9db46349f77e72b3edcd2d2e3
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-5eb9b424&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>8f61fa44-803e-4a27-a993-079b5ae60d7f</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-59b9b423
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a5d2a26949e20d0ab98169c66adcbd1da82adb82e51ff72a7a5e76acb50c35ec
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-59b9b423&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>35b7a2c2-2161-429e-bb51-160bff719edc</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-56bab72c
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=947d6d5a0515683283d6eeed0001c650fca29aec1a95630c9dc31a0dc49a9a41
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-56bab72c&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>957783dc-001b-4b91-91ab-c9d60d737b7f</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Authorizing security group {
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupId: "sg-5eb9b424",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupName: "ssh_access",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:31 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   FromPort: 22,
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   ToPort: 22
2017/09/05 13:56:31 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 206
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=662751f5987b7f3858a8b3e1a78a4991447575a822a1c5e37d360654370125c2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-5eb9b424&IpPermissions.1.FromPort=22&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=22&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>0a0341e6-cbd7-4974-bf63-58c68822ba32</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=298ae505e90eb7bfb19c10db6b722a740b6deeda41ac3e453c617ebfdc7ff379
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-8abab7f0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>08d9f523-7ebb-471e-b9c6-9401f71155fa</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e5ade0b006738f0f76a22dbf085efddd908fdfc6e5d81c3919377fccdc83d93b
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-59b9b423&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>4e8cf0e7-edfc-4631-b2b6-c0558d53e8ad</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f83dc3e0289bda88d4fa6b42b4d8bdeb2603c72a3db661ec13c43ba341897bab
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-56bab72c&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:30 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>1fa77a59-b92e-4681-be09-a39fc12eabff</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Authorizing security group {
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupId: "sg-8abab7f0",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupName: "internal_access",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       Value: "tcp_internal_access"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:31 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   FromPort: 1,
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       CidrIp: "172.31.0.0/16"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   ToPort: 65535
2017/09/05 13:56:31 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 212
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0bdf7c07600b8106286f31bea45634c30fb7b0fee06e42292931a1fa6bbbb827
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-8abab7f0&IpPermissions.1.FromPort=1&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=172.31.0.0%2F16&IpPermissions.1.ToPort=65535&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>9d87d512-86df-42aa-8ef5-311fb4a2e3d8</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Authorizing security group {
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupId: "sg-56bab72c",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupName: "internet_access",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       Value: "internet_access"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:31 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   FromPort: 80,
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   ToPort: 80
2017/09/05 13:56:31 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 206
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a8f46c3a40ff53d38c3f4dc4d3f8aac77c2afca6fb522d0eb2274a7b2914a51a
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-56bab72c&IpPermissions.1.FromPort=80&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=80&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>30d78c41-1a2d-4bd6-a76b-17d183a7b4bf</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Authorizing security group {
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupId: "sg-59b9b423",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupName: "splunk_access",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       Value: "splunk_access"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:31 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   FromPort: 8080,
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   ToPort: 8080
2017/09/05 13:56:31 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 210
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=fb22866d4122c1d354a3c4550a72ff3419d69b25cedfc9fb3210e6f1845a1e86
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-59b9b423&IpPermissions.1.FromPort=8080&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=8080&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <requestId>12e476a3-a95d-4b1d-a96d-b7c1a4fa5593</requestId>
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] Authorizing security group {
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupId: "sg-5eb9b424",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   GroupName: "ssh_access",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:31 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:31 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:56:31 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:31 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:56:31 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:31 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:31 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:31 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:31 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:31 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=020ab1c8dd65d6b3564cc14987ca2597c961d49e46e41da09087c3ccf7f3ba88
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:31 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205631Z
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:31 [DEBUG] plugin: terraform: 
2017/09/05 13:56:31 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-5eb9b424&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:31 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>5c927007-1d94-4d71-8130-98dc0bda3375</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>18640f88-f70e-41e5-9c4a-1541ad3a524f</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=5595c737b0462505b6602bfdd7b2f93812e6db535c6b97b8765632f62bdd2e99
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-5eb9b424&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Authorizing security group {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   GroupId: "sg-8abab7f0",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   GroupName: "internal_access",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Value: "tcp_internal_access"
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:32 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:56:32 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ce1ea762243cec0f74060583bf9d4d8191db1f545c1a691c6c3c5a6f70a385a9
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-8abab7f0&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>fbb2c8ba-fb1e-44a6-a612-f9aa9056dc17</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Authorizing security group {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   GroupId: "sg-59b9b423",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   GroupName: "splunk_access",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Value: "splunk_access"
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:32 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:56:32 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=82a9b5790af8aca858fbe16f7e89dff0d80d4b56c9e2e15c347879f0e04dd595
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-59b9b423&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>a7f8e29f-640d-4f28-b011-9fe343d41723</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Authorizing security group {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   GroupId: "sg-56bab72c",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   GroupName: "internet_access",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Value: "internet_access"
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 13:56:32 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     }],
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 13:56:32 [DEBUG] plugin: terraform: }}
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e23cc271d8a160b51a0d21967db7f3fd323dc6fd41e545cdbcbfe5c99b141e12
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-56bab72c&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:32 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>0a030eb9-4ab1-4d0f-8725-b7464f7353c8</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=27776c1f0f7a77afaf3351f199a605c7fd2979c971aa06ec2fdebf64069da582
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-59b9b423&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>b14f909e-e00e-4dba-bf1d-ca0d57360db6</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=2138f454c85460fe2a22ec6ef7455ada8f03e558b1e9721e251c75ec72fee5de
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-8abab7f0&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>49f933c0-3195-4068-84d7-f1e213843dfe</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <fromPort>22</fromPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <toPort>22</toPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:56:32 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:56:32 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:56:32 [TRACE] [walkApply] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>f18ae432-7263-49ca-b663-6bde85e3c3ae</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a4ccdbcf6204d9f1e2fc300aeb2b3fa357537cc0214ad34f77d67ba0f4b89aac
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-56bab72c&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:32 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>56d224b4-5c8e-44d1-b970-b3941b82fcd9</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <fromPort>8080</fromPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <toPort>8080</toPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:56:32 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:56:32 [TRACE] [walkApply] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:32 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>15f510c4-2aaf-4034-ab41-3ce0d6921290</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <fromPort>80</fromPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <toPort>80</toPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:31 GMT
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <requestId>a9f9b2fc-f275-4b64-8f37-c1ac82d8d5b1</requestId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <fromPort>1</fromPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <toPort>65535</toPort>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>172.31.0.0/16</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Matching ^aws: with Name
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:56:32 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [TRACE] [walkApply] Exiting eval tree: aws_security_group.internet_access
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:56:32 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:56:32 [TRACE] [walkApply] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 13:56:32 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:32 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 13:56:32 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 13:56:32 [TRACE] [walkApply] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:32 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 13:56:32 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 13:56:32 [DEBUG] apply: aws_spot_instance_request.mtg_worker01: executing Apply
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Requesting spot bid opts: {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   InstanceCount: 1,
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   LaunchSpecification: {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     EbsOptimized: false,
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     IamInstanceProfile: {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Name: ""
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     },
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     ImageId: "ami-e1679399",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     InstanceType: "m3.medium",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     Monitoring: {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       Enabled: false
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     },
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     Placement: {
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       AvailabilityZone: "",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       GroupName: ""
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     },
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     SecurityGroupIds: [
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       "sg-8abab7f0",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       "sg-59b9b423",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       "sg-5eb9b424",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:       "sg-56bab72c"
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     ],
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     SubnetId: "subnet-401d891b",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:     UserData: ""
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   },
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   SpotPrice: "0.02",
2017/09/05 13:56:32 [DEBUG] plugin: terraform:   Type: "persistent"
2017/09/05 13:56:32 [DEBUG] plugin: terraform: }
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] Waiting for state to become: [success]
2017/09/05 13:56:32 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:32 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RequestSpotInstances Details:
2017/09/05 13:56:32 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:32 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:32 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Length: 670
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=28f9a76e3c63caaf4dec2d67a6f60d494632595f8c76ffb71d4b48da59385d23
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:32 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205632Z
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:32 [DEBUG] plugin: terraform: 
2017/09/05 13:56:32 [DEBUG] plugin: terraform: Action=RequestSpotInstances&InstanceCount=1&LaunchSpecification.EbsOptimized=false&LaunchSpecification.IamInstanceProfile.Name=&LaunchSpecification.ImageId=ami-e1679399&LaunchSpecification.InstanceType=m3.medium&LaunchSpecification.Monitoring.Enabled=false&LaunchSpecification.Placement.AvailabilityZone=&LaunchSpecification.Placement.GroupName=&LaunchSpecification.SecurityGroupId.1=sg-8abab7f0&LaunchSpecification.SecurityGroupId.2=sg-59b9b423&LaunchSpecification.SecurityGroupId.3=sg-5eb9b424&LaunchSpecification.SecurityGroupId.4=sg-56bab72c&LaunchSpecification.SubnetId=subnet-401d891b&LaunchSpecification.UserData=&SpotPrice=0.02&Type=persistent&Version=2016-11-15
2017/09/05 13:56:32 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:33 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RequestSpotInstances Details:
2017/09/05 13:56:33 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:33 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:33 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:33 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:33 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:33 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:32 GMT
2017/09/05 13:56:33 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:33 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:33 [DEBUG] plugin: terraform: 
2017/09/05 13:56:33 [DEBUG] plugin: terraform: 
2017/09/05 13:56:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:33 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:33 [DEBUG] plugin: terraform: <RequestSpotInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:33 [DEBUG] plugin: terraform:     <requestId>33155c0e-c6d1-4a64-8406-c652a1530bee</requestId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <state>open</state>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <status>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <code>pending-evaluation</code>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:56:32.000Z</updateTime>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <message>Your Spot request has been submitted for review, and is pending evaluation.</message>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             </status>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:56:32.000Z</createTime>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:33 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:56:33 [DEBUG] plugin: terraform: </RequestSpotInstancesResponse>
2017/09/05 13:56:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:33 [DEBUG] waiting for spot bid to resolve... this may take several minutes.
2017/09/05 13:56:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:33 [DEBUG] Waiting for state to become: [fulfilled]
2017/09/05 13:56:33 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:33 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:33 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:33 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:33 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:56:38 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:38 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:38 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:56:38 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:38 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:43 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:56:43 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:43 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=dc7b6ece98b7d95f43587f8126d827105fd3dbfd56eb632b0b9756d57a20605c
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:43 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205643Z
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:43 [DEBUG] plugin: terraform: 
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-rv389ren&Version=2016-11-15
2017/09/05 13:56:43 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:43 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:56:43 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:42 GMT
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:43 [DEBUG] plugin: terraform: 
2017/09/05 13:56:43 [DEBUG] plugin: terraform: 
2017/09/05 13:56:43 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:43 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:43 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:43 [DEBUG] plugin: terraform:     <requestId>a7364bb5-f6af-455e-8e84-866f3d5b747b</requestId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <status>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:56:40.000Z</updateTime>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             </status>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:56:32.000Z</createTime>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 13:56:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:43 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:56:43 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:43 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=dc7b6ece98b7d95f43587f8126d827105fd3dbfd56eb632b0b9756d57a20605c
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:43 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205643Z
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:43 [DEBUG] plugin: terraform: 
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-rv389ren&Version=2016-11-15
2017/09/05 13:56:43 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:43 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:43 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:43 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:43 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:43 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:56:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:43 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 13:56:43 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:42 GMT
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:43 [DEBUG] plugin: terraform: 
2017/09/05 13:56:43 [DEBUG] plugin: terraform: 
2017/09/05 13:56:43 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:43 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:43 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:43 [DEBUG] plugin: terraform:     <requestId>68efaa29-a046-45aa-a267-a4c64410ecb8</requestId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <status>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:56:40.000Z</updateTime>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             </status>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:56:32.000Z</createTime>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:43 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 13:56:43 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 13:56:43 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:43 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 13:56:43 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:43 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:43 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c598cac537c16270c65132a780f339cdc14760d0e4205d26e2230729f97bcb4e
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:43 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205643Z
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:43 [DEBUG] plugin: terraform: 
2017/09/05 13:56:43 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-013dd296d7cc78f5e&Version=2016-11-15
2017/09/05 13:56:43 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:44 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:44 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 13:56:44 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:44 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:43 GMT
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:44 [DEBUG] plugin: terraform: 
2017/09/05 13:56:44 [DEBUG] plugin: terraform: 
2017/09/05 13:56:44 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:44 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:44 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:44 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:44 [DEBUG] plugin: terraform:     <requestId>cf2f88c8-7137-4e90-b19b-754250ee0cac</requestId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <reservationId>r-09fc5877a3dd8bca9</reservationId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <code>0</code>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <name>pending</name>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <privateDnsName>ip-172-31-12-87.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <dnsName>ec2-34-212-181-84.us-west-2.compute.amazonaws.com</dnsName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <reason/>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:56:40.000Z</launchTime>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <privateIpAddress>172.31.12.87</privateIpAddress>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <ipAddress>34.212.181.84</ipAddress>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <sourceDestCheck>true</sourceDestCheck>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <groupSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupName>internet_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupName>splunk_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupName>ssh_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupName>internal_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     </groupSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <status>attaching</status>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <clientToken>14ad4612-8aba-4803-823e-0a70f14341fc</clientToken>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-0f018b0c</networkInterfaceId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <subnetId>subnet-401d891b</subnetId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <vpcId>vpc-308c2256</vpcId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <description/>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <macAddress>0a:69:17:8c:7f:aa</macAddress>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <privateIpAddress>172.31.12.87</privateIpAddress>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <privateDnsName>ip-172-31-12-87.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <sourceDestCheck>true</sourceDestCheck>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <groupSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupId>sg-56bab72c</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupName>internet_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupId>sg-59b9b423</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupName>splunk_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupId>sg-5eb9b424</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupName>ssh_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupId>sg-8abab7f0</groupId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <groupName>internal_access</groupName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             </groupSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-346da7d0</attachmentId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <status>attaching</status>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <association>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <publicIp>34.212.181.84</publicIp>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <publicDnsName>ec2-34-212-181-84.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <ipOwnerId>amazon</ipOwnerId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             </association>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <privateIpAddressesSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <privateIpAddress>172.31.12.87</privateIpAddress>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <privateDnsName>ip-172-31-12-87.us-west-2.compute.internal</privateDnsName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <primary>true</primary>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <association>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <publicIp>34.212.181.84</publicIp>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <publicDnsName>ec2-34-212-181-84.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     <ipOwnerId>amazon</ipOwnerId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                     </association>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             </privateIpAddressesSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                             <ipv6AddressesSet/>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 13:56:44 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:44 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVolumes Details:
2017/09/05 13:56:44 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 13:56:44 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 13:56:44 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Content-Length: 74
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ef2fa10d74445b80919741a85c475a2fab59ecf69aff805a6668f3da4b2adc05
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 13:56:44 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T205644Z
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 13:56:44 [DEBUG] plugin: terraform: 
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Action=DescribeVolumes&Version=2016-11-15&VolumeId.1=vol-04ad5d0858d97fef8
2017/09/05 13:56:44 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:44 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:44 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVolumes Details:
2017/09/05 13:56:44 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 13:56:44 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Connection: close
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 20:56:43 GMT
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 13:56:44 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 13:56:44 [DEBUG] plugin: terraform: 
2017/09/05 13:56:44 [DEBUG] plugin: terraform: 
2017/09/05 13:56:44 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 13:56:44 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:56:44 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 13:56:44 [DEBUG] plugin: terraform: <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 13:56:44 [DEBUG] plugin: terraform:     <requestId>b2ab478c-5b77-4334-ab9e-3528a75721bb</requestId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:     <volumeSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:         <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <size>8</size>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <snapshotId>snap-02b75f85999c3a768</snapshotId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <status>in-use</status>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:56:40.533Z</createTime>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <attachmentSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                 <item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <device>/dev/xvda</device>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <status>attaching</status>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                     <deleteOnTermination>true</deleteOnTermination>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:                 </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             </attachmentSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <volumeType>gp2</volumeType>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <iops>100</iops>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:             <encrypted>false</encrypted>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:         </item>
2017/09/05 13:56:44 [DEBUG] plugin: terraform:     </volumeSet>
2017/09/05 13:56:44 [DEBUG] plugin: terraform: </DescribeVolumesResponse>
2017/09/05 13:56:44 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:56:44 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 13:56:44 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:56:44 connecting to TCP connection for SSH
2017/09/05 13:56:48 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:48 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:48 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:48 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:48 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:56:53 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:56:53 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:53 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:53 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:53 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:58 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:58 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:58 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:58 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:56:58 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:56:59 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:56:59 connection error: dial tcp 34.212.181.84:22: i/o timeout
2017/09/05 13:56:59 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:56:59 Retryable error: dial tcp 34.212.181.84:22: i/o timeout
2017/09/05 13:57:02 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:02 connecting to TCP connection for SSH
2017/09/05 13:57:02 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:02 connection error: dial tcp 34.212.181.84:22: getsockopt: connection refused
2017/09/05 13:57:02 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:02 Retryable error: dial tcp 34.212.181.84:22: getsockopt: connection refused
2017/09/05 13:57:03 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:57:03 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:03 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:03 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:03 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:05 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:05 connecting to TCP connection for SSH
2017/09/05 13:57:05 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:05 connection error: dial tcp 34.212.181.84:22: getsockopt: connection refused
2017/09/05 13:57:05 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:05 Retryable error: dial tcp 34.212.181.84:22: getsockopt: connection refused
2017/09/05 13:57:08 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:08 connecting to TCP connection for SSH
2017/09/05 13:57:08 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:08 connection error: dial tcp 34.212.181.84:22: getsockopt: connection refused
2017/09/05 13:57:08 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:08 Retryable error: dial tcp 34.212.181.84:22: getsockopt: connection refused
2017/09/05 13:57:08 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:08 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:08 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:08 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:57:08 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:11 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:11 connecting to TCP connection for SSH
2017/09/05 13:57:11 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:11 handshaking with SSH
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 opening new ssh session
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Starting remote scp process:  scp -vt ~/.ssh
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Started SCP session, beginning transfers...
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Copying input data into temporary file so we can read the length
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Beginning file upload...
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 SCP session complete, closing stdin pipe.
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Waiting for SSH session to complete.
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 scp stderr (length 27): Sink: C0644 1675 my_github
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 connecting to TCP connection for SSH
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 handshaking with SSH
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 opening new ssh session
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Starting remote scp process:  scp -vt ~/.ssh
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Started SCP session, beginning transfers...
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Copying input data into temporary file so we can read the length
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Beginning file upload...
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 SCP session complete, closing stdin pipe.
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 Waiting for SSH session to complete.
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 scp stderr (length 23): Sink: C0644 116 config
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 connecting to TCP connection for SSH
2017/09/05 13:57:12 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:12 handshaking with SSH
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 opening new ssh session
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 Starting remote scp process:  scp -vt ~
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 Started SCP session, beginning transfers...
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 Copying input data into temporary file so we can read the length
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 Beginning file upload...
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 SCP session complete, closing stdin pipe.
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 Waiting for SSH session to complete.
2017/09/05 13:57:13 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:13 scp stderr (length 34): Sink: C0644 196 clone_mtg_work.sh
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 connecting to TCP connection for SSH
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 handshaking with SSH
2017/09/05 13:57:13 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:13 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:13 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:13 [DEBUG] dag/walk: vertex "root", waiting for: "provider.aws (close)"
2017/09/05 13:57:13 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 opening new ssh session
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 Starting remote scp process:  scp -vt /tmp
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 Started SCP session, beginning transfers...
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 Beginning file upload...
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 SCP session complete, closing stdin pipe.
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 Waiting for SSH session to complete.
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 scp stderr (length 39): Sink: C0644 110 terraform_521407841.sh
2017/09/05 13:57:13 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:13 opening new ssh session
2017/09/05 13:57:14 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:14 starting remote command: chmod 0777 /tmp/terraform_521407841.sh
2017/09/05 13:57:14 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:14 remote command exited with '0': chmod 0777 /tmp/terraform_521407841.sh
2017/09/05 13:57:14 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:14 opening new ssh session
2017/09/05 13:57:14 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:14 starting remote command: /tmp/terraform_521407841.sh
2017/09/05 13:57:14 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:14 remote command exited with '0': /tmp/terraform_521407841.sh
2017/09/05 13:57:14 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:14 opening new ssh session
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 Starting remote scp process:  scp -vt /tmp
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 Started SCP session, beginning transfers...
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 Copying input data into temporary file so we can read the length
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 Beginning file upload...
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 SCP session complete, closing stdin pipe.
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 Waiting for SSH session to complete.
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 scp stderr (length 37): Sink: C0644 0 terraform_521407841.sh
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 13:57:15 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:57:15 [TRACE] [walkApply] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 13:57:15 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 13:57:15 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 13:57:15 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 13:57:15 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 13:57:15 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 13:57:15 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 13:57:15 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 13:57:15 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 13:57:15 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 13:57:15 [TRACE] [walkApply] Entering eval tree: provider.aws (close)
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 13:57:15 [TRACE] [walkApply] Exiting eval tree: provider.aws (close)
2017/09/05 13:57:15 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 13:57:15 [TRACE] [walkApply] Entering eval tree: provisioner.file (close)
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:57:15 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 13:57:15 [TRACE] [walkApply] Exiting eval tree: provisioner.file (close)
2017/09/05 13:57:15 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 13:57:15 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 13:57:15 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:57:15 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 13:57:15 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 13:57:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.ssh_access.0", replace "aws_security_group.ssh_access"
2017/09/05 13:57:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.splunk_access.0", replace "aws_security_group.splunk_access"
2017/09/05 13:57:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.internet_access.0", replace "aws_security_group.internet_access"
2017/09/05 13:57:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.tcp_internal_access.0", replace "aws_security_group.tcp_internal_access"
2017/09/05 13:57:15 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_spot_instance_request.mtg_worker01.0", replace "aws_spot_instance_request.mtg_worker01"
2017/09/05 13:57:15 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 13:57:15 [DEBUG] dag/walk: walking "root"
2017/09/05 13:57:15 [DEBUG] vertex 'root.root': walking
2017/09/05 13:57:15 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 13:57:15 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:57:15 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 13:57:15 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:57:15 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 13:57:15 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:57:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 13:57:15 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 13:57:15 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:57:15 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 13:57:15 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 14:11:15 [INFO] Terraform version: 0.9.11  
2017/09/05 14:11:15 [INFO] Go runtime version: go1.8.3
2017/09/05 14:11:15 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "destroy"}
2017/09/05 14:11:15 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:15 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:15 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:11:15 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:11:15 [INFO] CLI command args: []string{"destroy"}
2017/09/05 14:11:15 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:15 [DEBUG] command: loading backend config file: /Users/ericyoung/my_github/mtg_price/terraform
2017/09/05 14:11:15 [DEBUG] command: no data state file found for backend config
2017/09/05 14:11:15 [DEBUG] New state was assigned lineage "b69b7c25-b182-4f0d-a0c5-d94423bf4d00"
2017/09/05 14:11:15 [INFO] command: backend initialized: <nil>
2017/09/05 14:11:15 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/09/05 14:11:15 [DEBUG] command: asking for input: "Do you really want to destroy?"
2017/09/05 14:11:17 [INFO] backend/local: starting Apply operation
2017/09/05 14:11:17 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:17 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:17 [INFO] terraform: building graph: GraphTypeInput
2017/09/05 14:11:17 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da1e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc4207da370), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da2d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:11:17 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4200ee540)}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [DEBUG] Starting graph walk: walkInput
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:11:17 [TRACE] [walkInput] Entering eval tree: provider.aws
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:11:17 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 14:11:17 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] Terraform version: 0.9.11
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] Go runtime version: go1.8.3
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] CLI command args: []string{"internal-plugin", "provider", "aws"}
2017/09/05 14:11:17 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:17 [INFO] Starting provider plugin aws
2017/09/05 14:11:17 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:17 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin528480966
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInputProvider
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [TRACE] [walkInput] Exiting eval tree: provider.aws
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:11:17 [TRACE] [walkInput] Entering eval tree: provider.aws (close)
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:17 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 14:11:17 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 14:11:17 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_spot_instance_request.mtg_worker01.0", replace "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 14:11:17 [TRACE] [walkInput] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:11:17 [TRACE] [walkInput] Entering eval tree: provisioner.file (close)
2017/09/05 14:11:17 [TRACE] [walkInput] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 14:11:17 [TRACE] [walkInput] Exiting eval tree: provider.aws (close)
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.internet_access.0", replace "aws_security_group.internet_access"
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.splunk_access.0", replace "aws_security_group.splunk_access"
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.ssh_access.0", replace "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:11:17 [TRACE] [walkInput] Exiting eval tree: provisioner.file (close)
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.tcp_internal_access.0", replace "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:17 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:17 [INFO] terraform: building graph: GraphTypeValidate
2017/09/05 14:11:17 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da2d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da1e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc4207da370), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:11:17 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4200ee540)}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.graphTransformerMulti:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.profile var.region]
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [DEBUG] Starting graph walk: walkValidate
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:11:17 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: provisioner.file
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: provider.aws
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:11:17 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da320), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da1e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da2d0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207da410), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] Terraform version: 0.9.11
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] Go runtime version: go1.8.3
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
2017/09/05 14:11:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:11:17 [INFO] Starting provisioner plugin remote-exec
2017/09/05 14:11:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:11:17 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin267970190
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec
2017/09/05 14:11:17 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 14:11:17 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] Terraform version: 0.9.11
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] Go runtime version: go1.8.3
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:11:17 [DEBUG] plugin: terraform: 2017/09/05 14:11:17 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
2017/09/05 14:11:17 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:11:17 [INFO] Starting provisioner plugin file
2017/09/05 14:11:17 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:11:17 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin352663968
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: provisioner.file
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc4207da370), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:17 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:11:17 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.splunk_access.0", replace "aws_security_group.splunk_access"
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.ssh_access.0", replace "aws_security_group.ssh_access"
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.tcp_internal_access.0", replace "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_spot_instance_request.mtg_worker01.0", replace "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.internet_access.0", replace "aws_security_group.internet_access"
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:11:17 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2017/09/05 14:11:17 [TRACE] [walkValidate] Entering eval tree: provisioner.file (close)
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:11:17 [TRACE] [walkValidate] Exiting eval tree: provisioner.file (close)
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:17 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:17 [INFO] backend/local: apply calling Refresh
2017/09/05 14:11:17 [INFO] terraform: building graph: GraphTypeRefresh
2017/09/05 14:11:17 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 14:11:17 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798eb0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798e10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798f50), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420798f00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798e60), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:17 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:11:17 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4200ee540)}
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:11:17 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  provider.aws (close) - *terraform.graphNodeCloseProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
  aws_security_group.internet_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResource
  aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResource
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResource
root - terraform.graphNodeRoot
  provider.aws (close) - *terraform.graphNodeCloseProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:17 [DEBUG] Starting graph walk: walkRefresh
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:11:17 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "var.domain-name"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "root" waiting on "var.stack"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 14:11:17 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:11:17 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:11:17 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:11:17 [TRACE] [walkRefresh] Entering eval tree: provider.aws
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:17 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 14:11:17 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:17 [INFO] No assume_role block read from configuration
2017/09/05 14:11:17 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:17 [INFO] Building AWS region structure
2017/09/05 14:11:17 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:17 [INFO] Building AWS auth structure
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 14:11:18 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:18 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 14:11:18 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=28cf6502ae0bedb4869fcd5964485ba4a487ef34f56796299dd92cb644b561a3
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:18 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211118Z
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:18 [DEBUG] plugin: terraform: 
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 14:11:18 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 14:11:18 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:18 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:17 GMT
2017/09/05 14:11:18 [DEBUG] plugin: terraform: X-Amzn-Requestid: c2712968-927e-11e7-8c61-1da1bd3b18e4
2017/09/05 14:11:18 [DEBUG] plugin: terraform: 
2017/09/05 14:11:18 [DEBUG] plugin: terraform: 
2017/09/05 14:11:18 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 14:11:18 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 14:11:18 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:11:18 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:11:18 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 14:11:18 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 14:11:18 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:11:18 [DEBUG] plugin: terraform:     <RequestId>c2712968-927e-11e7-8c61-1da1bd3b18e4</RequestId>
2017/09/05 14:11:18 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:11:18 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 14:11:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:18 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 14:11:18 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:18 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 14:11:18 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=02747511b19c5579c7fdc0c4cc1e273640920314f5a28efc58937c8f44e81443
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:18 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211118Z
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:18 [DEBUG] plugin: terraform: 
2017/09/05 14:11:18 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 14:11:18 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:18 GMT
2017/09/05 14:11:19 [DEBUG] plugin: terraform: X-Amzn-Requestid: c2c14553-927e-11e7-b977-f9158e3442e0
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 14:11:19 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <User>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     </User>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <RequestId>c2c14553-927e-11e7-b977-f9158e3442e0</RequestId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:19 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c83da9a2d1191325111c094145c3ba06aeeae32b5d5671e64a6db5fd60c7d35b
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211119Z
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:18 GMT
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <requestId>c70d9108-add1-4236-afce-236a351100b1</requestId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: provider.aws
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Checking: aws_security_group.tcp_internal_access
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798eb0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Checking: aws_security_group.internet_access
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798f50), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Checking: aws_security_group.splunk_access
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Checking: aws_security_group.ssh_access
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798e10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420798e60), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:11:19 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:11:19 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:19 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b9d80215bddd87f9e1f91e0847d2f5bd48843aa2a87808fef99546141b10628b
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211119Z
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-56bab72c&Version=2016-11-15
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:19 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=be8785a0d99e94174e03e5ac54f6eb57e6b509d5fe13811ced380d717a4e6083
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211119Z
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-8abab7f0&Version=2016-11-15
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:19 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e5e3d8549495dd0db3d5b7638f65adf1f657f362a436a3fcf7099465a213cf5b
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211119Z
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-5eb9b424&Version=2016-11-15
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:19 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ca0f9b9b5addf2c5f3e3b3e2092e51fbb9f2dfcb02e3ad08793ae1a45233c552
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211119Z
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-59b9b423&Version=2016-11-15
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:18 GMT
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <requestId>232e6117-928f-46bb-9804-837d7e619724</requestId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupId>sg-56bab72c</groupId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <fromPort>80</fromPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <toPort>80</toPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] Matching ^aws: with Name
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:19 GMT
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <requestId>8c61e251-2750-42a5-86c5-0c09dcf464e4</requestId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupId>sg-8abab7f0</groupId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <fromPort>1</fromPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <toPort>65535</toPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>172.31.0.0/16</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] Matching ^aws: with Name
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:18 GMT
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <requestId>7eba036b-5be7-4ef9-850d-581e75c3305c</requestId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupId>sg-59b9b423</groupId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <fromPort>8080</fromPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <toPort>8080</toPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] Matching ^aws: with Name
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:19 GMT
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <requestId>9f7363a1-12da-481e-80e6-f4d057e0ae89</requestId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupId>sg-5eb9b424</groupId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <fromPort>22</fromPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <toPort>22</toPort>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:19 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:11:19 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:11:19 [TRACE] [walkRefresh] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ResourceRefreshPlannableTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:11:19 [TRACE] OrphanResourceCount: Checking: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420798f00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeRefreshableManagedResourceInstance
2017/09/05 14:11:19 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:19 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:11:19 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:11:19 [TRACE] [walkRefresh] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:19 [DEBUG] root: eval: *terraform.EvalRefresh
2017/09/05 14:11:19 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:19 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 14:11:19 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:19 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:19 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=989ca34d94e1f4e9f04c02ad1c8f0703a7c73fd1393fdd40a26068f9cffc709a
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:19 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211119Z
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:19 [DEBUG] plugin: terraform: 
2017/09/05 14:11:19 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-rv389ren&Version=2016-11-15
2017/09/05 14:11:19 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 14:11:20 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:19 GMT
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     <requestId>7fe39023-d224-4002-9bbc-1e5edcb54f87</requestId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <status>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T20:56:40.000Z</updateTime>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             </status>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupId>sg-56bab72c</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupId>sg-59b9b423</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupId>sg-5eb9b424</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupId>sg-8abab7f0</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:56:32.000Z</createTime>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 14:11:20 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:20 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ed0bcbea1cee1c02a8052234743fad6417b8efb92809c07ac43c6abdf99e06e3
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:20 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211120Z
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-013dd296d7cc78f5e&Version=2016-11-15
2017/09/05 14:11:20 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 14:11:20 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:19 GMT
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     <requestId>fe702c7e-9e89-4cf0-95d5-80a607778e75</requestId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <reservationId>r-09fc5877a3dd8bca9</reservationId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <code>16</code>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <name>running</name>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <privateDnsName>ip-172-31-12-87.us-west-2.compute.internal</privateDnsName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <dnsName>ec2-34-212-181-84.us-west-2.compute.amazonaws.com</dnsName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <reason/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:56:40.000Z</launchTime>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <privateIpAddress>172.31.12.87</privateIpAddress>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <ipAddress>34.212.181.84</ipAddress>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <sourceDestCheck>true</sourceDestCheck>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <groupSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupId>sg-56bab72c</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupName>internet_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupId>sg-59b9b423</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupName>splunk_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupId>sg-5eb9b424</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupName>ssh_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupId>sg-8abab7f0</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupName>internal_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </groupSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <clientToken>14ad4612-8aba-4803-823e-0a70f14341fc</clientToken>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-0f018b0c</networkInterfaceId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <description/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <macAddress>0a:69:17:8c:7f:aa</macAddress>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <privateIpAddress>172.31.12.87</privateIpAddress>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <privateDnsName>ip-172-31-12-87.us-west-2.compute.internal</privateDnsName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <sourceDestCheck>true</sourceDestCheck>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <groupSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupId>sg-56bab72c</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupName>internet_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupId>sg-59b9b423</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupName>splunk_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupId>sg-5eb9b424</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupName>ssh_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupId>sg-8abab7f0</groupId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <groupName>internal_access</groupName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             </groupSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-346da7d0</attachmentId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <association>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <publicIp>34.212.181.84</publicIp>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <publicDnsName>ec2-34-212-181-84.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <ipOwnerId>amazon</ipOwnerId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             </association>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <privateIpAddressesSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <privateIpAddress>172.31.12.87</privateIpAddress>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <privateDnsName>ip-172-31-12-87.us-west-2.compute.internal</privateDnsName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <primary>true</primary>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <association>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <publicIp>34.212.181.84</publicIp>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <publicDnsName>ec2-34-212-181-84.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     <ipOwnerId>amazon</ipOwnerId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                     </association>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             </privateIpAddressesSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                             <ipv6AddressesSet/>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVolumes Details:
2017/09/05 14:11:20 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:20 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Content-Length: 74
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c65e82c5d56557ba7d4761d76fd897bb2006dca3c11aaab494e95d2ca6c77205
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:20 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211120Z
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Action=DescribeVolumes&Version=2016-11-15&VolumeId.1=vol-04ad5d0858d97fef8
2017/09/05 14:11:20 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVolumes Details:
2017/09/05 14:11:20 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:20 GMT
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:20 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: 
2017/09/05 14:11:20 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     <requestId>67e3a6e1-349d-4f11-9826-572e0875b7cd</requestId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     <volumeSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <size>8</size>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <snapshotId>snap-02b75f85999c3a768</snapshotId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <status>in-use</status>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <createTime>2017-09-05T20:56:40.533Z</createTime>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <attachmentSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <device>/dev/xvda</device>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <status>attached</status>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                     <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             </attachmentSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <volumeType>gp2</volumeType>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <iops>100</iops>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:             <encrypted>false</encrypted>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:20 [DEBUG] plugin: terraform:     </volumeSet>
2017/09/05 14:11:20 [DEBUG] plugin: terraform: </DescribeVolumesResponse>
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:20 [TRACE] [walkRefresh] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:11:20 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:11:20 [TRACE] [walkRefresh] Entering eval tree: provider.aws (close)
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:11:20 [TRACE] [walkRefresh] Exiting eval tree: provider.aws (close)
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:20 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:20 [INFO] backend/local: apply calling Plan
2017/09/05 14:11:20 [INFO] terraform: building graph: GraphTypePlanDestroy
2017/09/05 14:11:20 [TRACE] StateTransformer: starting
2017/09/05 14:11:20 [TRACE] StateTransformer: Module: [root]
2017/09/05 14:11:20 [TRACE] StateTransformer: Resource "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a14f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] StateTransformer: Resource "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a1040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] StateTransformer: Resource "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc4208148c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] StateTransformer: Resource "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a0fa0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] StateTransformer: Resource "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4201cae10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.StateTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.tcp_internal_access destroying "aws_security_group.tcp_internal_access"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_spot_instance_request.mtg_worker01 destroying "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.internet_access destroying "aws_security_group.internet_access"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.splunk_access destroying "aws_security_group.splunk_access"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.ssh_access destroying "aws_security_group.ssh_access"
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a1040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a1040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a0fa0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.internet_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a0fa0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4201cae10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.splunk_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4201cae10), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a14f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc4208148c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01 (destroy)": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc4208148c0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.ssh_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4207a14f0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:11:20 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4200ee540)}
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01 (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: reference graph: aws_security_group.internet_access
  provider.aws
aws_security_group.internet_access (destroy)
  provider.aws
aws_security_group.splunk_access
  provider.aws
aws_security_group.splunk_access (destroy)
  provider.aws
aws_security_group.ssh_access
  provider.aws
aws_security_group.ssh_access (destroy)
  provider.aws
aws_security_group.tcp_internal_access
  provider.aws
aws_security_group.tcp_internal_access (destroy)
  provider.aws
aws_spot_instance_request.mtg_worker01
  aws_security_group.internet_access
  aws_security_group.splunk_access
  aws_security_group.ssh_access
  aws_security_group.tcp_internal_access
  provider.aws
  var.private_key_path
aws_spot_instance_request.mtg_worker01 (destroy)
  provider.aws
provider.aws
  var.profile
  var.region
var.domain-name
var.env
var.private_key_path
var.profile
var.region
var.region-az
var.stack
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01" references [aws_security_group.splunk_access aws_security_group.internet_access var.private_key_path aws_security_group.tcp_internal_access provider.aws var.region var.profile aws_security_group.ssh_access]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.splunk_access" depends on aws_security_group.splunk_access
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.internet_access" depends on aws_security_group.internet_access
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.tcp_internal_access" depends on aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.ssh_access" depends on aws_security_group.ssh_access
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01 (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlanDestroyableResource
root - terraform.graphNodeRoot
  aws_security_group.internet_access - *terraform.NodePlanDestroyableResource
  aws_security_group.splunk_access - *terraform.NodePlanDestroyableResource
  aws_security_group.ssh_access - *terraform.NodePlanDestroyableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlanDestroyableResource
2017/09/05 14:11:20 [DEBUG] Starting graph walk: walkPlanDestroy
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.ssh_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.internet_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "aws_security_group.splunk_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:11:20 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalDiffDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:11:20 [TRACE] [walkPlanDestroy] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:20 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:20 [INFO] terraform: building graph: GraphTypeApply
2017/09/05 14:11:20 [TRACE] DiffTransformer: starting
2017/09/05 14:11:20 [TRACE] DiffTransformer: Module: DESTROY: aws_security_group.internet_access
DESTROY: aws_security_group.splunk_access
DESTROY: aws_security_group.ssh_access
DESTROY: aws_security_group.tcp_internal_access
DESTROY: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [TRACE] DiffTransformer: Resource "aws_security_group.tcp_internal_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:11:20 [TRACE] DiffTransformer: Resource "aws_security_group.ssh_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:11:20 [TRACE] DiffTransformer: Resource "aws_security_group.internet_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:11:20 [TRACE] DiffTransformer: Resource "aws_security_group.splunk_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:11:20 [TRACE] DiffTransformer: Resource "aws_spot_instance_request.mtg_worker01": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.DiffTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.ssh_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017090), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.internet_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420016ff0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.splunk_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01 (destroy)": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420016f00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4200170e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:11:20 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:11:20 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4200ee540)}
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.ssh_access (destroy) destroying "aws_security_group.ssh_access"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.internet_access (destroy) destroying "aws_security_group.internet_access"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.splunk_access (destroy) destroying "aws_security_group.splunk_access"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_spot_instance_request.mtg_worker01 (destroy) destroying "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: aws_security_group.tcp_internal_access (destroy) destroying "aws_security_group.tcp_internal_access"
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4202abe60), RawConfig:(*config.RawConfig)(0xc4202aaf00), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075f500), RawConfig:(*config.RawConfig)(0xc42075e9c0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42075e840), RawConfig:(*config.RawConfig)(0xc4205c1ce0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4205c1b60), RawConfig:(*config.RawConfig)(0xc4205c1140), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:11:20 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4200ef200), RawConfig:(*config.RawConfig)(0xc4200ee960), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205842d0), (*config.Provisioner)(0xc420584420), (*config.Provisioner)(0xc420423020), (*config.Provisioner)(0xc4204231d0)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4200170e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.ssh_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017090), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420016f00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_spot_instance_request.mtg_worker01 (destroy)": &terraform.ResourceState{Type:"aws_spot_instance_request", Dependencies:[]string{"aws_security_group.internet_access", "aws_security_group.splunk_access", "aws_security_group.ssh_access", "aws_security_group.tcp_internal_access"}, Primary:(*terraform.InstanceState)(0xc420016f00), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.tcp_internal_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4200170e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.ssh_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017090), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.internet_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420016ff0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.internet_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420016ff0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.splunk_access": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [DEBUG] Attaching resource state to "aws_security_group.splunk_access (destroy)": &terraform.ResourceState{Type:"aws_security_group", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420017040), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/05 14:11:20 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:11:20 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4200ee540)}
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01 (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: reference graph: aws_security_group.internet_access
  provider.aws
aws_security_group.internet_access (destroy)
  provider.aws
aws_security_group.splunk_access
  provider.aws
aws_security_group.splunk_access (destroy)
  provider.aws
aws_security_group.ssh_access
  provider.aws
aws_security_group.ssh_access (destroy)
  provider.aws
aws_security_group.tcp_internal_access
  provider.aws
aws_security_group.tcp_internal_access (destroy)
  provider.aws
aws_spot_instance_request.mtg_worker01
  aws_security_group.internet_access
  aws_security_group.splunk_access
  aws_security_group.ssh_access
  aws_security_group.tcp_internal_access
  provider.aws
  var.private_key_path
aws_spot_instance_request.mtg_worker01 (destroy)
  provider.aws
provider.aws
  var.profile
  var.region
var.domain-name
var.env
var.private_key_path
var.profile
var.region
var.region-az
var.stack
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.tcp_internal_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.ssh_access (destroy)" references [var.profile provider.aws var.region]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access" references [var.region var.profile provider.aws]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.internet_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access" references [var.region var.profile provider.aws]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_security_group.splunk_access (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01" references [aws_security_group.ssh_access aws_security_group.splunk_access provider.aws var.region var.profile aws_security_group.internet_access var.private_key_path aws_security_group.tcp_internal_access]
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.ssh_access" depends on aws_security_group.ssh_access (destroy)
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.splunk_access" depends on aws_security_group.splunk_access (destroy)
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.internet_access" depends on aws_security_group.internet_access (destroy)
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: destruction of "aws_security_group.tcp_internal_access" depends on aws_security_group.tcp_internal_access (destroy)
2017/09/05 14:11:20 [TRACE] DestroyEdgeTransformer: creation node "aws_spot_instance_request.mtg_worker01 (destroy)" references [provider.aws var.region var.profile]
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01 (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access (destroy)" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:11:20 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.splunk_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.ssh_access (destroy) - *terraform.NodeDestroyResource
  aws_security_group.tcp_internal_access (destroy) - *terraform.NodeDestroyResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 (destroy) - *terraform.NodeDestroyResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:11:20 [DEBUG] Starting graph walk: walkDestroy
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01 (destroy)" waiting on "provider.aws"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.splunk_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01 (destroy)" waiting on "provisioner.file"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.internet_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.private_key_path"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_security_group.internet_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01 (destroy)" waiting on "provisioner.remote-exec"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access (destroy)" waiting on "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.splunk_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:20 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access (destroy)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access (destroy)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access (destroy)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access (destroy)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01 (destroy)", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 14:11:20 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:11:20 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:11:20 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:11:20 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:11:20 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:11:20 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:11:20 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 14:11:20 [TRACE] [walkDestroy] Entering eval tree: provisioner.remote-exec
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:11:20 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:11:20 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:11:20 [TRACE] [walkDestroy] Entering eval tree: provisioner.file
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:11:20 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:11:20 [TRACE] [walkDestroy] Entering eval tree: provider.aws
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:11:20 [TRACE] [walkDestroy] Exiting eval tree: provisioner.remote-exec
2017/09/05 14:11:20 [TRACE] [walkDestroy] Exiting eval tree: provisioner.file
2017/09/05 14:11:20 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:20 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:20 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [INFO] No assume_role block read from configuration
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [INFO] Building AWS region structure
2017/09/05 14:11:20 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:20 [INFO] Building AWS auth structure
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 14:11:21 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:21 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 14:11:21 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=6ce9db2ef5eff20b0db0c01e0837c34ef37d1753d60a64d6e4d4d19ac6902935
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:21 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211121Z
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:21 [DEBUG] plugin: terraform: 
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 14:11:21 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 14:11:21 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:21 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:21 GMT
2017/09/05 14:11:21 [DEBUG] plugin: terraform: X-Amzn-Requestid: c43ebd54-927e-11e7-8114-1b061fe7f9d6
2017/09/05 14:11:21 [DEBUG] plugin: terraform: 
2017/09/05 14:11:21 [DEBUG] plugin: terraform: 
2017/09/05 14:11:21 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 14:11:21 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 14:11:21 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:11:21 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:11:21 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 14:11:21 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 14:11:21 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:11:21 [DEBUG] plugin: terraform:     <RequestId>c43ebd54-927e-11e7-8114-1b061fe7f9d6</RequestId>
2017/09/05 14:11:21 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:11:21 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 14:11:21 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:21 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 14:11:21 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:21 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 14:11:21 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=fcfe18560e171780da43e51f3be0e4f3541ea9da9a253a0b767b1d1d4e1f6dda
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:21 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211121Z
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:21 [DEBUG] plugin: terraform: 
2017/09/05 14:11:21 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 14:11:21 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 14:11:22 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:20 GMT
2017/09/05 14:11:22 [DEBUG] plugin: terraform: X-Amzn-Requestid: c46fdfb4-927e-11e7-85b8-ddfdbd7cd416
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 14:11:22 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     <User>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     </User>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     <RequestId>c46fdfb4-927e-11e7-85b8-ddfdbd7cd416</RequestId>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:11:22 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 14:11:22 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:22 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=30221059e9b10962df9113b9afd4a38ac6bc1dd7e644bc1883009378ce603b3e
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:22 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211122Z
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 14:11:22 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 14:11:22 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:21 GMT
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:22 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     <requestId>43eabd42-8bfc-426f-9148-b50a669e5071</requestId>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 14:11:22 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 14:11:22 [TRACE] [walkDestroy] Exiting eval tree: provider.aws
2017/09/05 14:11:22 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:22 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01 (destroy)': walking
2017/09/05 14:11:22 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01 (destroy)': evaluating
2017/09/05 14:11:22 [TRACE] [walkDestroy] Entering eval tree: aws_spot_instance_request.mtg_worker01 (destroy)
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:22 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:22 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:11:22 [DEBUG] apply: aws_spot_instance_request.mtg_worker01: executing Apply
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [INFO] Cancelling spot request: sir-rv389ren
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CancelSpotInstanceRequests Details:
2017/09/05 14:11:22 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:22 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Length: 89
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=2a35967e89f0fd99dc059f4ea0f61a8e36d768d970b39eb12a83c6fba6e20dc0
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:22 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211122Z
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Action=CancelSpotInstanceRequests&SpotInstanceRequestId.1=sir-rv389ren&Version=2016-11-15
2017/09/05 14:11:22 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CancelSpotInstanceRequests Details:
2017/09/05 14:11:22 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:21 GMT
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:22 [DEBUG] plugin: terraform: <CancelSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     <requestId>ef092513-c8a2-41bf-96dc-91960998e1d0</requestId>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:             <state>cancelled</state>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:22 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 14:11:22 [DEBUG] plugin: terraform: </CancelSpotInstanceRequestsResponse>
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [INFO] Terminating instance: i-013dd296d7cc78f5e
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [INFO] Terminating instance: i-013dd296d7cc78f5e
2017/09/05 14:11:22 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:22 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/TerminateInstances Details:
2017/09/05 14:11:22 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:22 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:22 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Length: 77
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b2b669e6da7fc2e79a736dfa0d10df346667982e2f0ee21237ce29e71c5c4640
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:22 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211122Z
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:22 [DEBUG] plugin: terraform: 
2017/09/05 14:11:22 [DEBUG] plugin: terraform: Action=TerminateInstances&InstanceId.1=i-013dd296d7cc78f5e&Version=2016-11-15
2017/09/05 14:11:22 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:23 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/TerminateInstances Details:
2017/09/05 14:11:23 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:23 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:23 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:23 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:23 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:23 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:21 GMT
2017/09/05 14:11:23 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:23 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:23 [DEBUG] plugin: terraform: 
2017/09/05 14:11:23 [DEBUG] plugin: terraform: 
2017/09/05 14:11:23 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:23 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:23 [DEBUG] plugin: terraform: <TerminateInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:23 [DEBUG] plugin: terraform:     <requestId>65c5fb60-fccf-4a5a-aa50-3d7daa5728fe</requestId>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:     <instancesSet>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:             <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:             <currentState>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:                 <code>32</code>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:                 <name>shutting-down</name>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:             </currentState>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:             <previousState>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:                 <code>16</code>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:                 <name>running</name>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:             </previousState>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:23 [DEBUG] plugin: terraform:     </instancesSet>
2017/09/05 14:11:23 [DEBUG] plugin: terraform: </TerminateInstancesResponse>
2017/09/05 14:11:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:23 [DEBUG] Waiting for instance (i-013dd296d7cc78f5e) to become terminated
2017/09/05 14:11:23 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:23 [DEBUG] Waiting for state to become: [terminated]
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:25 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:30 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:33 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 14:11:33 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:33 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:33 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b9bfe52ad46771bfe301445e9bb6dedb2b4e80bc6d19f2157b0abd989fc1cb59
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:33 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211133Z
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:33 [DEBUG] plugin: terraform: 
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-013dd296d7cc78f5e&Version=2016-11-15
2017/09/05 14:11:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:33 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 14:11:33 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:33 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:32 GMT
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:33 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:33 [DEBUG] plugin: terraform: 
2017/09/05 14:11:33 [DEBUG] plugin: terraform: 
2017/09/05 14:11:33 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:33 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:33 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:33 [DEBUG] plugin: terraform:     <requestId>6b95a1f4-f5b4-48e0-b7c4-c1ff616010d2</requestId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:             <reservationId>r-09fc5877a3dd8bca9</reservationId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <code>32</code>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <name>shutting-down</name>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 21:11:22 GMT)</reason>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:56:40.000Z</launchTime>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <clientToken>14ad4612-8aba-4803-823e-0a70f14341fc</clientToken>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-0f018b0c</networkInterfaceId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-346da7d0</attachmentId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:33 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 14:11:33 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 14:11:33 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:33 [TRACE] Waiting 3s before next try
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:35 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:36 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 14:11:36 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:36 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:36 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=5b613fe6a7df6b2fde0d4f7a5e18c5cf1b6a4388e792fcafa1ea4ce29a18b7a4
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:36 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211136Z
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:36 [DEBUG] plugin: terraform: 
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-013dd296d7cc78f5e&Version=2016-11-15
2017/09/05 14:11:36 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:36 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 14:11:36 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:36 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:35 GMT
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:36 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:36 [DEBUG] plugin: terraform: 
2017/09/05 14:11:36 [DEBUG] plugin: terraform: 
2017/09/05 14:11:36 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:36 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:36 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:36 [DEBUG] plugin: terraform:     <requestId>f152347c-ba32-4686-9904-f12e604dc682</requestId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:             <reservationId>r-09fc5877a3dd8bca9</reservationId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <code>32</code>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <name>shutting-down</name>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 21:11:22 GMT)</reason>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:56:40.000Z</launchTime>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <clientToken>14ad4612-8aba-4803-823e-0a70f14341fc</clientToken>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-0f018b0c</networkInterfaceId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-346da7d0</attachmentId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:36 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 14:11:36 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 14:11:36 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:36 [TRACE] Waiting 6s before next try
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:40 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:42 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 14:11:42 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:42 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:42 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=820a02c4a7c30c52a9785998ad8423d6326f36203e446a37eae27d816a22ba36
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:42 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211142Z
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:42 [DEBUG] plugin: terraform: 
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-013dd296d7cc78f5e&Version=2016-11-15
2017/09/05 14:11:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:42 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 14:11:42 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:42 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:42 GMT
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:42 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:42 [DEBUG] plugin: terraform: 
2017/09/05 14:11:42 [DEBUG] plugin: terraform: 
2017/09/05 14:11:42 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:42 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:42 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:42 [DEBUG] plugin: terraform:     <requestId>c268695c-bf5e-4683-9e48-a8da2d988f68</requestId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:             <reservationId>r-09fc5877a3dd8bca9</reservationId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <code>32</code>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <name>shutting-down</name>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 21:11:22 GMT)</reason>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:56:40.000Z</launchTime>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <volumeId>vol-04ad5d0858d97fef8</volumeId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <clientToken>14ad4612-8aba-4803-823e-0a70f14341fc</clientToken>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-0f018b0c</networkInterfaceId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-346da7d0</attachmentId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <status>attached</status>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T20:56:40.000Z</attachTime>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:42 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 14:11:42 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 14:11:42 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:42 [TRACE] Waiting 10s before next try
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:45 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "aws_security_group.internet_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "aws_security_group.ssh_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "aws_security_group.splunk_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:50 [DEBUG] dag/walk: vertex "aws_security_group.tcp_internal_access (destroy)", waiting for: "aws_spot_instance_request.mtg_worker01 (destroy)"
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=7948242a1f1d4053fad5f1a0860bc0d414a2a6bc2b7116470e3ae45d44a9ad3e
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-013dd296d7cc78f5e&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:51 GMT
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <requestId>1e8f4657-25c1-41d2-b912-5cff468c91e9</requestId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:             <reservationId>r-09fc5877a3dd8bca9</reservationId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <instanceId>i-013dd296d7cc78f5e</instanceId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <code>48</code>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <name>terminated</name>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <privateDnsName/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <dnsName/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <reason>User initiated (2017-09-05 21:11:22 GMT)</reason>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T20:56:40.000Z</launchTime>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <groupSet/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <stateReason>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <code>Client.UserInitiatedShutdown</code>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                         <message>Client.UserInitiatedShutdown: User initiated shutdown</message>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     </stateReason>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <blockDeviceMapping/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-rv389ren</spotInstanceRequestId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <clientToken>14ad4612-8aba-4803-823e-0a70f14341fc</clientToken>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <networkInterfaceSet/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 14:11:52 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:52 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:52 [TRACE] [walkDestroy] Exiting eval tree: aws_spot_instance_request.mtg_worker01 (destroy)
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01 (destroy)': expanding/walking dynamic subgraph
2017/09/05 14:11:52 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 14:11:52 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 14:11:52 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 14:11:52 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:52 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:52 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:52 [DEBUG] dag/walk: walking "aws_security_group.internet_access (destroy)"
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.internet_access (destroy)': walking
2017/09/05 14:11:52 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 14:11:52 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 14:11:52 [DEBUG] dag/walk: walking "aws_security_group.ssh_access (destroy)"
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.ssh_access (destroy)': walking
2017/09/05 14:11:52 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.internet_access (destroy)': evaluating
2017/09/05 14:11:52 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 14:11:52 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access (destroy)"
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access (destroy)': walking
2017/09/05 14:11:52 [DEBUG] dag/walk: walking "aws_security_group.splunk_access (destroy)"
2017/09/05 14:11:52 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.splunk_access (destroy)': walking
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.ssh_access (destroy)': evaluating
2017/09/05 14:11:52 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.ssh_access (destroy)
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.internet_access (destroy)
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access (destroy)': evaluating
2017/09/05 14:11:52 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.tcp_internal_access (destroy)
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [TRACE] [walkDestroy] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:11:52 [TRACE] [walkDestroy] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 14:11:52 [DEBUG] vertex 'root.aws_security_group.splunk_access (destroy)': evaluating
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:11:52 [TRACE] [walkDestroy] Entering eval tree: aws_security_group.splunk_access (destroy)
2017/09/05 14:11:52 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:11:52 [DEBUG] apply: aws_security_group.internet_access: executing Apply
2017/09/05 14:11:52 [TRACE] [walkDestroy] Entering eval tree: provisioner.file (close)
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:11:52 [TRACE] [walkDestroy] Exiting eval tree: provisioner.file (close)
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalFilterDiff
2017/09/05 14:11:52 [DEBUG] apply: aws_security_group.ssh_access: executing Apply
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:11:52 [DEBUG] apply: aws_security_group.tcp_internal_access: executing Apply
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalRequireState
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:11:52 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:11:52 [DEBUG] apply: aws_security_group.splunk_access: executing Apply
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Security Group destroy: sg-56bab72c
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Security Group destroy: sg-59b9b423
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Security Group destroy: sg-5eb9b424
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Security Group destroy: sg-8abab7f0
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a77abe3ed9692a10d738ebfcc414797c54b790f9e8e1bfda426f5f71ba9457fb
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-56bab72c&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=be58d864f21616305be8df2e6c4044b346a4d42513234b21c3fb5e83c628dcd1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-59b9b423&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=3424f6df03731017b392bf65e578ccdda586364c37337ff47cc34c07f66ddf31
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-8abab7f0&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 172
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=817c4a6facf7f5a0633489f195ab91ca0f22ad66437e413bd4cb767b8e3d115f
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DescribeNetworkInterfaces&Filter.1.Name=group-id&Filter.1.Value.1=sg-5eb9b424&Filter.2.Name=description&Filter.2.Value.1=AWS+Lambda+VPC+ENI%3A+%2A&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:52 GMT
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <requestId>edc7be8b-0d81-489f-bb93-107bae55935b</requestId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=262b334471ded8cd12eaf2ccead4e5b43562515ca8e8264ddc378dde69ba31e3
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-59b9b423&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:52 GMT
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <requestId>d3740107-ce6c-4296-8cab-dc8906974430</requestId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=acfb310ed6152ed0968e8ce26b7bf48b75e8953364adac2e5a707131cc1a5a4a
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-8abab7f0&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:51 GMT
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <requestId>30b19c11-f516-4d34-8954-5efe981945f4</requestId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=6f369f759b66fc58b1acefac9486c2f6a22288b6488fd551e78a0a3ce470b6ad
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-5eb9b424&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeNetworkInterfaces Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:52 GMT
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <requestId>947b3f6a-29b1-4c95-9bcc-ab23b8cd3c04</requestId>
2017/09/05 14:11:52 [DEBUG] plugin: terraform:     <networkInterfaceSet/>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: </DescribeNetworkInterfacesResponse>
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:11:52 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:52 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:52 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:11:52 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:11:52 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Length: 65
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=33607de75d69ffb1e2e753e9da1619b10fe54dd51c6b4c8bda371d27be1b3b9e
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:11:52 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211152Z
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:11:52 [DEBUG] plugin: terraform: 
2017/09/05 14:11:52 [DEBUG] plugin: terraform: Action=DeleteSecurityGroup&GroupId=sg-56bab72c&Version=2016-11-15
2017/09/05 14:11:52 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:52 GMT
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <requestId>71d5d5f7-8bac-400e-81eb-36ee4c5384cd</requestId>
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:11:53 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:53 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.ssh_access (destroy)
2017/09/05 14:11:53 [DEBUG] vertex 'root.aws_security_group.ssh_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 14:11:53 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 14:11:53 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:53 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:53 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:52 GMT
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <requestId>6e24ccd6-edd6-4fc8-b98e-948cc5d55487</requestId>
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:11:53 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:53 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.tcp_internal_access (destroy)
2017/09/05 14:11:53 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 14:11:53 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 14:11:53 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:53 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:53 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:52 GMT
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <requestId>e2bc0635-8481-4d3c-9fe0-287f0037adaa</requestId>
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:11:53 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:53 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.splunk_access (destroy)
2017/09/05 14:11:53 [DEBUG] vertex 'root.aws_security_group.splunk_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 14:11:53 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 14:11:53 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:53 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:53 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DeleteSecurityGroup Details:
2017/09/05 14:11:53 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:11:52 GMT
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:11:53 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: 
2017/09/05 14:11:53 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: <DeleteSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <requestId>7417e8c4-0fb4-4f11-8780-ae29c97827a3</requestId>
2017/09/05 14:11:53 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:11:53 [DEBUG] plugin: terraform: </DeleteSecurityGroupResponse>
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:11:53 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:53 [TRACE] [walkDestroy] Exiting eval tree: aws_security_group.internet_access (destroy)
2017/09/05 14:11:53 [DEBUG] vertex 'root.aws_security_group.internet_access (destroy)': expanding/walking dynamic subgraph
2017/09/05 14:11:53 [TRACE] Graph after step *terraform.DeposedTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.TargetsTransformer:

2017/09/05 14:11:53 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
2017/09/05 14:11:53 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:11:53 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:53 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:53 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:11:53 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:11:53 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 14:11:53 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 14:11:53 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:11:53 [TRACE] [walkDestroy] Entering eval tree: provider.aws (close)
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:11:53 [TRACE] [walkDestroy] Exiting eval tree: provider.aws (close)
2017/09/05 14:11:53 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 14:11:53 [TRACE] [walkDestroy] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:11:53 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 14:11:53 [TRACE] [walkDestroy] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:11:53 [DEBUG] dag/walk: walking "root"
2017/09/05 14:11:53 [DEBUG] vertex 'root.root': walking
2017/09/05 14:11:53 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:11:53 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:11:53 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:11:53 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:11:53 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:11:53 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:11:53 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:11:53 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:11:53 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 14:11:53 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 14:11:53 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 14:12:08 [INFO] Terraform version: 0.9.11  
2017/09/05 14:12:08 [INFO] Go runtime version: go1.8.3
2017/09/05 14:12:08 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "apply"}
2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:12:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [INFO] CLI command args: []string{"apply"}
2017/09/05 14:12:08 [DEBUG] command: loading backend config file: /Users/ericyoung/my_github/mtg_price/terraform
2017/09/05 14:12:08 [DEBUG] command: no data state file found for backend config
2017/09/05 14:12:08 [DEBUG] New state was assigned lineage "fd7b9aeb-ee3c-45ac-b7f1-71b8bdc9925d"
2017/09/05 14:12:08 [INFO] command: backend initialized: <nil>
2017/09/05 14:12:08 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/09/05 14:12:08 [INFO] backend/local: starting Apply operation
2017/09/05 14:12:08 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:12:08 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:12:08 [INFO] terraform: building graph: GraphTypeInput
2017/09/05 14:12:08 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060cba0), RawConfig:(*config.RawConfig)(0xc42060c060), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060d860), RawConfig:(*config.RawConfig)(0xc42060cd20), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676540), RawConfig:(*config.RawConfig)(0xc42060d9e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4201dbe00), RawConfig:(*config.RawConfig)(0xc4201db320), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205527b0), (*config.Provisioner)(0xc420552900), (*config.Provisioner)(0xc420552a80), (*config.Provisioner)(0xc420552c00)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4203a3ec0), RawConfig:(*config.RawConfig)(0xc4203a34a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
aws_security_group.splunk_access - *terraform.NodeAbstractResource
aws_security_group.ssh_access - *terraform.NodeAbstractResource
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:12:08 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201daea0)}
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  aws_security_group.internet_access - *terraform.NodeAbstractResource
  aws_security_group.splunk_access - *terraform.NodeAbstractResource
  aws_security_group.ssh_access - *terraform.NodeAbstractResource
  aws_security_group.tcp_internal_access - *terraform.NodeAbstractResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] Starting graph walk: walkInput
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:12:08 [TRACE] [walkInput] Entering eval tree: provider.aws
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:12:08 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 14:12:08 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] Terraform version: 0.9.11
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] Go runtime version: go1.8.3
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provider", "aws"}
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] CLI command args: []string{"internal-plugin", "provider", "aws"}
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [INFO] Starting provider plugin aws
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin485818763
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInputProvider
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [TRACE] [walkInput] Exiting eval tree: provider.aws
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:12:08 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 14:12:08 [TRACE] [walkInput] Entering eval tree: provisioner.file (close)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:12:08 [TRACE] [walkInput] Exiting eval tree: provisioner.file (close)
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 14:12:08 [TRACE] [walkInput] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:12:08 [TRACE] [walkInput] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 14:12:08 [TRACE] [walkInput] Entering eval tree: provider.aws (close)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:12:08 [TRACE] [walkInput] Exiting eval tree: provider.aws (close)
2017/09/05 14:12:08 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 14:12:08 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 14:12:08 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "root"
2017/09/05 14:12:08 [DEBUG] vertex 'root.root': walking
2017/09/05 14:12:08 [INFO] terraform: building graph: GraphTypeValidate
2017/09/05 14:12:08 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060d860), RawConfig:(*config.RawConfig)(0xc42060cd20), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676540), RawConfig:(*config.RawConfig)(0xc42060d9e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4201dbe00), RawConfig:(*config.RawConfig)(0xc4201db320), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205527b0), (*config.Provisioner)(0xc420552900), (*config.Provisioner)(0xc420552a80), (*config.Provisioner)(0xc420552c00)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4203a3ec0), RawConfig:(*config.RawConfig)(0xc4203a34a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060cba0), RawConfig:(*config.RawConfig)(0xc42060c060), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
aws_security_group.splunk_access - *terraform.NodeValidatableResource
aws_security_group.ssh_access - *terraform.NodeValidatableResource
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:12:08 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201daea0)}
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.graphTransformerMulti:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  aws_security_group.internet_access - *terraform.NodeValidatableResource
  aws_security_group.splunk_access - *terraform.NodeValidatableResource
  aws_security_group.ssh_access - *terraform.NodeValidatableResource
  aws_security_group.tcp_internal_access - *terraform.NodeValidatableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] Starting graph walk: walkValidate
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: provisioner.file
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:12:08 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: provider.aws
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:12:08 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] Terraform version: 0.9.11
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] Go runtime version: go1.8.3
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "file"}
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "file"}
2017/09/05 14:12:08 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:08 [INFO] Starting provisioner plugin file
2017/09/05 14:12:08 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:08 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin267782309
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: provisioner.file
2017/09/05 14:12:08 [DEBUG] plugin: starting plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 14:12:08 [DEBUG] plugin: waiting for RPC address for: /usr/local/Cellar/terraform/0.9.11/bin/terraform
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] Terraform version: 0.9.11
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] Go runtime version: go1.8.3
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.9.11/bin/terraform", "internal-plugin", "provisioner", "remote-exec"}
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Attempting to open CLI config file: /Users/ericyoung/.terraformrc
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [DEBUG] Detected home directory from env var: /Users/ericyoung
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 2017/09/05 14:12:08 [INFO] CLI command args: []string{"internal-plugin", "provisioner", "remote-exec"}
2017/09/05 14:12:08 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:12:08 [INFO] Starting provisioner plugin remote-exec
2017/09/05 14:12:08 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:12:08 [DEBUG] plugin: plugin address: unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin589692999
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateCount
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodeValidatableResourceInstance
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvisioner
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalValidateProvisioner
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:12:08 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: provisioner.file (close)
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:12:08 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 14:12:08 [TRACE] [walkValidate] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: provisioner.file (close)
2017/09/05 14:12:08 [TRACE] [walkValidate] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "root"
2017/09/05 14:12:08 [DEBUG] vertex 'root.root': walking
2017/09/05 14:12:08 [INFO] backend/local: apply calling Refresh
2017/09/05 14:12:08 [INFO] terraform: building graph: GraphTypeRefresh
2017/09/05 14:12:08 [TRACE] No managed resources in state during refresh, skipping managed resource transformer
2017/09/05 14:12:08 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ConfigTransformer:

2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootVariableTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.MissingProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.DisableProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ParentProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OutputTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CloseProviderTransformer:

var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

root - terraform.graphNodeRoot
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

root - terraform.graphNodeRoot
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] Starting graph walk: walkRefresh
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "root"
2017/09/05 14:12:08 [DEBUG] vertex 'root.root': walking
2017/09/05 14:12:08 [INFO] backend/local: apply calling Plan
2017/09/05 14:12:08 [INFO] terraform: building graph: GraphTypePlan
2017/09/05 14:12:08 [TRACE] ConfigTransformer: Starting for path: []
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060cba0), RawConfig:(*config.RawConfig)(0xc42060c060), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060d860), RawConfig:(*config.RawConfig)(0xc42060cd20), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676540), RawConfig:(*config.RawConfig)(0xc42060d9e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4201dbe00), RawConfig:(*config.RawConfig)(0xc4201db320), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205527b0), (*config.Provisioner)(0xc420552900), (*config.Provisioner)(0xc420552a80), (*config.Provisioner)(0xc420552c00)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:12:08 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4203a3ec0), RawConfig:(*config.RawConfig)(0xc4203a34a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 14:12:08 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
aws_security_group.splunk_access - *terraform.NodePlannableResource
aws_security_group.ssh_access - *terraform.NodePlannableResource
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:12:08 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201daea0)}
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path]
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:12:08 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  aws_security_group.internet_access - *terraform.NodePlannableResource
  aws_security_group.splunk_access - *terraform.NodePlannableResource
  aws_security_group.ssh_access - *terraform.NodePlannableResource
  aws_security_group.tcp_internal_access - *terraform.NodePlannableResource
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:08 [DEBUG] Starting graph walk: walkPlan
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:12:08 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:12:08 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:12:08 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:12:08 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:12:08 [TRACE] [walkPlan] Entering eval tree: provider.aws
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:08 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [INFO] No assume_role block read from configuration
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [INFO] Building AWS region structure
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [INFO] Building AWS auth structure
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 14:12:08 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:08 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 14:12:08 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:08 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:08 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 14:12:08 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:08 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 14:12:08 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f6c0697cd5424227f5e91ba1699277768df29517a84c06f9013ec1c7ccf252c6
2017/09/05 14:12:08 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:08 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211208Z
2017/09/05 14:12:08 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:08 [DEBUG] plugin: terraform: 
2017/09/05 14:12:08 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 14:12:08 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 14:12:09 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:08 GMT
2017/09/05 14:12:09 [DEBUG] plugin: terraform: X-Amzn-Requestid: e08de74e-927e-11e7-9122-853a7ef9e89c
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <RequestId>e08de74e-927e-11e7-9122-853a7ef9e89c</RequestId>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:12:09 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 14:12:09 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 14:12:09 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=346a21aba7f622818062a49ca324ab71bbdb4d4992fdfb2f020076443b0e4a99
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:09 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211209Z
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 14:12:09 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 14:12:09 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:09 GMT
2017/09/05 14:12:09 [DEBUG] plugin: terraform: X-Amzn-Requestid: e0bb5f94-927e-11e7-83b9-1f45632d1514
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <User>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     </User>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <RequestId>e0bb5f94-927e-11e7-83b9-1f45632d1514</RequestId>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:12:09 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 14:12:09 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:09 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=65e087cc7555f27048f8fa158b2e220c28620f377758cd0ed0d03547d22bb746
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:09 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211209Z
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 14:12:09 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 14:12:09 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:09 GMT
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:09 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: 
2017/09/05 14:12:09 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:09 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <requestId>2a348906-2665-443b-80af-4dac9bf5ea26</requestId>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:09 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 14:12:09 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: provider.aws
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.ssh_access': expanding/walking dynamic subgraph
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.ssh_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.internet_access': expanding/walking dynamic subgraph
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': expanding/walking dynamic subgraph
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.splunk_access': expanding/walking dynamic subgraph
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.tcp_internal_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.splunk_access - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountCheckComputed
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': expanding/walking dynamic subgraph
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] OrphanResourceCount: Starting...
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: []
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.RootTransformer:

aws_spot_instance_request.mtg_worker01 - *terraform.NodePlannableResourceInstance
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:09 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:12:09 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 14:12:09 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: provider.aws (close)
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:12:09 [TRACE] [walkPlan] Entering eval tree: provisioner.file (close)
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: provisioner.file (close)
2017/09/05 14:12:09 [TRACE] [walkPlan] Exiting eval tree: provider.aws (close)
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "root"
2017/09/05 14:12:09 [DEBUG] vertex 'root.root': walking
2017/09/05 14:12:09 [INFO] terraform: building graph: GraphTypeApply
2017/09/05 14:12:09 [TRACE] DiffTransformer: starting
2017/09/05 14:12:09 [TRACE] DiffTransformer: Module: CREATE: aws_security_group.internet_access
  description:                           "" => "internet_access tcp port 80" (forces new resource)
  egress.#:                              "" => "1"
  egress.482069346.cidr_blocks.#:        "" => "1"
  egress.482069346.cidr_blocks.0:        "" => "0.0.0.0/0"
  egress.482069346.from_port:            "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:   "" => "0"
  egress.482069346.prefix_list_ids.#:    "" => "0"
  egress.482069346.protocol:             "" => "-1"
  egress.482069346.security_groups.#:    "" => "0"
  egress.482069346.self:                 "" => "false"
  egress.482069346.to_port:              "" => "0"
  ingress.#:                             "" => "1"
  ingress.2214680975.cidr_blocks.#:      "" => "1"
  ingress.2214680975.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.2214680975.from_port:          "" => "80"
  ingress.2214680975.ipv6_cidr_blocks.#: "" => "0"
  ingress.2214680975.protocol:           "" => "tcp"
  ingress.2214680975.security_groups.#:  "" => "0"
  ingress.2214680975.self:               "" => "false"
  ingress.2214680975.to_port:            "" => "80"
  name:                                  "" => "internet_access" (forces new resource)
  owner_id:                              "" => "<computed>"
  tags.%:                                "" => "1"
  tags.Name:                             "" => "internet_access"
  vpc_id:                                "" => "<computed>" (forces new resource)
CREATE: aws_security_group.splunk_access
  description:                          "" => "splunk_access tcp port 8080" (forces new resource)
  egress.#:                             "" => "1"
  egress.482069346.cidr_blocks.#:       "" => "1"
  egress.482069346.cidr_blocks.0:       "" => "0.0.0.0/0"
  egress.482069346.from_port:           "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:  "" => "0"
  egress.482069346.prefix_list_ids.#:   "" => "0"
  egress.482069346.protocol:            "" => "-1"
  egress.482069346.security_groups.#:   "" => "0"
  egress.482069346.self:                "" => "false"
  egress.482069346.to_port:             "" => "0"
  ingress.#:                            "" => "1"
  ingress.516175195.cidr_blocks.#:      "" => "1"
  ingress.516175195.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.516175195.from_port:          "" => "8080"
  ingress.516175195.ipv6_cidr_blocks.#: "" => "0"
  ingress.516175195.protocol:           "" => "tcp"
  ingress.516175195.security_groups.#:  "" => "0"
  ingress.516175195.self:               "" => "false"
  ingress.516175195.to_port:            "" => "8080"
  name:                                 "" => "splunk_access" (forces new resource)
  owner_id:                             "" => "<computed>"
  tags.%:                               "" => "1"
  tags.Name:                            "" => "splunk_access"
  vpc_id:                               "" => "<computed>" (forces new resource)
CREATE: aws_security_group.ssh_access
  description:                           "" => "ssh_access group" (forces new resource)
  egress.#:                              "" => "1"
  egress.482069346.cidr_blocks.#:        "" => "1"
  egress.482069346.cidr_blocks.0:        "" => "0.0.0.0/0"
  egress.482069346.from_port:            "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:   "" => "0"
  egress.482069346.prefix_list_ids.#:    "" => "0"
  egress.482069346.protocol:             "" => "-1"
  egress.482069346.security_groups.#:    "" => "0"
  egress.482069346.self:                 "" => "false"
  egress.482069346.to_port:              "" => "0"
  ingress.#:                             "" => "1"
  ingress.2541437006.cidr_blocks.#:      "" => "1"
  ingress.2541437006.cidr_blocks.0:      "" => "0.0.0.0/0"
  ingress.2541437006.from_port:          "" => "22"
  ingress.2541437006.ipv6_cidr_blocks.#: "" => "0"
  ingress.2541437006.protocol:           "" => "tcp"
  ingress.2541437006.security_groups.#:  "" => "0"
  ingress.2541437006.self:               "" => "false"
  ingress.2541437006.to_port:            "" => "22"
  name:                                  "" => "ssh_access" (forces new resource)
  owner_id:                              "" => "<computed>"
  vpc_id:                                "" => "<computed>" (forces new resource)
CREATE: aws_security_group.tcp_internal_access
  description:                          "" => "internal_access group" (forces new resource)
  egress.#:                             "" => "1"
  egress.482069346.cidr_blocks.#:       "" => "1"
  egress.482069346.cidr_blocks.0:       "" => "0.0.0.0/0"
  egress.482069346.from_port:           "" => "0"
  egress.482069346.ipv6_cidr_blocks.#:  "" => "0"
  egress.482069346.prefix_list_ids.#:   "" => "0"
  egress.482069346.protocol:            "" => "-1"
  egress.482069346.security_groups.#:   "" => "0"
  egress.482069346.self:                "" => "false"
  egress.482069346.to_port:             "" => "0"
  ingress.#:                            "" => "1"
  ingress.868428910.cidr_blocks.#:      "" => "1"
  ingress.868428910.cidr_blocks.0:      "" => "172.31.0.0/16"
  ingress.868428910.from_port:          "" => "1"
  ingress.868428910.ipv6_cidr_blocks.#: "" => "0"
  ingress.868428910.protocol:           "" => "tcp"
  ingress.868428910.security_groups.#:  "" => "0"
  ingress.868428910.self:               "" => "false"
  ingress.868428910.to_port:            "" => "65535"
  name:                                 "" => "internal_access" (forces new resource)
  owner_id:                             "" => "<computed>"
  tags.%:                               "" => "1"
  tags.Name:                            "" => "tcp_internal_access"
  vpc_id:                               "" => "<computed>" (forces new resource)
CREATE: aws_spot_instance_request.mtg_worker01
  ami:                          "" => "ami-e1679399" (forces new resource)
  associate_public_ip_address:  "" => "true" (forces new resource)
  availability_zone:            "" => "<computed>" (forces new resource)
  ebs_block_device.#:           "" => "<computed>" (forces new resource)
  ephemeral_block_device.#:     "" => "<computed>" (forces new resource)
  instance_state:               "" => "<computed>" (forces new resource)
  instance_type:                "" => "m3.medium" (forces new resource)
  ipv6_address_count:           "" => "<computed>" (forces new resource)
  ipv6_addresses.#:             "" => "<computed>" (forces new resource)
  key_name:                     "" => "<computed>" (forces new resource)
  network_interface.#:          "" => "<computed>" (forces new resource)
  network_interface_id:         "" => "<computed>" (forces new resource)
  placement_group:              "" => "<computed>" (forces new resource)
  primary_network_interface_id: "" => "<computed>" (forces new resource)
  private_dns:                  "" => "<computed>" (forces new resource)
  private_ip:                   "" => "<computed>" (forces new resource)
  public_dns:                   "" => "<computed>" (forces new resource)
  public_ip:                    "" => "<computed>" (forces new resource)
  root_block_device.#:          "" => "<computed>" (forces new resource)
  security_groups.#:            "" => "<computed>" (forces new resource)
  source_dest_check:            "" => "true" (forces new resource)
  spot_bid_status:              "" => "<computed>"
  spot_instance_id:             "" => "<computed>"
  spot_price:                   "" => "0.02" (forces new resource)
  spot_request_state:           "" => "<computed>"
  spot_type:                    "" => "persistent"
  subnet_id:                    "" => "subnet-401d891b" (forces new resource)
  tenancy:                      "" => "<computed>" (forces new resource)
  vpc_security_group_ids.#:     "" => "<computed>" (forces new resource)
  wait_for_fulfillment:         "" => "true"
2017/09/05 14:12:09 [TRACE] DiffTransformer: Resource "aws_security_group.ssh_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.to_port":*terraform.ResourceAttrDiff{Old:"", New:"22", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.from_port":*terraform.ResourceAttrDiff{Old:"", New:"22", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2541437006.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"ssh_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"ssh_access group", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:12:09 [TRACE] DiffTransformer: Resource "aws_security_group.tcp_internal_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"172.31.0.0/16", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.to_port":*terraform.ResourceAttrDiff{Old:"", New:"65535", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"internal_access group", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"tcp_internal_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "ingress.868428910.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.868428910.from_port":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"internal_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.868428910.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:12:09 [TRACE] DiffTransformer: Resource "aws_security_group.internet_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.to_port":*terraform.ResourceAttrDiff{Old:"", New:"80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"internet_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"internet_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.from_port":*terraform.ResourceAttrDiff{Old:"", New:"80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.2214680975.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"internet_access tcp port 80", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:12:09 [TRACE] DiffTransformer: Resource "aws_security_group.splunk_access": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"egress.482069346.to_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "vpc_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.482069346.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.protocol":*terraform.ResourceAttrDiff{Old:"", New:"-1", NewComputed:false, NewRemoved:false, NewExtra:"-1", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.to_port":*terraform.ResourceAttrDiff{Old:"", New:"8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "owner_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.prefix_list_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.from_port":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.%":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "tags.Name":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.from_port":*terraform.ResourceAttrDiff{Old:"", New:"8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "name":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "egress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.cidr_blocks.0":*terraform.ResourceAttrDiff{Old:"", New:"0.0.0.0/0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.#":*terraform.ResourceAttrDiff{Old:"", New:"1", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "egress.482069346.self":*terraform.ResourceAttrDiff{Old:"", New:"false", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "description":*terraform.ResourceAttrDiff{Old:"", New:"splunk_access tcp port 8080", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "ingress.516175195.protocol":*terraform.ResourceAttrDiff{Old:"", New:"tcp", NewComputed:false, NewRemoved:false, NewExtra:"tcp", RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.ipv6_cidr_blocks.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "ingress.516175195.security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"0", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:12:09 [TRACE] DiffTransformer: Resource "aws_spot_instance_request.mtg_worker01": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff{"spot_instance_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "spot_bid_status":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "security_groups.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "wait_for_fulfillment":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "associate_public_ip_address":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_type":*terraform.ResourceAttrDiff{Old:"", New:"persistent", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "placement_group":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "network_interface.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ebs_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "private_dns":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "public_dns":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "network_interface_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "private_ip":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x2}, "ipv6_addresses.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ami":*terraform.ResourceAttrDiff{Old:"", New:"ami-e1679399", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "primary_network_interface_id":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "root_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_price":*terraform.ResourceAttrDiff{Old:"", New:"0.02", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "vpc_security_group_ids.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "instance_state":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "source_dest_check":*terraform.ResourceAttrDiff{Old:"", New:"true", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ephemeral_block_device.#":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "tenancy":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "ipv6_address_count":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "subnet_id":*terraform.ResourceAttrDiff{Old:"", New:"subnet-401d891b", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "availability_zone":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "public_ip":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "key_name":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}, "spot_request_state":*terraform.ResourceAttrDiff{Old:"", New:"", NewComputed:true, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:false, Sensitive:false, Type:0x0}, "instance_type":*terraform.ResourceAttrDiff{Old:"", New:"m3.medium", NewComputed:false, NewRemoved:false, NewExtra:interface {}(nil), RequiresNew:true, Sensitive:false, Type:0x0}}, Destroy:false, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.DiffTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 14:12:09 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/05 14:12:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.internet_access
2017/09/05 14:12:09 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"internet_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc420676540), RawConfig:(*config.RawConfig)(0xc42060d9e0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.splunk_access
2017/09/05 14:12:09 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"splunk_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060d860), RawConfig:(*config.RawConfig)(0xc42060cd20), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:09 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"mtg_worker01", Type:"aws_spot_instance_request", RawCount:(*config.RawConfig)(0xc4201dbe00), RawConfig:(*config.RawConfig)(0xc4201db320), Provisioners:[]*config.Provisioner{(*config.Provisioner)(0xc4205527b0), (*config.Provisioner)(0xc420552900), (*config.Provisioner)(0xc420552a80), (*config.Provisioner)(0xc420552c00)}, Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.ssh_access
2017/09/05 14:12:09 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"ssh_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc4203a3ec0), RawConfig:(*config.RawConfig)(0xc4203a34a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:09 [TRACE] AttachResourceConfigTransformer: Attach resource config request: aws_security_group.tcp_internal_access
2017/09/05 14:12:09 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"tcp_internal_access", Type:"aws_security_group", RawCount:(*config.RawConfig)(0xc42060cba0), RawConfig:(*config.RawConfig)(0xc42060c060), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.ssh_access": aws_security_group.ssh_access
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.tcp_internal_access": aws_security_group.tcp_internal_access
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.internet_access": aws_security_group.internet_access
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_security_group.splunk_access": aws_security_group.splunk_access
2017/09/05 14:12:09 [DEBUG] Resource state not found for "aws_spot_instance_request.mtg_worker01": aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachStateTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
aws_security_group.splunk_access - *terraform.NodeApplyableResource
aws_security_group.ssh_access - *terraform.NodeApplyableResource
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ParentProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:12:09 [TRACE] Attach provider request: []string{} aws
2017/09/05 14:12:09 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"aws", Alias:"", RawConfig:(*config.RawConfig)(0xc4201daea0)}
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:12:09 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:12:09 [TRACE] CBDEdgeTransformer: Beginning CBD transformation...
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.CBDEdgeTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.RootVariableTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.OutputTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_spot_instance_request.mtg_worker01" references: [aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access var.private_key_path aws_security_group.internet_access aws_security_group.splunk_access aws_security_group.ssh_access aws_security_group.tcp_internal_access]
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "var.private_key_path" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.tcp_internal_access" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.internet_access" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.region var.profile]
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "var.domain-name" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "var.stack" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "var.region-az" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "var.env" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.ssh_access" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "aws_security_group.splunk_access" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "var.profile" references: []
2017/09/05 14:12:09 [DEBUG] ReferenceTransformer: "var.region" references: []
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.ReferenceTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.remote-exec - *terraform.NodeProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.private_key_path - *terraform.NodeRootVariable
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_security_group.internet_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.splunk_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.ssh_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  aws_security_group.internet_access - *terraform.NodeApplyableResource
  aws_security_group.splunk_access - *terraform.NodeApplyableResource
  aws_security_group.ssh_access - *terraform.NodeApplyableResource
  aws_security_group.tcp_internal_access - *terraform.NodeApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.private_key_path - *terraform.NodeRootVariable
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
  var.domain-name - *terraform.NodeRootVariable
  var.env - *terraform.NodeRootVariable
  var.region-az - *terraform.NodeRootVariable
  var.stack - *terraform.NodeRootVariable
provider.aws - *terraform.NodeApplyableProvider
  var.profile - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.file - *terraform.NodeProvisioner
provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
provisioner.remote-exec - *terraform.NodeProvisioner
provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  aws_spot_instance_request.mtg_worker01 - *terraform.NodeApplyableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
var.domain-name - *terraform.NodeRootVariable
var.env - *terraform.NodeRootVariable
var.private_key_path - *terraform.NodeRootVariable
var.profile - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.region-az - *terraform.NodeRootVariable
var.stack - *terraform.NodeRootVariable
2017/09/05 14:12:09 [DEBUG] Starting graph walk: walkApply
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.splunk_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "provisioner.file"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "provisioner.file (close)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "var.env"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.ssh_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "var.private_key_path"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.tcp_internal_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "provider.aws"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "root"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "var.region"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "var.profile"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "aws_security_group.internet_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "var.region-az"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "provisioner.remote-exec (close)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "var.stack"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "var.domain-name"
2017/09/05 14:12:09 [DEBUG] dag/walk: added new vertex: "provider.aws (close)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.env"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.splunk_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.file"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.domain-name"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "provisioner.remote-exec (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.region-az"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.internet_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_security_group.tcp_internal_access" waiting on "provider.aws"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "provider.aws (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_security_group.ssh_access" waiting on "provider.aws"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.ssh_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.remote-exec (close)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_security_group.splunk_access" waiting on "provider.aws"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "provisioner.file (close)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "var.private_key_path"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "provisioner.remote-exec"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_spot_instance_request.mtg_worker01" waiting on "aws_security_group.tcp_internal_access"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.profile"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "root" waiting on "provisioner.file (close)"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "provider.aws" waiting on "var.region"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "var.stack"
2017/09/05 14:12:09 [DEBUG] dag/walk: added edge: "aws_security_group.internet_access" waiting on "provider.aws"
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "root", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "aws_security_group.ssh_access", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "aws_security_group.splunk_access", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "provisioner.file (close)", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "aws_spot_instance_request.mtg_worker01", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "provisioner.remote-exec (close)", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "provider.aws", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "aws_security_group.internet_access", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: dependencies changed for "aws_security_group.tcp_internal_access", sending new deps
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "var.stack"
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "provisioner.remote-exec"
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.remote-exec': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "var.profile"
2017/09/05 14:12:09 [DEBUG] vertex 'root.var.profile': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "var.region"
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "var.env"
2017/09/05 14:12:09 [DEBUG] vertex 'root.var.env': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "provisioner.file"
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.file': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.var.stack': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "var.private_key_path"
2017/09/05 14:12:09 [DEBUG] vertex 'root.var.private_key_path': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.file': evaluating
2017/09/05 14:12:09 [DEBUG] vertex 'root.var.region': walking
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "var.domain-name"
2017/09/05 14:12:09 [DEBUG] vertex 'root.var.domain-name': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.provisioner.remote-exec': evaluating
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "var.region-az"
2017/09/05 14:12:09 [DEBUG] vertex 'root.var.region-az': walking
2017/09/05 14:12:09 [TRACE] [walkApply] Entering eval tree: provisioner.file
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:12:09 [DEBUG] dag/walk: walking "provider.aws"
2017/09/05 14:12:09 [DEBUG] vertex 'root.provider.aws': walking
2017/09/05 14:12:09 [DEBUG] vertex 'root.provider.aws': evaluating
2017/09/05 14:12:09 [TRACE] [walkApply] Entering eval tree: provider.aws
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInitProvider
2017/09/05 14:12:09 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2017/09/05 14:12:09 [TRACE] [walkApply] Exiting eval tree: provisioner.file
2017/09/05 14:12:09 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec
2017/09/05 14:12:09 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:09 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalOpFilter
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:09 [DEBUG] root: eval: *terraform.EvalConfigProvider
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [INFO] No assume_role block read from configuration
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [INFO] Building AWS region structure
2017/09/05 14:12:09 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:09 [INFO] Building AWS auth structure
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [INFO] AWS Auth provider used: "SharedCredentialsProvider"
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [WARN] Invalid log level: "log.txt". Defaulting to level: TRACE. Valid levels are: [TRACE DEBUG INFO WARN ERROR]
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [INFO] Initializing DeviceFarm SDK connection
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [DEBUG] [aws-sdk-go] DEBUG: Request sts/GetCallerIdentity Details:
2017/09/05 14:12:10 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:10 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Host: sts.amazonaws.com
2017/09/05 14:12:10 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Content-Length: 43
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/sts/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=8618e08e835063376e366c482c8bae17f648a7ad59a4d4c553c6e1e7d6787318
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:10 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211210Z
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:10 [DEBUG] plugin: terraform: 
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Action=GetCallerIdentity&Version=2011-06-15
2017/09/05 14:12:10 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [DEBUG] [aws-sdk-go] DEBUG: Response sts/GetCallerIdentity Details:
2017/09/05 14:12:10 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:10 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Content-Length: 407
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:10 [DEBUG] plugin: terraform: X-Amzn-Requestid: e17d28eb-927e-11e7-9ac3-8b2aa1086257
2017/09/05 14:12:10 [DEBUG] plugin: terraform: 
2017/09/05 14:12:10 [DEBUG] plugin: terraform: 
2017/09/05 14:12:10 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [DEBUG] [aws-sdk-go] <GetCallerIdentityResponse xmlns="https://sts.amazonaws.com/doc/2011-06-15/">
2017/09/05 14:12:10 [DEBUG] plugin: terraform:   <GetCallerIdentityResult>
2017/09/05 14:12:10 [DEBUG] plugin: terraform:     <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:12:10 [DEBUG] plugin: terraform:     <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:12:10 [DEBUG] plugin: terraform:     <Account>315913620976</Account>
2017/09/05 14:12:10 [DEBUG] plugin: terraform:   </GetCallerIdentityResult>
2017/09/05 14:12:10 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:12:10 [DEBUG] plugin: terraform:     <RequestId>e17d28eb-927e-11e7-9ac3-8b2aa1086257</RequestId>
2017/09/05 14:12:10 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:12:10 [DEBUG] plugin: terraform: </GetCallerIdentityResponse>
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [DEBUG] Trying to get account ID via iam:GetUser
2017/09/05 14:12:10 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:10 [DEBUG] [aws-sdk-go] DEBUG: Request iam/GetUser Details:
2017/09/05 14:12:10 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:10 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Host: iam.amazonaws.com
2017/09/05 14:12:10 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Content-Length: 33
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-east-1/iam/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=8abeed4376519f0c6fff42ca33be7e6af50cd21989538252f00e9a4bd8dc9d26
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:10 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211210Z
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:10 [DEBUG] plugin: terraform: 
2017/09/05 14:12:10 [DEBUG] plugin: terraform: Action=GetUser&Version=2010-05-08
2017/09/05 14:12:10 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response iam/GetUser Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 533
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amzn-Requestid: e1add615-927e-11e7-b855-17f0d3abd776
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <GetUserResponse xmlns="https://iam.amazonaws.com/doc/2010-05-08/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   <GetUserResult>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <User>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:       <Path>/</Path>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:       <PasswordLastUsed>2017-09-05T17:37:08Z</PasswordLastUsed>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:       <UserName>eric.young</UserName>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:       <Arn>arn:aws:iam::315913620976:user/eric.young</Arn>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:       <UserId>AIDAJCYFN75ZS7UKLRSGQ</UserId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:       <CreateDate>2017-08-09T16:56:05Z</CreateDate>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     </User>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   </GetUserResult>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   <ResponseMetadata>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <RequestId>e1add615-927e-11e7-b855-17f0d3abd776</RequestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   </ResponseMetadata>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </GetUserResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeAccountAttributes Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 87
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=dfd2b96c40bbc87f3606784a5c2d8057579a4042f9e167f9c6436dfec8e0a81f
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=DescribeAccountAttributes&AttributeName.1=supported-platforms&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeAccountAttributes Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <DescribeAccountAttributesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>9f12b4bc-a42a-41bb-9124-4f62ae6bd226</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <accountAttributeSet>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <attributeName>supported-platforms</attributeName>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <attributeValueSet>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <attributeValue>VPC</attributeValue>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             </attributeValueSet>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     </accountAttributeSet>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </DescribeAccountAttributesResponse>
2017/09/05 14:12:11 [TRACE] [walkApply] Exiting eval tree: provider.aws
2017/09/05 14:12:11 [DEBUG] dag/walk: walking "aws_security_group.ssh_access"
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.ssh_access': walking
2017/09/05 14:12:11 [DEBUG] dag/walk: walking "aws_security_group.internet_access"
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.internet_access': walking
2017/09/05 14:12:11 [DEBUG] dag/walk: walking "aws_security_group.splunk_access"
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.splunk_access': walking
2017/09/05 14:12:11 [DEBUG] dag/walk: walking "aws_security_group.tcp_internal_access"
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': walking
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.ssh_access': evaluating
2017/09/05 14:12:11 [TRACE] [walkApply] Entering eval tree: aws_security_group.ssh_access
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.internet_access': evaluating
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [TRACE] [walkApply] Entering eval tree: aws_security_group.internet_access
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.splunk_access': evaluating
2017/09/05 14:12:11 [TRACE] [walkApply] Entering eval tree: aws_security_group.splunk_access
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] vertex 'root.aws_security_group.tcp_internal_access': evaluating
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:11 [TRACE] [walkApply] Entering eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:12:11 [DEBUG] apply: aws_security_group.internet_access: executing Apply
2017/09/05 14:12:11 [DEBUG] apply: aws_security_group.ssh_access: executing Apply
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:12:11 [DEBUG] apply: aws_security_group.splunk_access: executing Apply
2017/09/05 14:12:11 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:12:11 [DEBUG] apply: aws_security_group.tcp_internal_access: executing Apply
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Security Group create configuration: {
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   GroupName: "internet_access"
2017/09/05 14:12:11 [DEBUG] plugin: terraform: }
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Security Group create configuration: {
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   GroupName: "ssh_access"
2017/09/05 14:12:11 [DEBUG] plugin: terraform: }
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] No meta timeoutkey found in Apply()
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Security Group create configuration: {
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   GroupName: "splunk_access"
2017/09/05 14:12:11 [DEBUG] plugin: terraform: }
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Security Group create configuration: {
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   GroupName: "internal_access"
2017/09/05 14:12:11 [DEBUG] plugin: terraform: }
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 100
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=4306efbe0203030e822634c68038a8572c6fb8d334e685a2c9b25ee7c2ba984f
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=ssh_access+group&GroupName=ssh_access&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 114
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e74440191106a4fa2110dcaf5c95462f445d0e66d94cb194c672bb64b9b4e89d
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=splunk_access+tcp+port+8080&GroupName=splunk_access&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 110
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=30e4b2de807e285d6289f0ab02002f6cdeda06ec060a4a5d8952053998fdf814
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=internal_access+group&GroupName=internal_access&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 116
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=9ab756dc4d9fe8f62d4280b2e78ce6744bdf8ea797c9b4e07563bd507286db6a
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=CreateSecurityGroup&GroupDescription=internet_access+tcp+port+80&GroupName=internet_access&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>03b19d75-092e-4dd0-8f5a-f5b301f4715f</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <groupId>sg-014f437b</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [INFO] Security Group ID: sg-014f437b
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for Security Group (sg-014f437b) to exist
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for state to become: [exists]
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=d8f5e048e6114db68cb6651481d532e5743b25b2ebd98ff910a1aaad5c23756f
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-014f437b&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>1bcdd12c-d3e0-4f22-b9a6-fed5ee33bd57</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <groupId>sg-714a460b</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [INFO] Security Group ID: sg-714a460b
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for Security Group (sg-714a460b) to exist
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for state to become: [exists]
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0cabaa25ff9d9c6fd0d4987da881e63877238dc355317107e536bb8dac0bcd51
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-714a460b&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>bf87cb4a-1e99-4635-a437-64a44231abe7</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <groupId>sg-514d412b</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [INFO] Security Group ID: sg-514d412b
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for Security Group (sg-514d412b) to exist
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for state to become: [exists]
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=bb4588dcee55fb204118b2e8b5a04e43b5394953c4c0a226200afea91155f9f2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-514d412b&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateSecurityGroup Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <CreateSecurityGroupResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>23064968-df72-4211-848a-f85684a65906</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </CreateSecurityGroupResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [INFO] Security Group ID: sg-3f4e4245
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for Security Group (sg-3f4e4245) to exist
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for state to become: [exists]
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=6232b9f918ef814aa4d4cfb8b05f67fbfad2560eb04610385e084693c6add254
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-3f4e4245&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>76a4b7f4-4494-407a-942b-e632db63050e</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupId>sg-014f437b</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Revoking default egress rule for Security Group for sg-014f437b
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e8e3afc7533f40fc6e9c185db4382f02186190090e1b316ee51759085d4679b5
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-014f437b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:10 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>a2fd12e9-f2a1-4df0-b665-8cc397cba846</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupId>sg-714a460b</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Creating tags: [{
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Value: "tcp_internal_access"
2017/09/05 14:12:11 [DEBUG] plugin: terraform: }] for sg-714a460b
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 108
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=0c91e3c2d08d9540650a23c551b3c6ef118bfee0dab480e211215113ce60ba28
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-714a460b&Tag.1.Key=Name&Tag.1.Value=tcp_internal_access&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>426b578a-8d31-42f5-ac35-4cd6c1c7445f</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Creating tags: [{
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Value: "internet_access"
2017/09/05 14:12:11 [DEBUG] plugin: terraform: }] for sg-3f4e4245
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 104
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=fbceb7e94b5767b187dd2fc7f833619e928d457efd2412c7926ec2505627c578
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-3f4e4245&Tag.1.Key=Name&Tag.1.Value=internet_access&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <requestId>5d277af5-8e2c-41a1-9e5f-852e8eabab7d</requestId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupId>sg-514d412b</groupId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:11 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] Creating tags: [{
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Key: "Name",
2017/09/05 14:12:11 [DEBUG] plugin: terraform:   Value: "splunk_access"
2017/09/05 14:12:11 [DEBUG] plugin: terraform: }] for sg-514d412b
2017/09/05 14:12:11 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:11 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/CreateTags Details:
2017/09/05 14:12:11 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:11 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:11 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Length: 102
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=cc394f1dc0929c3a6b4afa404916ed42d20baeebe0527d934c384199893d2e04
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:11 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211211Z
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:11 [DEBUG] plugin: terraform: 
2017/09/05 14:12:11 [DEBUG] plugin: terraform: Action=CreateTags&ResourceId.1=sg-514d412b&Tag.1.Key=Name&Tag.1.Value=splunk_access&Version=2016-11-15
2017/09/05 14:12:11 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>db609a88-6f5c-4989-b81f-dbd801b835b5</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Revoking default egress rule for Security Group for sg-714a460b
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=65c26e239860416e74a3f584133c4ceb0d5360de4276a0a126ae0775e30b72cb
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-714a460b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>e24c3071-4b0c-4268-8692-f4690f6e7f4b</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-014f437b
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=afd4cde850ab8dfb21f4a2c8559fd5637101cd11ea22bb73d8eaa45dc1b7656c
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-014f437b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>503543fc-7417-4e6f-8a35-0d89c620e287</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Revoking default egress rule for Security Group for sg-514d412b
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=ae9bce0925cb0b6a7ef3bd9e45a20791aa5c9a85704add25a3be8404f2786677
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-514d412b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/CreateTags Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <CreateTagsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>08287197-e5ca-4e31-8780-ecfc1ad08fb4</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </CreateTagsResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Revoking default egress rule for Security Group for sg-3f4e4245
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 199
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=be5a72b4b3b8e60b2f12050aa2867aa52e6b0d17300d28fc9ee9cc7d200cbb34
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-3f4e4245&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>b375c6fb-3f36-4870-9ec4-33a26310d323</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=37eed3923ab21d1a1bd093a9a8dc9d830a5ddb6933cd7cd3c6af1ee0dc09ea9f
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-014f437b&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>937af606-4e5d-44de-9c75-30c061e50886</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-714a460b
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=9772decdc2b9e300f8da6928c6743823c52cf6a39cea7be0b7b9165d4179f6b0
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-714a460b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>b4b6cba2-e6c9-42fe-8b31-8fd49c66182a</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-3f4e4245
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=b37adf1632e135ee9fc2b9fa7a0e5c514995e9874678e843d1eb3ecf6b6c6b82
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-3f4e4245&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>515ac105-41d5-4525-ac63-b0eff1047778</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-514d412b
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=70928761c3673a405302105bac2672dd5b162583a1b6d13fc6b8cf68b9bb7314
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=RevokeSecurityGroupEgress&GroupId=sg-514d412b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.Ipv6Ranges.1.CidrIpv6=%3A%3A%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>36d5db2b-0dc0-4317-9e2f-0ea1b3bbecd6</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupId>sg-014f437b</groupId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Authorizing security group {
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupId: "sg-014f437b",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupName: "ssh_access",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:12 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   FromPort: 22,
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   ToPort: 22
2017/09/05 14:12:12 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 206
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f2a4e0a2d34bc9b46583f58898738aa1cfe8620ee1d8ca24e8622297612f4a23
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-014f437b&IpPermissions.1.FromPort=22&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=22&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>f3d03e7c-bb14-4b28-98f1-45476bf4b84b</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c37b75f7794a7263a68898f31ae6e7be1c041162653d27fe7ffb2413eeb65fa7
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-714a460b&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>ba763fc7-6165-4731-8bff-b4625272436b</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=3abac287a77547a68018e47063245f42bf6ad52d91c2bb7c7e86aede66b90f19
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-3f4e4245&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RevokeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <RevokeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>a873384a-597d-4098-9c1c-fca319f7d187</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </RevokeSecurityGroupEgressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=bfad6e4765c9cfd1df91a1e825e3cc474436183ef58d955db74aa279ace19d7e
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-514d412b&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>0812dcd9-bdaa-46f9-983c-3799c57d7b35</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>647c34c0-8481-4f88-8a29-03225b4b2495</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupId>sg-514d412b</groupId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Authorizing security group {
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupId: "sg-514d412b",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupName: "splunk_access",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       Value: "splunk_access"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:12 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   FromPort: 8080,
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   ToPort: 8080
2017/09/05 14:12:12 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Authorizing security group {
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupId: "sg-3f4e4245",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupName: "internet_access",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       Value: "internet_access"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:12 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   FromPort: 80,
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   ToPort: 80
2017/09/05 14:12:12 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 206
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=a1151cfa53e47302c53b94dadbe9d70acafad7d353ba300739f1e5b934182c78
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-3f4e4245&IpPermissions.1.FromPort=80&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=80&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 210
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=bf97cee1603fa4949dfba5aeb3199bbc3ada61de3fc308070a293cabfad732fa
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-514d412b&IpPermissions.1.FromPort=8080&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=8080&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>369e7263-96cc-42d8-8c50-97cf812742dc</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupId>sg-714a460b</groupId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissions/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <ipPermissionsEgress/>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Authorizing security group {
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupId: "sg-714a460b",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupName: "internal_access",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       Value: "tcp_internal_access"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:12 [DEBUG] plugin: terraform: } ingress rule: []*ec2.IpPermission{{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   FromPort: 1,
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpProtocol: "tcp",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       CidrIp: "172.31.0.0/16"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   ToPort: 65535
2017/09/05 14:12:12 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 212
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=de0019ac5751c9054c354d4aeff5a73951c55eb2d4a1ea415448822786f3a445
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupIngress&GroupId=sg-714a460b&IpPermissions.1.FromPort=1&IpPermissions.1.IpProtocol=tcp&IpPermissions.1.IpRanges.1.CidrIp=172.31.0.0%2F16&IpPermissions.1.ToPort=65535&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:11 GMT
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <requestId>ed2b2cc0-eba4-4105-a911-61dcc6210ca3</requestId>
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] Authorizing security group {
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   Description: "ssh_access group",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupId: "sg-014f437b",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   GroupName: "ssh_access",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:12 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:12 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 14:12:12 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:12 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 14:12:12 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:12 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:12 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:12 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:12 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:12 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=e9a3449b38b9383ae53cee74934525aaaa91819ab465b4546b71a8acb1b8ffad
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:12 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211212Z
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:12 [DEBUG] plugin: terraform: 
2017/09/05 14:12:12 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-014f437b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:12 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>07e09bd1-2741-48a1-8437-89934fb8c147</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=767f86d42962a3a4993d1d0c48646b54b668b3dcd690220911aa0bab269afc5e
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-014f437b&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>b52fb66b-7d65-4b15-9c85-00a39c89333d</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Authorizing security group {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   Description: "internet_access tcp port 80",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   GroupId: "sg-3f4e4245",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   GroupName: "internet_access",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Value: "internet_access"
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:13 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 14:12:13 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=5a80e692e8d66e84b113a62b2e3c3d70e65316ee005a76eb9ac668131d674ac3
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-3f4e4245&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>b7aad02a-307d-4967-bdf4-63798b8bc39c</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Authorizing security group {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   Description: "internal_access group",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   GroupId: "sg-714a460b",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   GroupName: "internal_access",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Value: "tcp_internal_access"
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:13 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 14:12:13 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=926091014307a4bbe8c842df3fd07dcd644ac145f6f1c81c6bbb33170ef8b70a
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-714a460b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupIngress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupIngressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>28b09c29-6e2c-4be1-a549-1da3cbb37954</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupIngressResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Authorizing security group {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   Description: "splunk_access tcp port 8080",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   GroupId: "sg-514d412b",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   GroupName: "splunk_access",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   OwnerId: "315913620976",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   Tags: [{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Key: "Name",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Value: "splunk_access"
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   VpcId: "vpc-308c2256"
2017/09/05 14:12:13 [DEBUG] plugin: terraform: } egress rule: []*ec2.IpPermission{{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   FromPort: 0,
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   IpProtocol: "-1",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   IpRanges: [{
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       CidrIp: "0.0.0.0/0"
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     }],
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   ToPort: 0
2017/09/05 14:12:13 [DEBUG] plugin: terraform: }}
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 202
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=7c4d7ee82bba4595581c2a665882b2f4405a69fa9bd57208bbe0967574abe351
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=AuthorizeSecurityGroupEgress&GroupId=sg-514d412b&IpPermissions.1.FromPort=0&IpPermissions.1.IpProtocol=-1&IpPermissions.1.IpRanges.1.CidrIp=0.0.0.0%2F0&IpPermissions.1.ToPort=0&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>564c514e-19a7-4f32-8044-2e1a84d57fb7</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupId>sg-014f437b</groupId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupName>ssh_access</groupName>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupDescription>ssh_access group</groupDescription>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <fromPort>22</fromPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <toPort>22</toPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:12:13 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:12:13 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:12:13 [TRACE] [walkApply] Exiting eval tree: aws_security_group.ssh_access
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>17c71738-5914-4553-a820-b8d6df1d5e33</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=f513b0fe719d7b35e61ccd9b04c93c2c84ec5e180dad8fb60837dba028a0d191
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-714a460b&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:13 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>64cbff0b-bb10-4075-b26f-c1447eb89caa</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=737cd8d1330a2967cc41d81569507cd05f85173e2ef50cac78582953ea7da179
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-3f4e4245&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/AuthorizeSecurityGroupEgress Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <AuthorizeSecurityGroupEgressResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>5ea8f2ae-925e-4a20-b6d7-1d04c64b39b9</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <return>true</return>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </AuthorizeSecurityGroupEgressResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 70
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=c3f07a9c34cff8fb0791adb9d76f5bb5de8bd37aaebadfd2452e785280602ade
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=DescribeSecurityGroups&GroupId.1=sg-514d412b&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>e62f3d7f-551f-4434-820e-342a7fac0c7d</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupId>sg-714a460b</groupId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupName>internal_access</groupName>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupDescription>internal_access group</groupDescription>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <fromPort>1</fromPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <toPort>65535</toPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>172.31.0.0/16</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <value>tcp_internal_access</value>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:12:13 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:12:13 [TRACE] [walkApply] Exiting eval tree: aws_security_group.tcp_internal_access
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:13 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>55260a6e-3ad2-47be-ae92-80205d8c9f1d</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupId>sg-514d412b</groupId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupName>splunk_access</groupName>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupDescription>splunk_access tcp port 8080</groupDescription>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <fromPort>8080</fromPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <toPort>8080</toPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <value>splunk_access</value>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:12:13 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:12:13 [TRACE] [walkApply] Exiting eval tree: aws_security_group.splunk_access
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSecurityGroups Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:12 GMT
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <requestId>0be0e810-7118-4401-8b3b-a3d96f45da98</requestId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     <securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupName>internet_access</groupName>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <groupDescription>internet_access tcp port 80</groupDescription>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>tcp</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <fromPort>80</fromPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <toPort>80</toPort>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissions>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipProtocol>-1</ipProtocol>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <groups/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                             <cidrIp>0.0.0.0/0</cidrIp>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     </ipRanges>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <ipv6Ranges/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <prefixListIds/>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </ipPermissionsEgress>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             <tagSet>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <key>Name</key>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                     <value>internet_access</value>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:             </tagSet>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     </securityGroupInfo>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: </DescribeSecurityGroupsResponse>
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Matching ^aws: with Name
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:12:13 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:12:13 [TRACE] [walkApply] Exiting eval tree: aws_security_group.internet_access
2017/09/05 14:12:13 [DEBUG] dag/walk: walking "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:13 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': walking
2017/09/05 14:12:13 [DEBUG] vertex 'root.aws_spot_instance_request.mtg_worker01': evaluating
2017/09/05 14:12:13 [TRACE] [walkApply] Entering eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalSequence
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:13 [DEBUG] root: eval: terraform.EvalNoop
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalInterpolate
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalValidateResource
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalReadDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalCompareDiff
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalGetProvider
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalReadState
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApplyPre
2017/09/05 14:12:13 [DEBUG] root: eval: *terraform.EvalApply
2017/09/05 14:12:13 [DEBUG] apply: aws_spot_instance_request.mtg_worker01: executing Apply
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Requesting spot bid opts: {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   InstanceCount: 1,
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   LaunchSpecification: {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     EbsOptimized: false,
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     IamInstanceProfile: {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Name: ""
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     },
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     ImageId: "ami-e1679399",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     InstanceType: "m3.medium",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     Monitoring: {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       Enabled: false
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     },
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     Placement: {
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       AvailabilityZone: "",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       GroupName: ""
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     },
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     SecurityGroupIds: [
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       "sg-514d412b",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       "sg-3f4e4245",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       "sg-714a460b",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:       "sg-014f437b"
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     ],
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     SubnetId: "subnet-401d891b",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:     UserData: ""
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   },
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   SpotPrice: "0.02",
2017/09/05 14:12:13 [DEBUG] plugin: terraform:   Type: "persistent"
2017/09/05 14:12:13 [DEBUG] plugin: terraform: }
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] Waiting for state to become: [success]
2017/09/05 14:12:13 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:13 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/RequestSpotInstances Details:
2017/09/05 14:12:13 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:13 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:13 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Length: 670
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=348bf0296a8cc5f67547e28cced08023bae02e0e528a252629e934b934c9fea2
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:13 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211213Z
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:13 [DEBUG] plugin: terraform: 
2017/09/05 14:12:13 [DEBUG] plugin: terraform: Action=RequestSpotInstances&InstanceCount=1&LaunchSpecification.EbsOptimized=false&LaunchSpecification.IamInstanceProfile.Name=&LaunchSpecification.ImageId=ami-e1679399&LaunchSpecification.InstanceType=m3.medium&LaunchSpecification.Monitoring.Enabled=false&LaunchSpecification.Placement.AvailabilityZone=&LaunchSpecification.Placement.GroupName=&LaunchSpecification.SecurityGroupId.1=sg-514d412b&LaunchSpecification.SecurityGroupId.2=sg-3f4e4245&LaunchSpecification.SecurityGroupId.3=sg-714a460b&LaunchSpecification.SecurityGroupId.4=sg-014f437b&LaunchSpecification.SubnetId=subnet-401d891b&LaunchSpecification.UserData=&SpotPrice=0.02&Type=persistent&Version=2016-11-15
2017/09/05 14:12:13 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:14 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:14 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/RequestSpotInstances Details:
2017/09/05 14:12:14 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:14 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:14 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:14 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:14 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:14 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:13 GMT
2017/09/05 14:12:14 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:14 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:14 [DEBUG] plugin: terraform: 
2017/09/05 14:12:14 [DEBUG] plugin: terraform: 
2017/09/05 14:12:14 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:14 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:14 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:14 [DEBUG] plugin: terraform: <RequestSpotInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:14 [DEBUG] plugin: terraform:     <requestId>e49291a5-c508-44ab-b388-0b1c528cb8dd</requestId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-vt4i8nhp</spotInstanceRequestId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <state>open</state>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <status>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <code>pending-evaluation</code>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T21:12:13.000Z</updateTime>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <message>Your Spot request has been submitted for review, and is pending evaluation.</message>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             </status>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupId>sg-514d412b</groupId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupId>sg-714a460b</groupId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupId>sg-014f437b</groupId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <createTime>2017-09-05T21:12:13.000Z</createTime>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:14 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 14:12:14 [DEBUG] plugin: terraform: </RequestSpotInstancesResponse>
2017/09/05 14:12:14 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:14 [DEBUG] waiting for spot bid to resolve... this may take several minutes.
2017/09/05 14:12:14 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:14 [DEBUG] Waiting for state to become: [fulfilled]
2017/09/05 14:12:14 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:14 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:14 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:14 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:14 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:19 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:19 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:19 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:19 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:19 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:24 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:24 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 14:12:24 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:24 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:24 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=471c663397bcbb2c2b7d3ace01a025cbc7ddc14fef43f7ced4f23ad7ac66212a
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:24 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211224Z
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:24 [DEBUG] plugin: terraform: 
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-vt4i8nhp&Version=2016-11-15
2017/09/05 14:12:24 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:24 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:24 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 14:12:24 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:24 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:23 GMT
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:24 [DEBUG] plugin: terraform: 
2017/09/05 14:12:24 [DEBUG] plugin: terraform: 
2017/09/05 14:12:24 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:24 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:24 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:24 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:24 [DEBUG] plugin: terraform:     <requestId>5f4e7070-3a9e-424b-9a6a-c691c97801b7</requestId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-vt4i8nhp</spotInstanceRequestId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <status>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T21:12:20.000Z</updateTime>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             </status>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupId>sg-514d412b</groupId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupId>sg-714a460b</groupId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupId>sg-014f437b</groupId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <instanceId>i-00b17205e6ce0e56a</instanceId>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <createTime>2017-09-05T21:12:13.000Z</createTime>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:24 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 14:12:24 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 14:12:24 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:24 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeSpotInstanceRequests Details:
2017/09/05 14:12:24 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:24 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:24 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Content-Length: 91
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=471c663397bcbb2c2b7d3ace01a025cbc7ddc14fef43f7ced4f23ad7ac66212a
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:24 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211224Z
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:24 [DEBUG] plugin: terraform: 
2017/09/05 14:12:24 [DEBUG] plugin: terraform: Action=DescribeSpotInstanceRequests&SpotInstanceRequestId.1=sir-vt4i8nhp&Version=2016-11-15
2017/09/05 14:12:24 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:24 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:24 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:24 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:24 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:24 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeSpotInstanceRequests Details:
2017/09/05 14:12:25 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:24 GMT
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: <DescribeSpotInstanceRequestsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     <requestId>6a4406f8-f56c-45c9-b28c-f850a9e9cd07</requestId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     <spotInstanceRequestSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <spotInstanceRequestId>sir-vt4i8nhp</spotInstanceRequestId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <spotPrice>0.020000</spotPrice>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <type>persistent</type>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <state>active</state>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <status>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <code>fulfilled</code>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <updateTime>2017-09-05T21:12:20.000Z</updateTime>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <message>Your Spot request is fulfilled.</message>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             </status>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <launchSpecification>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <imageId>ami-e1679399</imageId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <groupSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupId>sg-514d412b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupName>splunk_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupName>internet_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupId>sg-714a460b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupName>internal_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupId>sg-014f437b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupName>ssh_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 </groupSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <instanceType>m3.medium</instanceType>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <placement>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <groupName/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 </placement>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <monitoring>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <enabled>false</enabled>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 </monitoring>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <iamInstanceProfile>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <name/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 </iamInstanceProfile>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <ebsOptimized>false</ebsOptimized>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             </launchSpecification>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <instanceId>i-00b17205e6ce0e56a</instanceId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <createTime>2017-09-05T21:12:13.000Z</createTime>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <productDescription>Linux/UNIX</productDescription>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <launchedAvailabilityZone>us-west-2c</launchedAvailabilityZone>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     </spotInstanceRequestSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: </DescribeSpotInstanceRequestsResponse>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeInstances Details:
2017/09/05 14:12:25 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:25 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Content-Length: 76
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=49d578ee85a9208609d685ae3627c8daaec8420448344dc10455ee76dca2bfdd
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:25 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211225Z
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Action=DescribeInstances&InstanceId.1=i-00b17205e6ce0e56a&Version=2016-11-15
2017/09/05 14:12:25 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeInstances Details:
2017/09/05 14:12:25 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:24 GMT
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     <requestId>4895f390-0eef-4d7c-8c8e-2132ae87dd3c</requestId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     <reservationSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <reservationId>r-0a28b0b74b6397814</reservationId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <ownerId>315913620976</ownerId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <groupSet/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <instancesSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <instanceId>i-00b17205e6ce0e56a</instanceId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <imageId>ami-e1679399</imageId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <instanceState>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <code>0</code>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <name>pending</name>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </instanceState>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <privateDnsName>ip-172-31-1-110.us-west-2.compute.internal</privateDnsName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <dnsName>ec2-34-213-6-200.us-west-2.compute.amazonaws.com</dnsName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <reason/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <amiLaunchIndex>0</amiLaunchIndex>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <productCodes/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <instanceType>m3.medium</instanceType>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <launchTime>2017-09-05T21:12:20.000Z</launchTime>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <placement>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <groupName/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <tenancy>default</tenancy>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </placement>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <monitoring>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <state>disabled</state>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </monitoring>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <privateIpAddress>172.31.1.110</privateIpAddress>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <ipAddress>34.213.6.200</ipAddress>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <sourceDestCheck>true</sourceDestCheck>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <groupSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupName>internet_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupId>sg-514d412b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupName>splunk_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupId>sg-714a460b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupName>internal_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupId>sg-014f437b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupName>ssh_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </groupSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <architecture>x86_64</architecture>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <rootDeviceType>ebs</rootDeviceType>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <rootDeviceName>/dev/xvda</rootDeviceName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <blockDeviceMapping>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <deviceName>/dev/xvda</deviceName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <ebs>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <volumeId>vol-0874ea53b94826aff</volumeId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <status>attaching</status>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T21:12:20.000Z</attachTime>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             </ebs>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </blockDeviceMapping>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <instanceLifecycle>spot</instanceLifecycle>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <spotInstanceRequestId>sir-vt4i8nhp</spotInstanceRequestId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <virtualizationType>hvm</virtualizationType>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <clientToken>ecec560a-8e89-4735-b2f6-62f066cdd678</clientToken>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <hypervisor>xen</hypervisor>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <networkInterfaceSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <networkInterfaceId>eni-16159f15</networkInterfaceId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <subnetId>subnet-401d891b</subnetId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <vpcId>vpc-308c2256</vpcId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <description/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <ownerId>315913620976</ownerId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <status>in-use</status>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <macAddress>0a:88:50:f6:fa:f8</macAddress>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <privateIpAddress>172.31.1.110</privateIpAddress>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <privateDnsName>ip-172-31-1-110.us-west-2.compute.internal</privateDnsName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <sourceDestCheck>true</sourceDestCheck>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <groupSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupId>sg-3f4e4245</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupName>internet_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupId>sg-514d412b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupName>splunk_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupId>sg-714a460b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupName>internal_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupId>sg-014f437b</groupId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <groupName>ssh_access</groupName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             </groupSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <attachment>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <attachmentId>eni-attach-a897424c</attachmentId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <deviceIndex>0</deviceIndex>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <status>attaching</status>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <attachTime>2017-09-05T21:12:20.000Z</attachTime>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             </attachment>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <association>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <publicIp>34.213.6.200</publicIp>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <publicDnsName>ec2-34-213-6-200.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <ipOwnerId>amazon</ipOwnerId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             </association>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <privateIpAddressesSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <privateIpAddress>172.31.1.110</privateIpAddress>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <privateDnsName>ip-172-31-1-110.us-west-2.compute.internal</privateDnsName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <primary>true</primary>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <association>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <publicIp>34.213.6.200</publicIp>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <publicDnsName>ec2-34-213-6-200.us-west-2.compute.amazonaws.com</publicDnsName>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     <ipOwnerId>amazon</ipOwnerId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                     </association>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                                 </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             </privateIpAddressesSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                             <ipv6AddressesSet/>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     </networkInterfaceSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <ebsOptimized>false</ebsOptimized>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <enaSupport>true</enaSupport>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             </instancesSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <requesterId>AIDAIRZARCNRZMGWWWLII</requesterId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     </reservationSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: </DescribeInstancesResponse>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] DEBUG: Request ec2/DescribeVolumes Details:
2017/09/05 14:12:25 [DEBUG] plugin: terraform: ---[ REQUEST POST-SIGN ]-----------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: POST / HTTP/1.1
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Host: ec2.us-west-2.amazonaws.com
2017/09/05 14:12:25 [DEBUG] plugin: terraform: User-Agent: aws-sdk-go/1.8.34 (go1.8.3; darwin; amd64) APN/1.0 HashiCorp/1.0 Terraform/0.9.11
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Content-Length: 74
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Authorization: AWS4-HMAC-SHA256 Credential=AKIAI3T7422P7PQPG4QQ/20170905/us-west-2/ec2/aws4_request, SignedHeaders=content-length;content-type;host;x-amz-date, Signature=8490dbf540aeaaa53018e1a9f3940e94c304fa4630ccaa4cfbef80b3b004a9b0
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Content-Type: application/x-www-form-urlencoded; charset=utf-8
2017/09/05 14:12:25 [DEBUG] plugin: terraform: X-Amz-Date: 20170905T211225Z
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Accept-Encoding: gzip
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Action=DescribeVolumes&Version=2016-11-15&VolumeId.1=vol-0874ea53b94826aff
2017/09/05 14:12:25 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] DEBUG: Response ec2/DescribeVolumes Details:
2017/09/05 14:12:25 [DEBUG] plugin: terraform: ---[ RESPONSE ]--------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: HTTP/1.1 200 OK
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Connection: close
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Transfer-Encoding: chunked
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Content-Type: text/xml;charset=UTF-8
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Date: Tue, 05 Sep 2017 21:12:24 GMT
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Server: AmazonEC2
2017/09/05 14:12:25 [DEBUG] plugin: terraform: Vary: Accept-Encoding
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: 
2017/09/05 14:12:25 [DEBUG] plugin: terraform: -----------------------------------------------------
2017/09/05 14:12:25 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:12:25 [DEBUG] [aws-sdk-go] <?xml version="1.0" encoding="UTF-8"?>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     <requestId>2c9ff739-6a96-4fed-8a43-944711e14dac</requestId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     <volumeSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:         <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <volumeId>vol-0874ea53b94826aff</volumeId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <size>8</size>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <snapshotId>snap-02b75f85999c3a768</snapshotId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <availabilityZone>us-west-2c</availabilityZone>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <status>in-use</status>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <createTime>2017-09-05T21:12:20.493Z</createTime>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <attachmentSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 <item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <volumeId>vol-0874ea53b94826aff</volumeId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <instanceId>i-00b17205e6ce0e56a</instanceId>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <device>/dev/xvda</device>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <status>attaching</status>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <attachTime>2017-09-05T21:12:20.000Z</attachTime>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                     <deleteOnTermination>true</deleteOnTermination>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:                 </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             </attachmentSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <volumeType>gp2</volumeType>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <iops>100</iops>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:             <encrypted>false</encrypted>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:         </item>
2017/09/05 14:12:25 [DEBUG] plugin: terraform:     </volumeSet>
2017/09/05 14:12:25 [DEBUG] plugin: terraform: </DescribeVolumesResponse>
2017/09/05 14:12:25 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:12:25 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2017/09/05 14:12:25 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:25 connecting to TCP connection for SSH
2017/09/05 14:12:29 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:29 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:29 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:29 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:29 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:34 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:34 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:34 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:34 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:34 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:39 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:39 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:39 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:39 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:39 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:40 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:40 connection error: dial tcp 34.213.6.200:22: i/o timeout
2017/09/05 14:12:40 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:40 Retryable error: dial tcp 34.213.6.200:22: i/o timeout
2017/09/05 14:12:43 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:43 connecting to TCP connection for SSH
2017/09/05 14:12:44 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:44 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:44 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:44 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:44 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:49 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:49 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:49 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:49 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:49 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:54 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:54 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:54 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:54 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:54 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:58 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:58 connection error: dial tcp 34.213.6.200:22: i/o timeout
2017/09/05 14:12:58 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:12:58 Retryable error: dial tcp 34.213.6.200:22: i/o timeout
2017/09/05 14:12:59 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:59 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:59 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:12:59 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:12:59 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:01 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:01 connecting to TCP connection for SSH
2017/09/05 14:13:04 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:04 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:13:04 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:04 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:04 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:08 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:08 connection error: dial tcp 34.213.6.200:22: getsockopt: connection refused
2017/09/05 14:13:08 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:08 Retryable error: dial tcp 34.213.6.200:22: getsockopt: connection refused
2017/09/05 14:13:09 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:09 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:09 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:13:09 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:09 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:11 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:11 connecting to TCP connection for SSH
2017/09/05 14:13:11 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:11 connection error: dial tcp 34.213.6.200:22: getsockopt: connection refused
2017/09/05 14:13:11 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:11 Retryable error: dial tcp 34.213.6.200:22: getsockopt: connection refused
2017/09/05 14:13:14 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:14 connecting to TCP connection for SSH
2017/09/05 14:13:14 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:14 handshaking with SSH
2017/09/05 14:13:14 [DEBUG] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/05 14:13:14 [DEBUG] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:14 [DEBUG] dag/walk: vertex "provisioner.file (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:14 [DEBUG] dag/walk: vertex "provisioner.remote-exec (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:14 [DEBUG] dag/walk: vertex "provider.aws (close)", waiting for: "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 opening new ssh session
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 Starting remote scp process:  scp -vt ~/.ssh
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 Started SCP session, beginning transfers...
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 Copying input data into temporary file so we can read the length
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 Beginning file upload...
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 SCP session complete, closing stdin pipe.
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 Waiting for SSH session to complete.
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 scp stderr (length 27): Sink: C0644 1675 my_github
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 connecting to TCP connection for SSH
2017/09/05 14:13:15 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:15 handshaking with SSH
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 opening new ssh session
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Starting remote scp process:  scp -vt ~/.ssh
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Started SCP session, beginning transfers...
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Copying input data into temporary file so we can read the length
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Beginning file upload...
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 SCP session complete, closing stdin pipe.
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Waiting for SSH session to complete.
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 scp stderr (length 23): Sink: C0644 116 config
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 connecting to TCP connection for SSH
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 handshaking with SSH
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 opening new ssh session
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Starting remote scp process:  scp -vt ~
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Started SCP session, beginning transfers...
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Copying input data into temporary file so we can read the length
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Beginning file upload...
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 SCP session complete, closing stdin pipe.
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 Waiting for SSH session to complete.
2017/09/05 14:13:16 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:16 scp stderr (length 34): Sink: C0644 196 clone_mtg_work.sh
2017/09/05 14:13:16 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:16 connecting to TCP connection for SSH
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 handshaking with SSH
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 opening new ssh session
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 Starting remote scp process:  scp -vt /tmp
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 Started SCP session, beginning transfers...
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 Beginning file upload...
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 SCP session complete, closing stdin pipe.
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 Waiting for SSH session to complete.
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 scp stderr (length 39): Sink: C0644 110 terraform_363098917.sh
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 opening new ssh session
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 starting remote command: chmod 0777 /tmp/terraform_363098917.sh
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 remote command exited with '0': chmod 0777 /tmp/terraform_363098917.sh
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 opening new ssh session
2017/09/05 14:13:17 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:17 starting remote command: /tmp/terraform_363098917.sh
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 remote command exited with '0': /tmp/terraform_363098917.sh
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 opening new ssh session
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 Starting remote scp process:  scp -vt /tmp
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 Started SCP session, beginning transfers...
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 Copying input data into temporary file so we can read the length
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 Beginning file upload...
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 SCP session complete, closing stdin pipe.
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 Waiting for SSH session to complete.
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 scp stderr (length 37): Sink: C0644 0 terraform_363098917.sh
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalIf
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalWriteState
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalWriteDiff
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalApplyPost
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2017/09/05 14:13:18 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:13:18 [TRACE] [walkApply] Exiting eval tree: aws_spot_instance_request.mtg_worker01
2017/09/05 14:13:18 [DEBUG] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/05 14:13:18 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/05 14:13:18 [DEBUG] dag/walk: walking "provisioner.remote-exec (close)"
2017/09/05 14:13:18 [DEBUG] vertex 'root.provisioner.remote-exec (close)': walking
2017/09/05 14:13:18 [DEBUG] dag/walk: walking "provider.aws (close)"
2017/09/05 14:13:18 [DEBUG] vertex 'root.provider.aws (close)': walking
2017/09/05 14:13:18 [DEBUG] dag/walk: walking "provisioner.file (close)"
2017/09/05 14:13:18 [DEBUG] vertex 'root.provisioner.file (close)': walking
2017/09/05 14:13:18 [DEBUG] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/05 14:13:18 [DEBUG] vertex 'root.provisioner.file (close)': evaluating
2017/09/05 14:13:18 [TRACE] [walkApply] Entering eval tree: provisioner.file (close)
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:13:18 [DEBUG] vertex 'root.provider.aws (close)': evaluating
2017/09/05 14:13:18 [TRACE] [walkApply] Exiting eval tree: provisioner.file (close)
2017/09/05 14:13:18 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/05 14:13:18 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.tcp_internal_access.0", replace "aws_security_group.tcp_internal_access"
2017/09/05 14:13:18 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.splunk_access.0", replace "aws_security_group.splunk_access"
2017/09/05 14:13:18 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.internet_access.0", replace "aws_security_group.internet_access"
2017/09/05 14:13:18 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_spot_instance_request.mtg_worker01.0", replace "aws_spot_instance_request.mtg_worker01"
2017/09/05 14:13:18 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "aws_security_group.ssh_access.0", replace "aws_security_group.ssh_access"
2017/09/05 14:13:18 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/05 14:13:18 [DEBUG] vertex 'root.provisioner.remote-exec (close)': evaluating
2017/09/05 14:13:18 [TRACE] [walkApply] Entering eval tree: provider.aws (close)
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalCloseProvider
2017/09/05 14:13:18 [TRACE] [walkApply] Entering eval tree: provisioner.remote-exec (close)
2017/09/05 14:13:18 [DEBUG] root: eval: *terraform.EvalCloseProvisioner
2017/09/05 14:13:18 [TRACE] [walkApply] Exiting eval tree: provider.aws (close)
2017/09/05 14:13:18 [TRACE] [walkApply] Exiting eval tree: provisioner.remote-exec (close)
2017/09/05 14:13:18 [DEBUG] dag/walk: walking "root"
2017/09/05 14:13:18 [DEBUG] vertex 'root.root': walking
2017/09/05 14:13:18 [TRACE] Preserving existing state lineage "b74a6eac-da41-4ee0-b94c-4b8b8a96fb55"
2017/09/05 14:13:18 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:13:18 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:18 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:13:18 [DEBUG] plugin: terraform: remote-exec-provisioner (internal) 2017/09/05 14:13:18 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:13:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:13:18 [ERR] plugin: plugin server: accept unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin485818763: use of closed network connection
2017/09/05 14:13:18 [DEBUG] plugin: terraform: file-provisioner (internal) 2017/09/05 14:13:18 [ERR] plugin: plugin server: accept unix /var/folders/rl/j4vxcm2s6vv3hptj5dfbs1fr0000gq/T/plugin267782309: use of closed network connection
2017/09/05 14:13:18 [DEBUG] plugin: terraform: aws-provider (internal) 2017/09/05 14:13:18 [DEBUG] plugin: waiting for all plugin processes to complete...
2017/09/05 14:13:18 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 14:13:18 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
2017/09/05 14:13:18 [DEBUG] plugin: /usr/local/Cellar/terraform/0.9.11/bin/terraform: plugin process exited
